for (i in unique(sesame$id)) {
no.tx<- (sesame$viewenc==1)
lm.notx<- lm(sesame$postnumb~sesame$prenumb, subset  = no.tx)
lm.tx<- lm(sesame$postnumb~sesame$encour + sesame$prenumb + sesame$encour:sesame$prenumb )
}
summary(lm.notx)
summary(lm.tx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(foreign)
library(arm)
library(ggplot2)
library(dplyr)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_data/sesame")
sesame <- read.dta("sesame.dta")
for (i in unique(sesame$id)) {
no.tx<- (sesame$viewenc==1)
lm.notx<- lm(sesame$postnumb~sesame$prenumb, subset  = no.tx)
lm.tx<- lm(sesame$postnumb~sesame$encour + sesame$prenumb + sesame$encour:sesame$prenumb )
}
summary(lm.notx)
summary(lm.tx)
tx<-ggplot(sesame, aes(prenumb,postnumb)) +geom_point(aes(col=encour)) +
stat_smooth(method="lm")
plot(tx)
control<-sesame %>%
filter(viewenc == 1)
lm.co<- lm(postlet~prelet, data=control)
summary(lm.co)
no.encour<-ggplot(control, aes(prenumb,postnumb)) + geom_point(aes(col=encour)) +
stat_smooth(method="lm")
plot(no.encour)
library(arm)
Data<-data.frame(category=seq(1,8,1),
numpers=c(300,300,500,500,200,200,200,200),
x.treat=rep(0:1,4),
t.treat=rep(c(0,0,1,1),2),
y0=c(rep(4,4),rep(10,4)),
y1=c(rep(6,4),rep(12,4)))
Data<-cbind(Data,y=c(4,4,6,6,10,10,12,12))
Treatment.effect.i<-y1-y0
names(bypass.data)
head (bypass.data)
dim(bypass.data)
str(bypass.data)
bypass.data <- read.delim("/var/folders/24/gxkvcqyd525_zhq0nyldzv6c0000gn/T//Rtmp66f3cb/databf894e3f5b72")
View(bypass.data)
names(bypass.data)
head (bypass.data)
dim(bypass.data)
str(bypass.data)
plot(postlet~prelet, data=sesame, type="n")
points(postlet~prelet, data=subset(sesame, viewenc==1), col="dodgerblue4")
points(postlet~prelet, data=subset(sesame, viewenc==2), col="firebrick3")
quick11alet <- lm(postlet~viewenc+prelet, data=sesame)
display(quick11alet)
quick11alet <- lm(postlet~viewenc+prelet+viewenc*prelet, data=sesame)
display(quick11alet)
plot(postnumb~prenumb, data=sesame, type="n")
points(postnumb~prenumb, data=subset(sesame, viewenc==1), col="dodgerblue4")
points(postnumb~prenumb, data=subset(sesame, viewenc==2), col="firebrick3")
quick11anumb <- lm(postnumb~viewenc+prenumb, data=sesame)
display(quick11anumb)
plot(postlet~prelet, data=sesame, type="n")
points(postlet~prelet, data=subset(sesame, regular==0), col="dodgerblue4")
points(postlet~prelet, data=subset(sesame, regular==1), col="firebrick3")
View(sesame)
quick11blet <- lm(postlet~regular+prelet, data=sesame)
display(quick11blet)
plot(postnumb~prenumb, data=sesame, type="n")
points(postnumb~prenumb, data=subset(sesame, regular==0), col="dodgerblue4")
points(postnumb~prenumb, data=subset(sesame, regular==1), col="firebrick3")
quick11bnumb <- lm(postnumb~regular+prenumb, data=sesame)
display(quick11bnumb)
quick11blet <- lm(postlet~regular+prelet+regular*prelet, data=sesame)
display(quick11blet)
filter(sesame,viewenc==2&regular==1)
filter(sesame, regular==1)
library(arm)
Data<-data.frame(category=seq(1,8,1),
numpers=c(300,300,500,500,200,200,200,200),
x.treat=rep(0:1,4),
t.treat=rep(c(0,0,1,1),2),
y0=c(rep(4,4),rep(10,4)),
y1=c(rep(6,4),rep(12,4)))
Data<-cbind(Data,y=c(4,4,6,6,10,10,12,12))
Treatment.effect.i<-y1-y0
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(arm)
Data<-data.frame(category=seq(1,8,1),
numpers=c(300,300,500,500,200,200,200,200),
x.treat=rep(0:1,4),
t.treat=rep(c(0,0,1,1),2),
y0=c(rep(4,4),rep(10,4)),
y1=c(rep(6,4),rep(12,4)))
Data<-cbind(Data,y=c(4,4,6,6,10,10,12,12))
Treatment.effect.i<-y1-y0
Data<-data.frame(category=seq(1,8,1),
numpers=c(300,300,500,500,200,200,200,200),
x.treat=rep(0:1,4),
t.treat=rep(c(0,0,1,1),2),
y0=c(rep(4,4),rep(10,4)),
y1=c(rep(6,4),rep(12,4)))
Data<-cbind(Data,y=c(4,4,6,6,10,10,12,12))
Treatment.effect.i<-y1-y0
y0<-c(rep(4,4),rep(10,4)),
Data<-data.frame(category=seq(1,8,1),
numpers=c(300,300,500,500,200,200,200,200),
x.treat=rep(0:1,4),
t.treat=rep(c(0,0,1,1),2),
y0<-c(rep(4,4),rep(10,4)),
y1<-c(rep(6,4),rep(12,4)))
Data<-cbind(Data,y=c(4,4,6,6,10,10,12,12))
Treatment.effect.i<-y1-y0
View(Data)
meantreat<-list()
for(i in 1:nrow(Data)){
meantreat[[i]]<-Data[i,2]*(Data[i,6]-Data[i,5])
}
mean.effect<-do.call(sum,meantreat)/2400
View(mean.effect)
print(i)
print(mean.effect)
effect.by.treatment<-aggregate(Data["y"], Data["t.treat"], FUN=mean)
meantreat.yes<-list()
meantreat.no<-list()
for(i in 1:nrow(Data)){
if(Data[i,4]==0){
meantreat.no[[i]]<-Data[i,2]*(Data[i,6]-Data[i,5])
} else {
meantreat.yes[[i]]<-Data[i,2]*(Data[i,6]-Data[i,5])
}
}
mean.effect.yes.vs.no<-do.call(sum,na.omit(meantreat.yes))/1400-do.call(sum,na.omit(meantreat.no))/1000
mean.eff.no<-(4*600+10*400)/1000
mean.eff.yes<-(6*1000+12*400)/1400
print(i)
View(effect.by.treatment)
head(mean.eff.no)
trying.lm<- lm(y~t.treat+x.treat, data=Data)
summarytrying)
plot(trying.lm)
trying.lm<- lm(y~t.treat+x.treat, data=Data)
summary(trying.lm)
plot(new~severity, data=bypass.data)
bypass.data <- read.delim("/var/folders/24/gxkvcqyd525_zhq0nyldzv6c0000gn/T//Rtmp66f3cb/databf89432c91c7")
View(bypass.data)
plot(new~severity, data=bypass.data)
new.data <- subset(bypass.data, new==1)
old.data <- subset(bypass.data, new==0)
hist(new.data$severity,
hist(old.data$severity,
hist(new.data$severity,
breaks=10,
main="Disease Severity",
xlab="Severity",
col="gray")
)
)
hist(new.data$severity,
breaks=10,
main="Disease Severity",
xlab="Severity",
col="gray")
hist(old.data$severity,
breaks=10,
main="Disease Severity",
xlab="Severity",
col="navy blue",
add=T)
plot(age ~ severity, data=bypass.data)
points(age ~ severity, data=subset(bypass.data, new==1), col="dodgerblue4")
points(age ~ severity, data=subset(bypass.data, new==0), col="firebrick3")
abline(coef(disease.age)[1], coef(disease.age)[2])
disease.age <- lm(age~severity, data=bypass.data)
display(disease.age)
mod1<-lm(stay~new + age + severity + age:severity, data=bypass.data)
display(mod1)
oldies<-subset(bypass.data, age > 75 & age < 85)
dis.oldies <- lm(stay~age+new, data=oldies)
display(dis.oldies)
mod2 <- lm(stay~age+new, data=bypass.data)
display(mod2)
mod3 <- lm(stay~age+new+age:new, data=bypass.data)
display(mod3)
z <- bypass.data$age-80
mod4 <- lm(stay ~ age+I(z*(new==0)) + I(z*(new==1)), data=bypass.data)
display(mod4) #Why does this output look so weird?
sev.mod <- lm(stay~age+severity+new, data=bypass.data)
display(sev.mod)
sev.mod2<- lm(stay~age+severity+new+severity:age+age:new+severity:new, data=bypass.data)
display(sev.mod2)
dis.oldies2 <- lm(stay~age+new+severity, data=oldies)
display(dis.oldies2)
plot(new~severity, data=bypass.data)
plot(age ~ severity, data=bypass.data)
points(age ~ severity, data=subset(bypass.data, new==1), col="dodgerblue4")
points(age ~ severity, data=subset(bypass.data, new==0), col="firebrick3")
abline(coef(disease.age)[1], coef(disease.age)[2])
mod1<-lm(stay~new + severity, data=bypass.data)
display(mod1)
mod1<-lm(stay~new + severity + new*severity, data=bypass.data)
display(mod1)
mod1<-lm(stay~new + severity, data=bypass.data)
display(mod1)
mod1<-lm(stay~new + age, data=bypass.data)
display(mod1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("~/Documents/git/springfreeze/input")
dis.oldies2 <- lm(stay~age+new+severity, data=oldies)
method<-read.csv("method.test.csv",header=TRUE,sep=",")
FSI.table<- method %>%
select(year, FSI_npn, FSI_okeefe, FSI_cam, FSI_obs) %>%
rename(okeefe.small = FSI_okeefe)%>%
rename(phenocam = FSI_cam) %>%
rename(npn = FSI_npn) %>%
rename(okeefe.large = FSI_obs) %>%
filter(year>=2008) %>%
filter(year<2015)
blend<-FSI.table %>%
gather(Method, FSI, -year) %>%
arrange(year)
ggplot(blend, (aes(Method, FSI)), xlab="Method", ylab="FSI") +
geom_boxplot(fill=c("#F8766D","#00C094","#00B6EB","#A58AFF"))
FSI.table<- method %>%
select(year, FSI_npn, FSI_okeefe, FSI_cam, FSI_obs, FSI_sm) %>%
rename(okeefe.accurate = FSI_okeefe)%>%
rename(phenocam = FSI_cam) %>%
rename(npn = FSI_npn) %>%
rename(okeefe.large = FSI_obs) %>%
rename(okeefe.small = FSI_sm) %>%
filter(year>=2008) %>%
filter(year<2015)
blend<-FSI.table %>%
gather(Method, FSI, -year) %>%
arrange(year)
ggplot(blend, (aes(Method, FSI)), xlab="Method", ylab="FSI") +
geom_boxplot(fill=c("#F8766D","#00C094","#00B6EB","#A58AFF"))
ggplot(blend, (aes(Method, FSI)), xlab="Method", ylab="FSI") +
geom_boxplot(fill=c("#F8766D","#00C094","#00B6EB","#A58AFF","#00C094"))
ggplot(blend, (aes(Method, FSI)), xlab="Method", ylab="FSI") +
geom_boxplot(fill=c("#F8766D","#00C094","#00B6EB","#A58AFF","firebrickred4"))
ggplot(blend, (aes(Method, FSI)), xlab="Method", ylab="FSI") +
geom_boxplot(fill=c("#F8766D","#00C094","#00B6EB","#A58AFF","firebrick4"))
ggplot(blend, (aes(Method, FSI)), xlab="Method", ylab="FSI") +
geom_boxplot(fill=c("#F8766D","#00C094","#00B6EB","#A58AFF","firebrick2"))
ggplot(blend, (aes(Method, FSI)), xlab="Method", ylab="FSI") +
geom_boxplot(fill=c("#F8766D","#00C094","#00B6EB","#A58AFF","firebrick3"))
methodplot<-ggplot(blend, aes(year, FSI)) + xlab("Year") +
ylab("False Spring Index") + scale_x_continuous(limits = c(2008,2014),breaks=seq(2008,2014,1)) +
geom_point(aes(col=Method)) + scale_color_manual(values=c("#F8766D","#00C094","#00B6EB","#A58AFF", "firebrick3")) +
geom_smooth(method="loess")
plot(methodplot)
pearson<-cor(FSI.table, method="pearson")
pearson
