mydata <- read.csv("fish.species.csv" , header=TRUE)
attach(mydata)
install.packages("swirl")
library("swirl")
swirl()
library(vegan)
install.packages("swirl")
swirl()
library(swirl)
swirl()
?picante
help(picante)
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
# Install Packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("ggplot2", "plyr", "dplyr", "tidyr", "tidytext",
"purrr", "Hmisc", "lme4","rstan","shinystan","picante")
ipak(packages)
?fixef
?ranef
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rstan, type="source")
install.packages("rstan, type= "source")
install.packages("rstan", type= "source")
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
rstan:::rstudio_stanc("Documents/Temporal Ecology/Stanleyi/nesting_ex.stan")
install.LaTeX2RTF(page_with_download_url = "http://sourceforge.net/projects/latex2rtf/", ...)
install.packages("LaTeX2RTF")
library(LaTeX2RTF)
install.LaTeX2RTF
install.LaTeX2RTF()
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
europe<-read.csv("input/europe.lat.csv", header=TRUE)
america<-read.csv("input/america.lat.csv", header=TRUE)
eur.lm<-lm(europe$Latitude~europe$False.Springs)
display(eur.lm)
library(arm)
display(eur.lm)
display(eur.lm)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# Integrate Phenology Data and compare methodologies
# Set Working Directory
setwd("~/Documents/git/springfreeze/input")
method<-read.csv("method.test.csv",header=TRUE,sep=",")
FSI.table<- method %>%
select(year, FSI_npn, FSI_okeefe, FSI_cam) %>%
rename(okeefe.accurate = FSI_okeefe)%>%
rename(phenocam = FSI_cam) %>%
rename(npn = FSI_npn) %>%
filter(year>=2008) %>%
filter(year<2015)
FSI.table<- method %>%
select(year, FSI_npn, FSI_okeefe, FSI_cam)
FSI.table<- method
select(FSI.table, year, FSI_npn, FSI_okeefe, FSI_cam) %>%
rename(okeefe = FSI_okeefe)%>%
rename(phenocam = FSI_cam) %>%
rename(npn = FSI_npn) %>%
filter(year>=2008) %>%
filter(year<2015)
FSI.table<- method %>%
select(year, FSI_npn, FSI_okeefe, FSI_cam) %>%
rename(okeefe = FSI_okeefe)%>%
rename(phenocam = FSI_cam) %>%
rename(npn = FSI_npn) %>%
filter(year>=2008) %>%
filter(year<2015)
FSI.table<- method %>%
dplyr::select(year, FSI_npn, FSI_okeefe, FSI_cam) %>%
rename(okeefe = FSI_okeefe)%>%
rename(phenocam = FSI_cam) %>%
rename(npn = FSI_npn) %>%
filter(year>=2008) %>%
filter(year<2015)
