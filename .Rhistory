sum.m<-summary(m)
cri.f<-as.data.frame(sum.m$fixed[,c("Estimate", "l-95% CI", "u-95% CI")])
cri.f<-cri.f[-1,] #removing the intercept
fdf1<-as.data.frame(rbind(as.vector(cri.f[,1]), as.vector(cri.f[,2]), as.vector(cri.f[,3])))
fdf2<-cbind(fdf1, c(0, 0, 0) , c("Estimate", "2.5%", "95%"))
names(fdf2)<-c(rownames(cri.f), "species", "perc")
cri.r<-(ranef(m, summary = TRUE, robust = FALSE,
probs = c(0.025, 0.975)))$species
cri.r2<-cri.r[, ,-1]
cri.r2<-cri.r2[,-2,]
dims<-dim(cri.r2)
twoDimMat <- matrix(cri.r2, prod(dims[1:2]), dims[3])
mat2<-cbind(twoDimMat, c(rep(1:2, length.out=6)), rep(c("Estimate", "2.5%", "95%"), each=2))
df<-as.data.frame(mat2)
names(df)<-c(rownames(cri.f), "species", "perc")
dftot<-rbind(fdf2, df)
dflong<- tidyr::gather(dftot, var, value, nao:sm.elev, factor_key=TRUE)
dflong<- tidyr::gather(dftot, var, value, frost:bud, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=9)) {
for (j in seq(from=3, to=8, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$species>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$species<-as.factor(dfwide$species)
fit<-lm(dvr~frost+bud+(1|species)+(frost-1|species)+(bud-1|species), data=d)
fit<-lmer(dvr~frost+bud+(1|species)+(frost-1|species)+(bud-1|species), data=d)
load("/Users/CatherineChamberlain/Desktop/sandbox/fit.Rdata")
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.inter.csv", header=TRUE)
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv", header=TRUE)
bb.stan<-subset(bb.stan, select=c("fs.count, m.index, sp.temp, cc"))
bb.stan<-subset(bb.stan, select=c("fs.count", "m.index", "sp.temp", "cc"))
bb.stan<-bb.stan[!duplicated(bb.stan),]
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/analyses/output/brm.Rdata")
brm.full.nointer
load("/Users/CatherineChamberlain/Documents/git/regionalrisk/brm.Rdata")
brm.full.nointer
bb.stan<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv", header=TRUE)
bb.stan<-subset(bb.stan, select=c("fs.count", "m.index", "sp.temp", "cc", "sm.elev", "space"))
bb.stan<-bb.stan[!duplicated(bb.stan),]
bb.stan<-na.omit(bb.stan)
View(bb.stan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
## Libraries
library(brms)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-bb.stan[sample(nrow(bb.stan), 500), ]
brm.simple<-brm(fs.count~m.index+sp.temp+cc+sm.elev+space+m.index:cc+sp.temp:cc+
sm.elev:cc+space:cc, data=bb, chains=2, cores=4)
brm.simple
d<-read.csv("~/Documents/git/regionalrisk/analyses/output/bb.brm.nointer.csv")
colnames(d)
aes<-subset(d, species=="AESHIP")
length(unque(aes$space))
length(unique(aes$space))
d<-read.csv("~/Documents/git/regionalrisk/analyses/output/regrisk.cleaned.csv")
d<-d[!duplicated(d),]
d<-na.omit(d)
colnames(d)
aes<-subset(d, species=="AESHIP")
length(unique(aes$lat.long))
length(unique(aes$year))
bet<-subset(d, species=="BETPEN")
length(unique(aes$lat.long))
length(unique(bet$year))
aln<-subset(d, species=="ALNGLU")
length(unique(aln$lat.long))
length(unique(bet$lat.long))
fsy<-subset(d, species=="FAGSYL")
length(unique(fsy$lat.long))
fra<-subset(d, species=="FRAEXC")
length(unique(fra$lat.long))
length(unique(fra$year))
que<-subset(d, species=="QUEROB")
length(unique(que$lat.long))
length(unique(que$year))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(ggplot2)
library(rstan)
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
library(gridExtra)
library(brms)
library(egg)
library(ggstance)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/danfdata.csv", header=TRUE)
#dx<-read.csv("output/fakedata_dvr.csv", header=TRUE)
#dx<-read.csv("output/danf_short.csv", header=TRUE)
#dfwide<-read.csv("output/df_modforplot.csv", header=TRUE)
# Prep
#dx<-dx[!(dx$chill==1),]
#dx$chill<-ifelse(dx$chill==2, 0, 1)
#dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx$sp <- as.numeric(as.factor(dx$sp))
#dx$site <- as.numeric(as.factor(dx$site))
dx<-dx[!is.na(dx$risk),]
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$warm<-ifelse(dx$warm==15, 0, 1)
dx$photo <- as.numeric(dx$photo)
dx$photo<-ifelse(dx$photo==8, 0, 1)
dx$chill <- as.numeric(dx$chill)
#dx$site<- as.numeric(dx$site)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
#with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
dxb$force<-dxb$warm
#fit.brm<-brm(risk~ force + photo + chill + force:photo + force:chill +
#             photo:chill + (force + photo + chill + force:photo + force:chill +
#                                      photo:chill|sp), data=dxb)
fit.brm2<-brm(risk~ force + photo + chill1 + chill2 + force:photo + force:chill1 + force:chill2 +
photo:chill1 + photo:chill2 + (force + photo + chill1 + chill2 + force:photo +
force:chill1 + force:chill2 +
photo:chill1 + photo:chill2|sp), data=dxb)
save(fit.brm2, file="~/Documents/git/springfreeze/output/exp_output.Rdata")
m<-fit.brm2
m.int<-posterior_interval(m)
sum.m<-summary(m)
cri.f<-as.data.frame(sum.m$fixed[,c("Estimate", "l-95% CI", "u-95% CI")])
#cri.f<-cri.f[-1,] #removing the intercept
fdf1<-as.data.frame(rbind(as.vector(cri.f[,1]), as.vector(cri.f[,2]), as.vector(cri.f[,3])))
fdf2<-cbind(fdf1, c(0, 0, 0) , c("Estimate", "2.5%", "95%"))
names(fdf2)<-c(rownames(cri.f), "sp", "perc")
cri.r<-(ranef(m, summary = TRUE, robust = FALSE,
probs = c(0.025, 0.975)))$sp
cri.r2<-cri.r[, ,-1]
cri.r2<-cri.r2[,-2,]
dims<-dim(cri.r2)
twoDimMat <- matrix(cri.r2, prod(dims[1:2]), dims[3])
mat2<-cbind(twoDimMat, c(rep(1:9, length.out=27)), rep(c("Estimate", "2.5%", "95%"), each=9))
df<-as.data.frame(mat2)
names(df)<-c(rownames(cri.f), "sp", "perc")
dftot<-rbind(fdf2, df)
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
m<-fit.brm2
m.int<-posterior_interval(m)
sum.m<-summary(m)
cri.f<-as.data.frame(sum.m$fixed[,c("Estimate", "l-95% CI", "u-95% CI")])
cri.f<-cri.f[-1,] #removing the intercept
fdf1<-as.data.frame(rbind(as.vector(cri.f[,1]), as.vector(cri.f[,2]), as.vector(cri.f[,3])))
fdf2<-cbind(fdf1, c(0, 0, 0) , c("Estimate", "2.5%", "95%"))
names(fdf2)<-c(rownames(cri.f), "sp", "perc")
cri.r<-(ranef(m, summary = TRUE, robust = FALSE,
probs = c(0.025, 0.975)))$sp
cri.r2<-cri.r[, ,-1]
cri.r2<-cri.r2[,-2,]
dims<-dim(cri.r2)
twoDimMat <- matrix(cri.r2, prod(dims[1:2]), dims[3])
mat2<-cbind(twoDimMat, c(rep(1:9, length.out=27)), rep(c("Estimate", "2.5%", "95%"), each=9))
df<-as.data.frame(mat2)
names(df)<-c(rownames(cri.f), "sp", "perc")
dftot<-rbind(fdf2, df)
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=30)) {
for (j in seq(from=3, to=29, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$sp>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$sp<-as.factor(dfwide$sp)
pd <- position_dodgev(height = -0.5)
estimates<-c("Forcing", "Photoperiod", "Chilling 1.5", "Chilling 4", "Forcing x Photoperiod",
"Forcing x Chilling 1.5", "Forcing x Chilling 4", "Photoperiod x Chilling 1.5", "Photoperiod x Chilling 4")
dfwide$legend<-factor(dfwide$sp,
labels=c("Overall Effects","1","2","3","4","5","6","7","8","9"))
estimates<-rev(estimates)
#write.csv(dfwide, file="~/Documents/git/springfreeze/output/df_modforplot.csv", row.names=FALSE)
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=legend, size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0, width=0)+
geom_vline(xintercept=0)+
scale_colour_manual(values=c("blue", "firebrick3", "orangered1","orange3", "sienna4","sienna2", "green4", "green3", "purple2", "magenta3"),
breaks=c("Overall Effects"))+
scale_size_manual(values=c(3, 2, 2, 2, 2, 2, 2, 2, 2, 2)) +
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5)) +
guides(size=FALSE, alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var))), labels=estimates) + ylab("") +
labs(col="Effects") + theme(legend.position = "none", legend.box.background = element_rect(),
legend.title=element_blank(), legend.key.size = unit(0.05, "cm"),
panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank()) +
xlab(expression(atop("Model Estimate of Change ", paste("in Duration of Vegetative Risk (days)"))))
fig1
### Now make a new dataframe for more conceptual figure
## Do I add the intercept? Which is 23.71...
simple<-subset(dfwide, select=c("sp", "var", "Estimate"))
#simple<-simple[(simple$sp=="1"|simple$sp=="4"|simple$sp=="8"),]
#simple$sp<-ifelse(simple$sp=="4", "1", "9")
simple<-simple[!(simple$sp=="0"),]
simple$var<-ifelse(simple$var=="chill2", "chill", as.character(simple$var))
simple$var<-ifelse(simple$var=="force:chill2", "force:chill", as.character(simple$var))
estimates<-c("More Forcing", "Shorter Photoperiod", "Less Chilling", "More Forcing and \nShorter Photoperiod",
"More Forcing and \nLess Chilling")
#pd <- position_dodgev(height = -0.5)
#simple$Jvar <- ave(as.numeric(simple$var), simple$var,
#                         FUN = function(x) x + rnorm(length(x), sd = .1))
simple$Jvar<-NA
simple$Jvar<-ifelse(simple$var=="force", 5, simple$var)
simple$Jvar<-ifelse(simple$var=="photo", 4, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="chill", 3, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:photo", 2, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:chill", 1, simple$Jvar)
simple$Jvar2<-as.numeric(simple$Jvar)
simple$spp<-(as.numeric(simple$sp)-1)*0.1
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
View(simple)
### Now make a new dataframe for more conceptual figure
## Do I add the intercept? Which is 23.71...
simple<-subset(dfwide, select=c("sp", "var", "Estimate"))
#simple<-simple[(simple$sp=="1"|simple$sp=="4"|simple$sp=="8"),]
#simple$sp<-ifelse(simple$sp=="4", "1", "9")
simple<-simple[!(simple$sp=="0"),]
simple<-simple[!(simple$var=="photo:chill1" | simple$var=="photo:chill2" | simple$var=="force:chill1"
| simple$var=="chill1"),]
simple$var<-ifelse(simple$var=="chill2", "chill", as.character(simple$var))
simple$var<-ifelse(simple$var=="force:chill2", "force:chill", as.character(simple$var))
estimates<-c("More Forcing", "Shorter Photoperiod", "Less Chilling", "More Forcing and \nShorter Photoperiod",
"More Forcing and \nLess Chilling")
#pd <- position_dodgev(height = -0.5)
#simple$Jvar <- ave(as.numeric(simple$var), simple$var,
#                         FUN = function(x) x + rnorm(length(x), sd = .1))
simple$Jvar<-NA
simple$Jvar<-ifelse(simple$var=="force", 5, simple$var)
simple$Jvar<-ifelse(simple$var=="photo", 4, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="chill", 3, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:photo", 2, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:chill", 1, simple$Jvar)
simple$Jvar2<-as.numeric(simple$Jvar)
simple$spp<-(as.numeric(simple$sp)-1)*0.1
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
simple$Estimate<-ifelse(simple$var=="photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="chill", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:chill", -simple$Estimate, simple$Estimate)
species<-unique(simple$sp)
simple$est2<-NA
for(i in c(1:length(species))) {
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:photo", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="photo" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:photo" & simple$sp==species[i]], simple$est2)
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:chill", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="chill" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:chill" & simple$sp==species[i]], simple$est2)
}
estimates<-rev(estimates)
exp<-ggplot(simple, aes(x=23.71, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 4.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 4.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
quartz()
exp
exp<-ggplot(simple, aes(x=23.71, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 4.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 4.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
simple<-subset(dfwide, select=c("sp", "var", "Estimate"))
#simple<-simple[(simple$sp=="1"|simple$sp=="4"|simple$sp=="8"),]
#simple$sp<-ifelse(simple$sp=="4", "1", "9")
simple<-simple[!(simple$sp=="0"),]
simple<-simple[!(simple$var=="photo:chill1" | simple$var=="photo:chill2" | simple$var=="force:chill1"
| simple$var=="chill1"),]
simple$var<-ifelse(simple$var=="chill2", "chill", as.character(simple$var))
simple$var<-ifelse(simple$var=="force:chill2", "force:chill", as.character(simple$var))
estimates<-c("More Forcing", "Shorter Photoperiod", "Less Chilling", "More Forcing and \nShorter Photoperiod",
"More Forcing and \nLess Chilling")
#pd <- position_dodgev(height = -0.5)
#simple$Jvar <- ave(as.numeric(simple$var), simple$var,
#                         FUN = function(x) x + rnorm(length(x), sd = .1))
simple$Jvar<-NA
simple$Jvar<-ifelse(simple$var=="force", 5, simple$var)
simple$Jvar<-ifelse(simple$var=="photo", 4, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="chill", 3, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:photo", 2, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:chill", 1, simple$Jvar)
simple$Jvar2<-as.numeric(simple$Jvar)
simple$spp<-(as.numeric(simple$sp)-1)*0.05
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
#simple$Jvar2<-ifelse(simple$sp=="4", simple$Jvar2-0.1, simple$Jvar2)
#simple$Jvar2<-ifelse(simple$sp=="8", simple$Jvar2-0.2, simple$Jvar2)
simple$Estimate<-ifelse(simple$var=="photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="chill", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:chill", -simple$Estimate, simple$Estimate)
species<-unique(simple$sp)
simple$est2<-simple$Estimate
for(i in c(1:length(species))) {
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:photo", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="photo" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:photo" & simple$sp==species[i]], simple$est2)
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:chill", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="chill" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:chill" & simple$sp==species[i]], simple$est2)
}
estimates<-rev(estimates)
exp<-ggplot(simple, aes(x=23.71, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 4.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 4.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
simple<-subset(dfwide, select=c("sp", "var", "Estimate"))
#simple<-simple[(simple$sp=="1"|simple$sp=="4"|simple$sp=="8"),]
#simple$sp<-ifelse(simple$sp=="4", "1", "9")
simple<-simple[!(simple$sp=="0"),]
simple<-simple[!(simple$var=="photo:chill1" | simple$var=="photo:chill2" | simple$var=="force:chill1"
| simple$var=="chill1"),]
simple$var<-ifelse(simple$var=="chill2", "chill", as.character(simple$var))
simple$var<-ifelse(simple$var=="force:chill2", "force:chill", as.character(simple$var))
estimates<-c("More Forcing", "Shorter Photoperiod", "Less Chilling", "More Forcing and \nShorter Photoperiod",
"More Forcing and \nLess Chilling")
#pd <- position_dodgev(height = -0.5)
#simple$Jvar <- ave(as.numeric(simple$var), simple$var,
#                         FUN = function(x) x + rnorm(length(x), sd = .1))
simple$Jvar<-NA
simple$Jvar<-ifelse(simple$var=="force", 5, simple$var)
simple$Jvar<-ifelse(simple$var=="photo", 4, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="chill", 3, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:photo", 2, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:chill", 1, simple$Jvar)
simple$Jvar2<-as.numeric(simple$Jvar)
simple$spp<-(as.numeric(simple$sp)-1)*0.05
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
#simple$Jvar2<-ifelse(simple$sp=="4", simple$Jvar2-0.1, simple$Jvar2)
#simple$Jvar2<-ifelse(simple$sp=="8", simple$Jvar2-0.2, simple$Jvar2)
simple$Estimate<-ifelse(simple$var=="photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="chill", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:chill", -simple$Estimate, simple$Estimate)
species<-unique(simple$sp)
simple$est2<-simple$Estimate
for(i in c(1:length(species))) {
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:photo", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="photo" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:photo" & simple$sp==species[i]], simple$Estimate)
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:chill", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="chill" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:chill" & simple$sp==species[i]], simple$est2)
}
estimates<-rev(estimates)
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 4.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 4.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
simple$est3<-simple$est3+23.71
simple$est3<-simple$est2+23.71
exp<-ggplot(simple, aes(x=23.71, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 4.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 4.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=23.71, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 6.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 6.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=23.71, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 10.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=23.71, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 10, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=23.71, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.35, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=23.71, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.45, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=23.71, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=23.71, linetype="dotted") +
#scale_colour_manual(name="Species", values=c("#CC6666", "#9999CC", "#66CC99"),
#                   labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
#                           "4"=expression(paste(italic("Betula alleghaniensis"))),
#                          "8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
