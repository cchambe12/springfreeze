df<-group_by(d.sp, sp) %>%
do(tidy(aov(risk~ chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp),
type="II")))
df<-group_by(d.sp, sp) %>%
do(tidy(aov(risk~ chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp),
type="II"))
summary(acepen)
acepen<-Anova(aov(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.ace), type="II")
summary(acepen)
acepen<-aov(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.ace)
summary(acepen)
acepen<-aov(Risk~sp + chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.ace)
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- as.numeric(as.character(substr(d$chill, 6, 6)))
d$force<-as.numeric(as.character(ifelse((d$warm=="warm"), 20, 15)))
d$photoperiod<- as.numeric(as.character(ifelse((d$photo=="short"), 8, 12)))
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, chilling, force, photoperiod, treatcode) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d.ace<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.ace$Risk <- d.ace$Leaves - d.ace$Budburst
d.ace<-filter(d.ace, Risk > 0)
acepen<-aov(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.ace)
summary(acepen)
df<-group_by(d.sp, sp) %>%
do(tidy(aov(risk~ chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp),
type="II")) %>%
filter(term=="sp")
df<-group_by(d.sp, sp) %>%
do(tidy(aov(risk~ chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp),
type="II"))
df<-group_by(d.sp, sp) %>%
do(tidy(aov(risk~ chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp)))
df<-group_by(d.sp, sp) %>%
do(tidy(aov(risk~ sp+ chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp)))
df<-group_by(d.sp, tx) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp)))
df<-group_by(d.sp, treatcode) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.sp)))
df<-d.sp%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.)))
df<-d.sp%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
d.ace<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.ace$Risk <- d.ace$Leaves - d.ace$Budburst
d.ace<-filter(d.ace, Risk > 0)
acepen<-aov(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d.ace)
summary(acepen)
df<-d.sp%>%
group_by(sp) %>%
do(tidy(car::Anova(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(car)
library(broom)
#packageurl <- "https://cran.r-project.org/src/contrib/Archive/pbkrtest/pbkrtest_0.4-4.tar.gz"
#install.packages(packageurl, repos=NULL, type="source")
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- as.numeric(as.character(substr(d$chill, 6, 6)))
d$force<-as.numeric(as.character(ifelse((d$warm=="warm"), 20, 15)))
d$photoperiod<- as.numeric(as.character(ifelse((d$photo=="short"), 8, 12)))
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, chilling, force, photoperiod, treatcode) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
## Harvard Forest Data
d.sp<-d%>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.sp$risk<-d.sp$Leaves-d.sp$Budburst
d.sp<-filter(d.sp,risk>0)
hf<-d.sp%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
## Saint-Hipp Data
d.sp<-d%>%
filter(site=="SH") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.sp$risk<-d.sp$Leaves-d.sp$Budburst
d.sp<-filter(d.sp,risk>0)
sh<-d.sp%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(car)
library(broom)
#packageurl <- "https://cran.r-project.org/src/contrib/Archive/pbkrtest/pbkrtest_0.4-4.tar.gz"
#install.packages(packageurl, repos=NULL, type="source")
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- as.numeric(as.character(substr(d$chill, 6, 6)))
d$force<-as.numeric(as.character(ifelse((d$warm=="warm"), 20, 15)))
d$photoperiod<- as.numeric(as.character(ifelse((d$photo=="short"), 8, 12)))
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, chilling, force, photoperiod, treatcode) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d.hf<-d%>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.hf$risk<-d.hf$Leaves-d.hf$Budburst
d.hf<-filter(d.hf,risk>0)
hf<-d.sp%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
hf<-d.hf%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
d.sh<-d%>%
filter(site=="SH") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.sh$risk<-d.sh$Leaves-d.sh$Budburst
d.sh<-filter(d.sh,risk>0)
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
View(d.hf)
View(hf)
write.csv(d.hf, "~/Documents/git/freezingexperiment/analyses/output/dan.hf.anova.csv", row.names=FALSE)
write.csv(d.sh, "~/Documents/git/freezingexperiment/analyses/output/dan.sh.anova.csv", row.names=FALSE)
write.csv(hf, "~/Documents/git/freezingexperiment/analyses/output/dan.hf.anova.csv", row.names=FALSE)
write.csv(sh, "~/Documents/git/freezingexperiment/analyses/output/dan.sh.anova.csv", row.names=FALSE)
write.csv(hf, "~/Documents/git/springfreeze/output/dan.hf.anova.csv", row.names=FALSE)
write.csv(sh, "~/Documents/git/springfreeze/output/dan.sh.anova.csv", row.names=FALSE)
View(d)
df.hf<-as.data.frame(table(d.hf$species,d.hf$treatcode))
df.hf<-as.data.frame(table(d.hf$sp,d.hf$treatcode))
View(df.hf)
df.hf<-as.data.frame(table(d.hf$sp,d.hf$treatcode))%>%
rename(species==Var1)%>%
rename(tx==Var2)
df.hf<-as.data.frame(table(d.hf$sp,d.hf$treatcode))%>%
rename(species=Var1)%>%
rename(tx=Var2)
View(df.hf)
df.sh<-as.data.frame(table(d.sh$sp,d.sh$treatcode))%>%
rename(species=Var1)%>%
rename(tx=Var2)
write.csv(df.sh, "~/Documents/git/springfreeze/output/danfs.tx.sh.csv", row.names=FALSE)
write.csv(df.hf, "~/Documents/git/springfreeze/output/danfs.tx.hf.csv", row.names=FALSE)
coef(hf)
summary(hf)
hf1<-d.hf%>%
group_by(sp) %>%
aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=., type="II")
hf1<-d.hf%>%
group_by(sp) %>%
aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.)
summary(hf)
summary.lm(hf)
hf1<-d.hf%>%
group_by(sp) %>%
do(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.))
hf1<-d.hf%>%
group_by(sp) %>%
tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.))
hf1<-d.hf%>%
group_by(sp) %>%
do(tidy(anova(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.)type="II"))
hf1<-d.hf%>%
group_by(sp) %>%
do(tidy(anova(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.),type="II"))
hf1<-d.hf%>%
group_by(sp) %>%
do(tidy(Anova(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.),type="II"))
hf1<-d.hf%>%
group_by(sp) %>%
do(tidy(Anova(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.),type="II", vcov=NULL))
hf1<-d.hf%>%
group_by(sp) %>%
do(tidy(Anova(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.),type="II", vcov.=NULL))
hf1<-d.hf%>%
group_by(sp) %>%
do(tidy(lm(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.)))
summary(Anova(hf1))
summary(Anova(hf1), vcov=NULL)
hf1<-d.hf%>%
group_by(sp) %>%
do(tidy(Anova(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II", vcov.=vcov(NULL)))
hf.sp<-d.hf%>%
group_by(sp) %>%
do(tidy(lm(risk~ sp + chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
d$chilling<-as.numeric(as.character(
ifelse((d$chilling==0), 0, ifelse((d$chilling==1), 4, 1.5))))
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- as.numeric(as.character(substr(d$chill, 6, 6)))
d$chilling<-as.numeric(as.character(
ifelse((d$chilling==0), 0, ifelse((d$chilling==1), 4, 1.5))))
d$force<-as.numeric(as.character(ifelse((d$warm=="warm"), 20, 15)))
d$photoperiod<- as.numeric(as.character(ifelse((d$photo=="short"), 8, 12)))
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, chilling, force, photoperiod, treatcode) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
View(d)
d.hf<-d%>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.hf$risk<-d.hf$Leaves-d.hf$Budburst
d.hf<-filter(d.hf,risk>0)
hf<-d.hf%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
hf.sp<-d.hf%>%
group_by(sp) %>%
do(tidy(lm(risk~ sp + chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
write.csv(hf, "~/Documents/git/springfreeze/output/dan.hf.anova.csv", row.names=FALSE)
d.sh<-d%>%
filter(site=="SH") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.sh$risk<-d.sh$Leaves-d.sh$Budburst
d.sh<-filter(d.sh,risk>0)
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(aov(risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.), type="II"))
write.csv(sh, "~/Documents/git/springfreeze/output/dan.sh.anova.csv", row.names=FALSE)
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lmer(risk~1 + chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lmer(risk~1 + chilling + force + photoperiod, data=.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lmer(risk~chilling * force * photoperiod + (chilling|force) +
(chilling|photoperiod) + (force|photoperiod), data =.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lmer(risk~chilling + force + photoperiod + (chilling|force) +
(chilling|photoperiod) + (force|photoperiod), data =.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lmer(risk~tx + (1|sp) ,data =.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lmer(risk~treatcode + (1|sp) ,data =.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lmer(risk~treatcode ,data =.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(lm(risk~treatcode,data =.)))
sh<-d.sh%>%
group_by(sp) %>%
do(tidy(glm(risk~treatcode,data =.)))
mod<-lmer(risk~treatcode + (1|sp), data=d.sh)
coef(mod)
mod<-lmer(risk~chilling + force + photoperiod + (1|sp), data=d.sh)
coef(mod)
display(mod)
mod1<-lmer(risk~chilling + force + photoperiod + chilling*force + chilling*photoperiod +
force*photoperiod + (1|sp), data=d.sh)
display(mod1)
coef(mod1)
mod<-lmer(risk~chilling + force + photoperiod + (1|sp), data=d.hf)
display(mod)
mod1<-lmer(risk~chilling + force + photoperiod + chilling*force + chilling*photoperiod +
force*photoperiod + (1|sp), data=d.hf)
display(mod1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/fsi.freq.csv",header=TRUE)
d<-na.omit(d)
View(d)
d<-ifelse((false.springs=="N/A"),NA)
d<-ifelse((d$false.springs=="N/A"),NA)
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/fsi.freq.csv",header=TRUE)
d<- within(d, false.springs[false.springs=="N/A"]<-NA)
d<-na.omit(d)
View(d)
freq<-as.data.frame(table(d$false.springs))
View(freq)
freq<-as.data.frame(table(d$false.springs))%>%
rename(year=Var1)%>%
rename(fsi=Freq)
View(freq)
ggplot((freq), aes(x=year, y=fsi))
ggplot((freq), aes(x=year, y=fsi)) + geom_points()
g
ggplot((freq), aes(x=year, y=fsi)) + geom_point()
ggplot((freq), aes(x=year, y=fsi)) + geom_point() + geom_smooth(method="lm")
ggplot((freq), aes(x=year, y=fsi)) + geom_point() + geom_smooth(method="loess")
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/fsi.freq.csv",header=TRUE)
d<- within(d, false.springs[false.springs=="N/A"]<-NA)
d<-na.omit(d)
freq<-as.data.frame(table(d$false.springs))%>%
rename(year=Var1)%>%
rename(fsi=Freq)
freq<-full_join(freq, d)
View(freq)
View(d)
freq<-as.data.frame(table(d$false.springs))%>%
rename(false.springs=Var1)%>%
rename(fsi=Freq)
freq<-full_join(freq, d, by="false.springs")
View(freq)
freq<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)
View(freq)
ggplot((freq), aes(x=year, y=fsi)) + geom_point(aes(col=region)) + geom_smooth(method="loess")
mod<-lmer(fsi~year, data=freq)
mod<-lm(fsi~year, data=freq)
summary(mod)
names(freq)
col(freq)
colnames(freq)
freq
head(freq)
class(freq)
names(freq$year)
class(freq$year)
as.numeric(as.character(freq$year))
ggplot((freq), aes(x=year, y=fsi)) + geom_point() + geom_smooth(method="loess")
mod<-lm(fsi~year, data=freq)
summary(mod)
ggplot((freq), aes(x=year, y=fsi)) + geom_point() + geom_smooth(method="lm")
ggplot((freq), aes(x=year, y=fsi)) + geom_point(aes(col=region)) +
geom_smooth(method="lm") + geom_jitter()
ggplot((freq), aes(x=year, y=fsi)) + geom_point(aes(col=region)) +
geom_smooth(method="lm")
ggplot((freq), aes(x=year, y=fsi)) + geom_point(aes(col=region)) +
geom_smooth(aes(col=as.factor(region)),method="lm", se=FALSE)
eur<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)%>%
filter(region=="europe")
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/fsi.freq.csv",header=TRUE)
d<- within(d, false.springs[false.springs=="N/A"]<-NA)
d<-na.omit(d)
freq<-as.data.frame(table(d$false.springs))%>%
rename(false.springs=Var1)%>%
rename(fsi=Freq)
freq<-full_join(freq, d, by="false.springs")
eur<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)%>%
filter(region=="europe")
as.numeric(as.character(freq$year))
ggplot((freq), aes(x=year, y=fsi)) + geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot((eur), aes(x=year, y=fsi)) + geom_point() +
geom_smooth(method="lm")
as.numeric(as.character(eur$year))
ggplot((eur), aes(x=year, y=fsi)) + geom_point() +
geom_smooth(method="lm")
as.Date(eur$year))
as.Date(eur$year)
eur<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)%>%
filter(region=="europe")
eur$year<-as.numeric(as.character((eur$year))
ggplot((eur), aes(x=year, y=fsi)) + geom_point() +
geom_smooth(method="lm")
mod<-lm(fsi~year, data=freq)
summary(mod)
eur<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)%>%
filter(region=="europe")
eur$year<-as.numeric(as.character((eur$year))
ggplot((eur), aes(x=year, y=fsi)) + geom_point() +
geom_smooth(method="lm")
mod<-lm(fsi~year, data=freq)
summary(mod)
eur<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)%>%
filter(region=="europe")
eur$year<-as.numeric(as.character(eur$year))
ggplot((eur), aes(x=year, y=fsi)) + geom_point() +
geom_smooth(method="lm")
mod<-lm(fsi~year, data=freq)
summary(mod)
mod<-lm(fsi~year, data=eur)
summary(mod)
both<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)
both$year<-as.numeric(as.character(freq$year))
both$year<-as.numeric(as.character(both$year))
ggplot((eur), aes(x=year, y=fsi)) + geom_point(aes(col="region")) +
geom_smooth(method="lm")
ggplot((both), aes(x=year, y=fsi)) + geom_point(aes(col="region")) +
geom_smooth(method="lm")
ggplot((both), aes(x=year, y=fsi)) + geom_point(aes(col=region)) +
geom_smooth(method="lm")
mod1<-lm(fsi~year, data=both)
summary(mod1)
am<-freq%>%
rename(year=false.springs)%>%
dplyr::select(-Station)%>%
filter(region=="n.america")
am$year<-as.numeric(as.character(am$year))
ggplot((am), aes(x=year, y=fsi)) + geom_point(aes(col=region)) +
geom_smooth(method="lm")
mod2<-lm(fsi~year, data=am)
summary(mod2)
