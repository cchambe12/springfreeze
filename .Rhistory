annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(data.table)
library(car)
library(xtable)
library(broom)
library(tibble)
library(lme4)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
########### NEW EDITION - CAT 26 May 2017 ####################
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
small.spp<-dx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dx<-dx%>% filter(species %in% spp)
dx<-dx%>%dplyr::select(-site, -ind)
dx$mean<-ave(dx$bday, dx$species, dx$treatcode)
dx<-dx%>%
group_by(mean, species)%>%
arrange(species)%>%
filter(row_number()==1)
dx<-dx%>%group_by(species, treatcode) %>% arrange(species, desc(treatcode))
dx$code<-reorder(dx$species, dx$bday)
chill<-ggplot(dx, aes(x = code,ymin = bday, ymax = lday, group=interaction(species, treatcode) )) +
geom_point(aes(y=bday, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=lday, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x = code,ymin = bday, ymax = lday, col=treatcode), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("CS0","Leafout", "Budburst", "WL1"), values = c("purple3", "green4", "darkolivegreen3", "royalblue3")) +
xlab("Species") +coord_flip()
plot(chill)
dx$risk= dx$lday - dx$bday
risk<-ggplot(dx, aes(x=bday, y=risk)) + geom_point(aes(col=treatcode)) + geom_smooth(aes(x=bday, y=risk, col=treatcode, fill=treatcode), method= "loess")
plot(risk)
### Prep data for Anovas
dxx<-d
dxx$chilling<- as.numeric(as.character(substr(dxx$chill, 6, 6)))
#d$chilling<-as.numeric(as.character(
#ifelse((d$chilling==0), 0, ifelse((d$chilling==1), 4, 1.5))))
dxx$warm<-as.numeric(as.character(dxx$warm))
dxx$photo<-as.numeric(as.character(dxx$photo))
dxx$species<-substr(dxx$ind, 1, 6)
dxx<-dxx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
small.spp<-dxx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dxx<-dxx%>% filter(species %in% spp)
dxx<-dxx %>%
dplyr::select(id, species, site, lday, bday, chilling, warm, photo, treatcode)
dxx$risk<-dxx$lday-dxx$bday
View(dxx)
write.csv(dxx, file="~/Documents/git/springfreeze/output", row.names=FALSE)
write.csv(dxx, file="~/Documents/git/springfreeze/output/dvrdata_danf.csv", row.names=FALSE)
dx<-read.csv("dvrdata_danf.csv", header=TRUE)
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = FALSE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(caper) # for pgls
library(png) # readPNG for Fig 1
setwd("~/Documents/git/springfreeze/scripts/stan")
source('savestan.R')
dx<-read.csv("dvrdata_danf.csv", header=TRUE)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
View(dx)
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
dx$chill1 = ifelse(dx$chill == 2, 1, 0)
dx$chill2 = ifelse(dx$chill == 3, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$bday),]
dxl <- dx[!is.na(dx$lday),]
bdaymean <- t(with(dxb, tapply(bday, list(sp), mean, na.rm=T)))
bdaymean <- t(with(dxb, tapply(bday, list(species), mean, na.rm=T)))
ldaymean <- t(with(dxl, tapply(lday, list(species), mean, na.rm=T)))
leafoutdays <- data.frame(bdaymean, ldaymean)
colnames(leafoutdays) <- c("BB.HF","LO.HF")
colz = c("brown", "blue3")
shrubs = c("VIBLAN","RHAFRA","RHOPRI","SPIALB","VACMYR","VIBCAS", "AROMEL","ILEMUC", "KALANG", "LONCAN", "LYOLIG")
trees = c("ACEPEN", "ACERUB", "ACESAC", "ALNINC", "BETALL", "BETLEN", "BETPAP", "CORCOR", "FAGGRA", "FRANIG", "HAMVIR", "NYSSYL", "POPGRA", "PRUPEN", "QUEALB" , "QUERUB", "QUEVEL")
treeshrub = levels(dx$sp)
treeshrub[treeshrub %in% shrubs] = 1
treeshrub[treeshrub %in% trees] = 2
treeshrub = as.numeric(treeshrub)
unique(dxb$warm)
dxb$warm[dxb$warm==1] <- 0
dxb$warm[dxb$warm==2] <- 1
unique(dxb$photo)
dxb$photo[dxb$photo==1] <- 0
dxb$photo[dxb$photo==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
View(dxb)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = FALSE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(caper) # for pgls
library(png) # readPNG for Fig 1
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
# Prep
dx$spn <- as.numeric(dx$species)
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 2, 1, 0)
dx$chill2 = ifelse(dx$chill == 3, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
bdaymean <- t(with(dxr, tapply(risk, list(species), mean, na.rm=T)))
leafoutdays <- data.frame(bdaymean)
colnames(leafoutdays) <- c("DVR.HF")
# write.csv(leafoutdays, "output/leafoutdays.csv", row.names=TRUE)
# Groups
colz = c("brown", "blue3")
shrubs = c("VIBLAN","RHAFRA","RHOPRI","SPIALB","VACMYR","VIBCAS", "AROMEL","ILEMUC", "KALANG", "LONCAN", "LYOLIG")
trees = c("ACEPEN", "ACERUB", "ACESAC", "ALNINC", "BETALL", "BETLEN", "BETPAP", "CORCOR", "FAGGRA", "FRANIG", "HAMVIR", "NYSSYL", "POPGRA", "PRUPEN", "QUEALB" , "QUERUB", "QUEVEL")
treeshrub = levels(dx$sp)
treeshrub[treeshrub %in% shrubs] = 1
treeshrub[treeshrub %in% trees] = 2
treeshrub = as.numeric(treeshrub)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Analyses:
# 1. Day of bud burst by all factors, stan
# 2. Day of leaf out by all factors, stan
# 3. Effects on bud burst/leaf-out day for species:
#  - Traits (wood density, sla, N, stomata when we have it),
#  - Phylogeny
# Supplemental analyses
# Correlate order of leaf-out/bud burst in chambers to each other
# Correlate order of leaf-out in chambers to O'Keefe observational data
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$warm)
dxb$warm[dxb$warm==1] <- 0
dxb$warm[dxb$warm==2] <- 1
unique(dxb$photo)
dxb$photo[dxb$photo==1] <- 0
dxb$photo[dxb$photo==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
site = as.numeric(dxb$site),
sp = as.numeric(dxb$species),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
site = as.numeric(dxb$site),
sp = as.numeric(dxb$species),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
library(rstan)
library(rstanarm)
library(shinystan)
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
site = as.numeric(dxb$site),
sp = as.numeric(dxb$species),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
site = as.numeric(dxb$site),
sp = as.numeric(dxb$species),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
site = as.numeric(dxb$site),
sp = as.numeric(dxb$species),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
site = as.numeric(dxb$site),
sp = as.numeric(dxb$species),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(rstan)
library(caper) # for pgls
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
# Prep
dx$spn <- as.numeric(dx$species)
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 2, 1, 0)
dx$chill2 = ifelse(dx$chill == 3, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
bdaymean <- t(with(dxr, tapply(risk, list(species), mean, na.rm=T)))
leafoutdays <- data.frame(bdaymean)
colnames(leafoutdays) <- c("DVR.HF")
# write.csv(leafoutdays, "output/leafoutdays.csv", row.names=TRUE)
# Groups
colz = c("brown", "blue3")
shrubs = c("VIBLAN","RHAFRA","RHOPRI","SPIALB","VACMYR","VIBCAS", "AROMEL","ILEMUC", "KALANG", "LONCAN", "LYOLIG")
trees = c("ACEPEN", "ACERUB", "ACESAC", "ALNINC", "BETALL", "BETLEN", "BETPAP", "CORCOR", "FAGGRA", "FRANIG", "HAMVIR", "NYSSYL", "POPGRA", "PRUPEN", "QUEALB" , "QUERUB", "QUEVEL")
treeshrub = levels(dx$sp)
treeshrub[treeshrub %in% shrubs] = 1
treeshrub[treeshrub %in% trees] = 2
treeshrub = as.numeric(treeshrub)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Analyses:
# 1. Day of bud burst by all factors, stan
# 2. Day of leaf out by all factors, stan
# 3. Effects on bud burst/leaf-out day for species:
#  - Traits (wood density, sla, N, stomata when we have it),
#  - Phylogeny
# Supplemental analyses
# Correlate order of leaf-out/bud burst in chambers to each other
# Correlate order of leaf-out in chambers to O'Keefe observational data
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$warm)
dxb$warm[dxb$warm==1] <- 0
dxb$warm[dxb$warm==2] <- 1
unique(dxb$photo)
dxb$photo[dxb$photo==1] <- 0
dxb$photo[dxb$photo==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
# 1. Budburst day.
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
site = as.numeric(dxb$site),
sp = as.numeric(dxb$species),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(rstan)
library(caper) # for pgls
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
# Prep
dx$sp <- as.numeric(dx$species)
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 2, 1, 0)
dx$chill2 = ifelse(dx$chill == 3, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
bdaymean <- t(with(dxb, tapply(risk, list(sp), mean, na.rm=T)))
leafoutdays <- data.frame(bdaymean)
colnames(leafoutdays) <- c("DVR.HF")
# write.csv(leafoutdays, "output/leafoutdays.csv", row.names=TRUE)
# Groups
colz = c("brown", "blue3")
shrubs = c("VIBLAN","RHAFRA","RHOPRI","SPIALB","VACMYR","VIBCAS", "AROMEL","ILEMUC", "KALANG", "LONCAN", "LYOLIG")
trees = c("ACEPEN", "ACERUB", "ACESAC", "ALNINC", "BETALL", "BETLEN", "BETPAP", "CORCOR", "FAGGRA", "FRANIG", "HAMVIR", "NYSSYL", "POPGRA", "PRUPEN", "QUEALB" , "QUERUB", "QUEVEL")
treeshrub = levels(dx$sp)
treeshrub[treeshrub %in% shrubs] = 1
treeshrub[treeshrub %in% trees] = 2
treeshrub = as.numeric(treeshrub)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Analyses:
# 1. Day of bud burst by all factors, stan
# 2. Day of leaf out by all factors, stan
# 3. Effects on bud burst/leaf-out day for species:
#  - Traits (wood density, sla, N, stomata when we have it),
#  - Phylogeny
# Supplemental analyses
# Correlate order of leaf-out/bud burst in chambers to each other
# Correlate order of leaf-out in chambers to O'Keefe observational data
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$warm)
dxb$warm[dxb$warm==1] <- 0
dxb$warm[dxb$warm==2] <- 1
unique(dxb$photo)
dxb$photo[dxb$photo==1] <- 0
dxb$photo[dxb$photo==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
# 1. Budburst day.
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
sp = as.numeric(dxb$sp),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
View(dxb)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(rstan)
library(caper) # for pgls
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
# Prep
dx$sp <- as.numeric(as.factor(dx$species))
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 2, 1, 0)
dx$chill2 = ifelse(dx$chill == 3, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
bdaymean <- t(with(dxb, tapply(risk, list(sp), mean, na.rm=T)))
leafoutdays <- data.frame(bdaymean)
colnames(leafoutdays) <- c("DVR.HF")
# write.csv(leafoutdays, "output/leafoutdays.csv", row.names=TRUE)
# Groups
colz = c("brown", "blue3")
shrubs = c("VIBLAN","RHAFRA","RHOPRI","SPIALB","VACMYR","VIBCAS", "AROMEL","ILEMUC", "KALANG", "LONCAN", "LYOLIG")
trees = c("ACEPEN", "ACERUB", "ACESAC", "ALNINC", "BETALL", "BETLEN", "BETPAP", "CORCOR", "FAGGRA", "FRANIG", "HAMVIR", "NYSSYL", "POPGRA", "PRUPEN", "QUEALB" , "QUERUB", "QUEVEL")
treeshrub = levels(dx$sp)
treeshrub[treeshrub %in% shrubs] = 1
treeshrub[treeshrub %in% trees] = 2
treeshrub = as.numeric(treeshrub)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Analyses:
# 1. Day of bud burst by all factors, stan
# 2. Day of leaf out by all factors, stan
# 3. Effects on bud burst/leaf-out day for species:
#  - Traits (wood density, sla, N, stomata when we have it),
#  - Phylogeny
# Supplemental analyses
# Correlate order of leaf-out/bud burst in chambers to each other
# Correlate order of leaf-out in chambers to O'Keefe observational data
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$warm)
dxb$warm[dxb$warm==1] <- 0
dxb$warm[dxb$warm==2] <- 1
unique(dxb$photo)
dxb$photo[dxb$photo==1] <- 0
dxb$photo[dxb$photo==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
# 1. Budburst day.
if(runstan){
datalist.b <- list(y = dxb$risk, # bud burst as response
warm = as.numeric(dxb$warm),
sp = as.numeric(dxb$sp),
photo = as.numeric(dxb$photo),
chill1 = as.numeric(dxb$chill1),
chill2 = as.numeric(dxb$chill2),
N = nrow(dxb),
n_sp = length(unique(dxb$species))
)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan',
data = datalist.b, warmup=4000, iter = 7997, chains = 4,
control = list(adapt_delta = 0.9))
#               , max_treedepth = 15))
}
