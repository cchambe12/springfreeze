wlo$tx<-"WL0"
hf<-bind_rows(warm,cold, med, wlo, cs1)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
lmodel<-lm(Risk~Budburst+tx, data=sp.code)
display(lmodel)
View(hf)
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/Budburst.DF.csv",header=TRUE)
timeline$DOY<-yday(timeline$Date)
phases<-c("4","7")
tx<-c("WL2", "WL0", "CS2","WL1","CS0") # may want to use WL1 instead?
timeline<-timeline %>%
dplyr::select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(treatcode %in% tx) %>%
filter(tleaf %in% phases)
timeline$tleaf<- factor(timeline$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
cs1.buds <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
cs1.leaves <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
cs1.Risk <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cs1<-full_join(cs1.buds, cs1.leaves)
cs1<-full_join(cs1, cs1.Risk)
cs1$tx<-"CS1"
cs1.buds <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
View(cs1)
timeline<-read.csv("input/Budburst.DF.csv",header=TRUE)
# Convert to Julian day
timeline$DOY<-yday(timeline$Date)
phases<-c("4","7")
tx<-c("WL2", "WL0", "CS2","WL1","CS0") # may want to use WL1 instead?
timeline<-timeline %>%
dplyr::select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(treatcode %in% tx) %>%
filter(tleaf %in% phases)
timeline$tleaf<- factor(timeline$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
cs1.buds <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/Budburst.DF.csv",header=TRUE)
# Convert to Julian day
timeline$DOY<-yday(timeline$Date)
phases<-c("4","7")
tx<-c("WL2", "WL0", "CS2","WL1","CS0") # may want to use WL1 instead?
timeline<-timeline %>%
dplyr::select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(treatcode %in% tx) %>%
filter(tleaf %in% phases)
timeline$tleaf<- factor(timeline$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
hf.buds <- hf %>%
filter(treatcode == "CS2") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
hf.leaves <- hf %>%
filter(treatcode == "CS2") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
hf.Risk <- hf %>%
filter(treatcode == "CS2") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cold<-full_join(hf.buds, hf.leaves)
cold<-full_join(cold, hf.Risk)
cold$tx<-"CS2"
#cs1.buds <- hf %>%
#filter(treatcode == "CS1") %>%
#dplyr::select(sp,id,Budburst) %>%
#group_by(sp) %>%
#summarise_each(funs(mean), Budburst)
#cs1.leaves <- hf %>%
#filter(treatcode == "CS1") %>%
#dplyr::select(sp,id,Leaves) %>%
#group_by(sp) %>%
#summarise_each(funs(mean), Leaves)
#cs1.Risk <- hf %>%
#filter(treatcode == "CS1") %>%
#dplyr::select(sp,id,Risk) %>%
#group_by(sp) %>%
#summarise_each(funs(mean), Risk)
#cs1<-full_join(cs1.buds, cs1.leaves)
#cs1<-full_join(cs1, cs1.Risk)
#cs1$tx<-"CS1"
cs0.buds <- hf %>%
filter(treatcode == "CS0") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
cs0.leaves <- hf %>%
filter(treatcode == "CS0") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
cs0.Risk <- hf %>%
filter(treatcode == "CS0") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cs0<-full_join(cs0.buds, cs0.leaves)
cs0<-full_join(cs0, cs0.Risk)
cs0$tx<-"CS0"
warm.buds <- hf %>%
filter(treatcode == "WL2") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
warm.leaves <- hf %>%
filter(treatcode == "WL2") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
warm.Risk <- hf %>%
filter(treatcode == "WL2") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
warm<-full_join(warm.buds, warm.leaves)
warm<-full_join(warm, warm.Risk)
warm$tx<-"WL2"
med.buds <- hf %>%
filter(treatcode == "WL1") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
med.leaves <- hf %>%
filter(treatcode == "WL1") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
med.Risk <- hf %>%
filter(treatcode == "WL1") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
med<-full_join(med.buds, med.leaves)
med<-full_join(med, med.Risk)
med$tx<-"WL1"
wlo.buds <- hf %>%
filter(treatcode == "WL0") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
wlo.leaves <- hf %>%
filter(treatcode == "WL0") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
wlo.Risk <- hf %>%
filter(treatcode == "WL0") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
wlo<-full_join(wlo.buds, wlo.leaves)
wlo<-full_join(wlo, wlo.Risk)
wlo$tx<-"WL0"
hf<-bind_rows(warm,cold, med, wlo, cs0)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
lmodel<-lm(Risk~Budburst+tx, data=sp.code)
display(lmodel)
View(timeline)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/Budburst.DF.csv",header=TRUE)
# Convert to Julian day
timeline$DOY<-yday(timeline$Date)
phases<-c("4","7")
tx<-c("WL2", "WL0", "CS2","WL1","CS1") # may want to use WL1 instead?
timeline<-timeline %>%
dplyr::select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(treatcode %in% tx) %>%
filter(tleaf %in% phases)
timeline$tleaf<- factor(timeline$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
hf.buds <- hf %>%
filter(treatcode == "CS2") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
hf.leaves <- hf %>%
filter(treatcode == "CS2") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
hf.Risk <- hf %>%
filter(treatcode == "CS2") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cold<-full_join(hf.buds, hf.leaves)
cold<-full_join(cold, hf.Risk)
cold$tx<-"CS2"
cs1.buds <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
cs1.leaves <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
cs1.Risk <- hf %>%
filter(treatcode == "CS1") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cs1<-full_join(cs1.buds, cs1.leaves)
cs1<-full_join(cs1, cs1.Risk)
cs1$tx<-"CS1"
#cs0.buds <- hf %>%
#filter(treatcode == "CS0") %>%
#dplyr::select(sp,id,Budburst) %>%
#group_by(sp) %>%
#summarise_each(funs(mean), Budburst)
#cs0.leaves <- hf %>%
#filter(treatcode == "CS0") %>%
#dplyr::select(sp,id,Leaves) %>%
#group_by(sp) %>%
#summarise_each(funs(mean), Leaves)
#cs0.Risk <- hf %>%
#filter(treatcode == "CS0") %>%
#dplyr::select(sp,id,Risk) %>%
#group_by(sp) %>%
#summarise_each(funs(mean), Risk)
#cs0<-full_join(cs0.buds, cs0.leaves)
#cs0<-full_join(cs0, cs0.Risk)
#cs0$tx<-"CS0"
warm.buds <- hf %>%
filter(treatcode == "WL2") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
warm.leaves <- hf %>%
filter(treatcode == "WL2") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
warm.Risk <- hf %>%
filter(treatcode == "WL2") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
warm<-full_join(warm.buds, warm.leaves)
warm<-full_join(warm, warm.Risk)
warm$tx<-"WL2"
med.buds <- hf %>%
filter(treatcode == "WL1") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
med.leaves <- hf %>%
filter(treatcode == "WL1") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
med.Risk <- hf %>%
filter(treatcode == "WL1") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
med<-full_join(med.buds, med.leaves)
med<-full_join(med, med.Risk)
med$tx<-"WL1"
wlo.buds <- hf %>%
filter(treatcode == "WL0") %>%
dplyr::select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
wlo.leaves <- hf %>%
filter(treatcode == "WL0") %>%
dplyr::select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
wlo.Risk <- hf %>%
filter(treatcode == "WL0") %>%
dplyr::select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
wlo<-full_join(wlo.buds, wlo.leaves)
wlo<-full_join(wlo, wlo.Risk)
wlo$tx<-"WL0"
hf<-bind_rows(warm,cold, med, wlo, cs1)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
lmodel<-lm(Risk~Budburst+tx, data=sp.code)
display(lmodel)
hf<-bind_rows(cold, med, wlo, cs1)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
lmodel<-lm(Risk~Budburst+tx, data=sp.code)
display(lmodel)
hf<-bind_rows(warm,cold,med, cs1)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
lmodel<-lm(Risk~Budburst+tx, data=sp.code)
display(lmodel)
hf<-bind_rows(warm,cold,med,wlo,cs1)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
lmodel<-lm(Risk~Budburst+tx, data=sp.code)
display(lmodel)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
# Convert to Julian day
years<-c("2010", "2014")
timeline<-timeline %>%
select(year, species, bb.jd, l75.jd) %>%
filter(year %in% years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="2010"] <- "early"
df$si[df$year=="2014"] <- "late"
# Make a graph!
df$code <- reorder(df$sp.year, df$bb.jd)
df.plot<-ggplot((df), aes(x=bb.jd, y=code), stat="identity") + geom_point(aes(x= df$bb.jd)) +
geom_segment(aes(y = sp.year, yend = sp.year, x = bb.jd, xend = l75.jd, col=si)) +
geom_point(aes(x=l75.jd, col=si)) + geom_point(aes(col=si)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(df.plot)
ggplot((df), aes( x=bb.jd, y=risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=si))
lmodel<-lm(risk~bb.jd,data=df)
display(lmodel)
lmodel<-lm(risk~bb.jd + year,data=df)
display(lmodel)
