packages <- c("ggplot2", "plyr", "dplyr", "tidyr", "tidytext",
"purrr", "Hmisc", "lme4","rstan","shinystan","picante")
ipak(packages)
?fixef
?ranef
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rstan, type="source")
install.packages("rstan, type= "source")
install.packages("rstan", type= "source")
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
rstan:::rstudio_stanc("Documents/Temporal Ecology/Stanleyi/nesting_ex.stan")
install.LaTeX2RTF(page_with_download_url = "http://sourceforge.net/projects/latex2rtf/", ...)
install.packages("LaTeX2RTF")
library(LaTeX2RTF)
install.LaTeX2RTF
install.LaTeX2RTF()
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores())
```
### Load and look at the data
```{r linear-regression-data}
load("kidiq.rda")
head(kidiq)
```
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```{r plot1}
```{r plot1}
library("rstan")
library("ggplot2")
install_packages("bayesplot")
install_package("bayesplot")
install.packages("bayesplot")
install.packages("bayesplot")
install.packages("rstanarm")
install.packages("rstanarm")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("ggplot2")
install.packages("ggplot2")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("rstan")
install.packages("rstan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
```{r plot2}
mod1 <- stan_model("linear-regression.stan")
mod1 <- stan("linear-regression.stan")
mod1 <- stan_model("~/Downloads/linear-regression.stan")
mod1 <- stan("~/Downloads/linear-regression.stan")
mod1 <- stan_model("~/Documents/linear-regression.stan")
mod1 <- stan("~/Documents/linear-regression.stan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
library("bayesplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("acepack", "ape", "broom", "car", "chillR", "chron", "class", "cluster", "coda", "codetools", "colorspace", "corrplot", "crayon", "curl", "data.table", "date", "DBI", "dfoptim", "digest", "evaluate", "foreign", "gamm4", "ghit", "git2r", "githubinstall", "gtable", "Hmisc", "httr", "janeaustenr", "jsonlite", "knitr", "lattice", "latticeExtra", "manipulate", "maptools", "MASS", "Matrix", "matrixStats", "memisc", "mgcv", "mime", "mnormt", "munsell", "nlme", "nnet", "numDeriv", "openssl", "optextras", "packrat", "pbapply", "permute", "proto", "psych", "quantreg", "R6", "Rcpp", "RcppEigen", "RefManageR", "reshape2", "rmarkdown", "rsconnect", "shiny", "shinyjs", "shinythemes", "SparseM", "spatial", "stringi", "survival", "tibble", "tidyr", "tidytext", "tokenizers", "ucminf", "vegan", "XML", "yaml", "zoo"))
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d$Risk <- d$Leaves - d$Budburst
View(d)
d<- d%>%
filter(sp==ACEPEN) %>%
group_by(id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d<-na.omit(d)
d$Risk <- d$Leaves - d$Budburst
d<-filter(d, Risk > 0)
View(d)
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp==ACEPEN) %>%
group_by(id, tleaf)%>%
arrange(id)%>%
spread(tleaf, DOY)
d<-na.omit(d)
d$Risk <- d$Leaves - d$Budburst
d<-filter(d, Risk > 0)
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp==ACEPEN)
View(d)
d<- d%>%
filter(sp=="ACEPEN") %>%
group_by(id, tleaf)%>%
arrange(id)%>%
spread(tleaf, DOY)
d<- d%>%
filter(sp=="ACEPEN") %>%
group_by(id, tleaf)%>%
arrange(id)%>%
spread(tleaf, day)
d<-na.omit(d)
d$Risk <- d$Leaves - d$Budburst
d<-filter(d, Risk > 0)
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp=="ACEPEN") %>%
group_by(id, tleaf)%>%
arrange(id)%>%
spread(tleaf, day)
d$Risk <- d$Leaves - d$Budburst
View(d)
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp=="ACEPEN") %>%
group_by(id, treatcode)%>%
arrange(id)%>%
spread(tleaf, DOY)
d<- d%>%
filter(sp=="ACEPEN") %>%
group_by(id, treatcode)%>%
arrange(id)%>%
spread(tleaf, day)
View(d)
d<- d%>%
filter(sp=="ACEPEN") %>%
group_by(id, treatcode)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, day)
d
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp=="ACEPEN") %>%
group_by(id, treatcode)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, day)
View(d)
d$Risk <- d$Leaves - d$Budburst
View(d)
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF")
d<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(id, treatcode)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, day)
d<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(id, treatcode)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d$Risk <- d$Leaves - d$Budburst
View(d)
d<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(sp, id, tleaf, treatcode)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- substr(d$chill, 6, 6)
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(sp, id, tleaf, treatcode)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d$Risk <- d$Leaves - d$Budburst
View(d)
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
View(d)
d$chilling<- substr(d$chill, 6, 6)
View(d)
View(d)
d$force<- ifelse((d$warm=="warm"), 20, 15)
d$photoperiod<- ifelse((d$photo=="short"), 8, 12)
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, chilling, force, photoperiod) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d$Risk <- d$Leaves - d$Budburst
d<-filter(d, Risk > 0)
acepen<-anova(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d)
acepen<-Anova(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d)
install.packages("car")
library(car)
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("pbkrtest")
library(car)
acepen<-Anova(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d)
install.packages(c("ape", "broom", "lmtest", "mgcv", "nlme", "RMAWGEN"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- substr(d$chill, 6, 6)
d$force<- ifelse((d$warm=="warm"), 20, 15)
d$photoperiod<- ifelse((d$photo=="short"), 8, 12)
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, tleaf, DOY, chilling, force, photoperiod) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
d<- d%>%
filter(sp=="ACEPEN") %>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d$Risk <- d$Leaves - d$Budburst
d<-filter(d, Risk > 0)
acepen<-Anova(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d)
library("nlme", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(nlme)
acepen<-Anova(Risk~chilling + force + photoperiod + (chilling*force) +
(chilling*photoperiod) + (force*photoperiod), data=d)
library(car)
install.packages("car", dependencies=TRUE)
library(car)
install.packages("pbkrtest")
