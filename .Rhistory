hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
hf.buds <- hf %>%
filter(treatcode == "CS0") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
hf.leaves <- hf %>%
filter(treatcode == "CS0") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
hf.Risk <- hf %>%
filter(treatcode == "CS0") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cold<-full_join(hf.buds, hf.leaves)
cold<-full_join(cold, hf.Risk)
cold$tx<-"CS0"
warm.buds <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
warm.leaves <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
warm.Risk <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
warm<-full_join(warm.buds, warm.leaves)
warm<-full_join(warm, warm.Risk)
warm$tx<-"WL2"
hf<-bind_rows(warm,cold)
######## Saint Hipp Data ########
sh<- timeline%>%
filter(site == "SH") %>%
group_by(sp, id, tleaf) %>%
arrange(id) %>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
sh<-na.omit(sh)
sh$Risk <- sh$Leaves - sh$Budburst
sh<-filter(sh, Risk > 0)
sh.buds <- sh %>%
filter(treatcode == "CS0") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
sh.leaves <- sh %>%
filter(treatcode == "CS0") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
sh.Risk <- sh %>%
filter(treatcode == "CS0") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cold.sh<-full_join(sh.buds, sh.leaves)
cold.sh<-full_join(cold.sh, sh.Risk)
cold.sh$tx<-"CS0"
warm.buds.sh <- sh %>%
filter(treatcode == "WL2") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
warm.leaves.sh <- sh %>%
filter(treatcode == "WL2") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
warm.Risk.sh <- sh %>%
filter(treatcode == "WL2") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
warm.sh<-full_join(warm.buds.sh, warm.leaves.sh)
warm.sh<-full_join(warm.sh, warm.Risk.sh)
warm.sh$tx<-"WL2"
sh<-bind_rows(warm.sh,cold.sh)
## from other script...
#basic$Risk<- basic$Leaves - basic$Budburst
hf.plot<-ggplot((hf), aes(x=Budburst, y=sp)) + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp, yend = sp, x = Budburst, xend = Leaves)) +
geom_point(aes(x=hf$Leaves)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
ggplot((sh), aes(x=Budburst, y=sp)) + geom_point(aes(x= sh$Budburst)) +
geom_segment(aes(y = sp, yend = sp, x = Budburst, xend = Leaves)) +
geom_point(aes(x=sh$Leaves))  + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/Budburst.DF.csv",header=TRUE)
timeline$DOY<-yday(timeline$Date)
phases<-c("4","7")
tx<-c("CS0","WL2") # may want to use WL1 instead?
timeline<-timeline %>%
select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(treatcode %in% tx) %>%
filter(tleaf %in% phases)
timeline$tleaf<- factor(timeline$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
hf.buds <- hf %>%
filter(treatcode == "CS0") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
hf.leaves <- hf %>%
filter(treatcode == "CS0") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
hf.Risk <- hf %>%
filter(treatcode == "CS0") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cold<-full_join(hf.buds, hf.leaves)
cold<-full_join(cold, hf.Risk)
cold$tx<-"CS0"
warm.buds <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
warm.leaves <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
warm.Risk <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
warm<-full_join(warm.buds, warm.leaves)
warm<-full_join(warm, warm.Risk)
warm$tx<-"WL2"
hf<-bind_rows(warm,cold)
hf.plot<-ggplot((hf), aes(x=Budburst, y=sp)) + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp, yend = sp, x = Budburst, xend = Leaves)) +
geom_point(aes(x=hf$Leaves)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
View(hf)
write.csv(hf, file="~/Documents/git/springfreeze/output/DF.timeline.csv", row.names=FLASE)
write.csv(hf, file="~/Documents/git/springfreeze/output/DF.timeline.csv", row.names=FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("~/Documents/git/ospree/input")
ospree <- read.csv("ospree_clean_respvar.csv", header=TRUE)
## Variation in Field Sample Dates
woody<- ospree %>%
select(datasetID,study,genus,species,woody,ID_fieldsample.date,fieldsample.date,
Exp_Chilling_Hours,photoperiod_day,photoperiod_night,
Total_Chilling_Hours,respvar.simple,response.time,forcetemp) %>%
filter(woody=="yes")%>%
unite(genus.species, genus, species, sep=".")
woody <- woody %>%
group_by(datasetID, study, genus.species, respvar.simple) %>%
mutate(fieldsample.date = replace(fieldsample.date,
fieldsample.date<0, NA))%>%
mutate(photoperiod_day = replace(photoperiod_day,
photoperiod_day<0, NA))%>%
mutate(forcetemp = replace(forcetemp,forcetemp<0, NA))
respvar<-as.data.frame(table(woody$respvar.simple))
field<-woody %>% ## studies with field sampling dates
select(fieldsample.date,datasetID,study,genus.species, respvar.simple)%>%
group_by(fieldsample.date,datasetID)%>%
filter(!is.na(fieldsample.date))%>%
filter(row_number()==1)
none.field<-woody%>% ## studies without field sampling dates
select(datasetID,study, genus.species,fieldsample.date, respvar.simple)%>%
filter(is.na(fieldsample.date))%>%
group_by(datasetID)%>%
arrange(datasetID)%>%
filter(row_number()==1)%>%
rename("samplingdates.count"=fieldsample.date)
samplingdates<-as.data.frame(table(field$datasetID)) %>%
rename("datasetID"=Var1)%>%
rename("samplingdates.count"=Freq)
fieldsample<-full_join(samplingdates,none.field,by="datasetID")%>% ## table of number of field sample dates per study
select(datasetID,samplingdates.count.x)%>%
arrange(datasetID)%>%
rename("samplingdates.count"=samplingdates.count.x)
weinberger<-full_join(woody,fieldsample,by="datasetID")%>%
arrange(datasetID) %>%
filter(row_number()==1)
## Variation in Photoperiod
photo<-woody %>%
select(photoperiod_day,datasetID,study,genus.species, respvar.simple)%>%
group_by(photoperiod_day,datasetID)%>%
filter(!is.na(photoperiod_day))%>%
filter(row_number()==1)
none.photo<-woody%>%
select(datasetID,study,genus.species,photoperiod_day, respvar.simple)%>%
filter(is.na(photoperiod_day))%>%
group_by(datasetID)%>%
arrange(datasetID)%>%
filter(row_number()==1)
photoperiods<-as.data.frame(table(photo$datasetID)) %>%
rename("datasetID"=Var1)%>%
rename("photoperiods.count"=Freq)
photo.day<-full_join(photoperiods,none.photo,by="datasetID")%>%
select(datasetID,photoperiods.count)%>%
arrange(datasetID)
weinberger<-full_join(weinberger,photo.day,by="datasetID")%>%
arrange(datasetID)%>%
filter(row_number()==1)
## Variation in Forcing
forcing<-woody %>%
select(forcetemp,datasetID,study,genus.species, respvar.simple)%>%
group_by(forcetemp,datasetID)%>%
filter(!is.na(forcetemp))%>%
filter(row_number()==1)
none.force<-woody%>%
select(datasetID,study,genus.species,forcetemp, respvar.simple)%>%
filter(is.na(forcetemp))%>%
group_by(datasetID)%>%
arrange(datasetID)%>%
filter(row_number()==1)
forcingtemps<-as.data.frame(table(forcing$datasetID)) %>%
rename("datasetID"=Var1)%>%
rename("forcetemps.count"=Freq)
forcetemp.day<-full_join(forcingtemps,none.force,by="datasetID")%>%
select(datasetID,forcetemps.count)%>%
arrange(datasetID)
weinberger<-full_join(weinberger,forcetemp.day,by="datasetID")%>%
arrange(datasetID)%>%
filter(row_number()==1)
## Variation in Experimental Chilling
expchill<-woody %>%
select(Exp_Chilling_Hours,datasetID,study,genus.species, respvar.simple)%>%
group_by(Exp_Chilling_Hours,datasetID)%>%
filter(!is.na(Exp_Chilling_Hours))%>%
filter(row_number()==1)
none.expchill<-woody%>%
select(datasetID,study,genus.species,Exp_Chilling_Hours, respvar.simple)%>%
filter(is.na(Exp_Chilling_Hours))%>%
group_by(datasetID)%>%
arrange(datasetID)%>%
filter(row_number()==1)
expchilling<-as.data.frame(table(expchill$datasetID)) %>%
rename("datasetID"=Var1)%>%
rename("expchill.count"=Freq)
expchill.hours<-full_join(expchilling,none.chill,by="datasetID")%>%
select(datasetID,expchill.count)%>%
arrange(datasetID)
weinberger<-full_join(weinberger,expchill.hours,by="datasetID")%>%
arrange(datasetID) %>%
filter(row_number()==1)
write.csv(weinberger, file="/output/studytype.csv", sep=",", col.names=NA, qmethod="double",
row.names=FALSE)
expchill.hours<-full_join(expchilling,none.expchill,by="datasetID")%>%
select(datasetID,expchill.count)%>%
arrange(datasetID)
weinberger<-full_join(weinberger,expchill.hours,by="datasetID")%>%
arrange(datasetID) %>%
filter(row_number()==1)
write.csv(weinberger, file="~/Documents/git/ospree/output/studytype.csv", sep=",", col.names=NA, qmethod="double",
row.names=FALSE)
write.csv(weinberger, file="~/Documents/git/ospree/output/studytype.csv",
row.names=FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# Integrate Phenology Data and compare methodologies
# Set Working Directory
setwd("~/Documents/git/springfreeze/input")
method<-read.csv("method.test.csv",header=TRUE,sep=",")
bb.table<-method %>%
select(year,last_frz,bb_npn, sm.bb) %>%
filter(year>=2008)%>%
filter(year<2015)%>%
rename("Last Freeze"=last_frz)%>%
rename("Observed"=sm.bb)%>%
rename("SI-x"=bb_npn)
FSI.table<- method %>%
select(year, FSI_npn, FSI_okeefe, FSI_cam) %>%
rename(okeefe = FSI_okeefe)%>%
rename(phenocam = FSI_cam) %>%
rename(npn = FSI_npn) %>%
filter(year>=2008) %>%
filter(year<2015)
View(FSI.table)
View(bb.table)
bb.long<- method%>%
select(year,bb_npn,sm.obs, bb_obs, bb_cam)%>%
filter(year>=2001)%>%
filter(year<2015)
View(method)
bb.long<- method%>%
select(year,bb_npn,sm.bb, bb_obs, bb_cam)%>%
filter(year>=2001)%>%
filter(year<2015)
View(bb.long)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("~/Documents/git/springfreeze")
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
lat1<-lat1 %>%
separate( "SOUID,    DATE,   TG, Q_TG", sep=",")
View(lat1)
lat1<-lat1 %>%
separate(lat1, c("SOUID", "Date", "TG", "Q_TG"))
lat1<-lat1 %>%
select(DATE, TG, TN)
setwd("~/Documents/git/springfreeze")
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
lat1<-lat1 %>%
select(DATE, TG, TN)
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
filter(DATE>=1986) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
View(lat1)
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
setwd("~/Documents/git/springfreeze")
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
View(lat1)
lat1$year <- substr(lat1$date, 0, 4) %>%
filter(date>=1986)
lat1<- filter(lat1, date>=1986)
View(lat1)
lat1<- filter(lat1, year>=1986)
View(lat1)
lat1$mo.da<- substr(lat1$date, 5, 8)
View(lat1)
setwd("~/Documents/git/springfreeze")
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
# Dresden-Klotz(Germany)
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
lat1<- filter(lat1, year>=1986)
lat1$month<- substr(lat1$date, 5, 6)
lat1$day<- substr(lat1$date, 7,8)
View(lat1)
lat1<- lat1 %>%
select(-date)%>%
unite(year, month, day, sep="-")
View(lat1)
lat1<- lat1 %>%
select(-date)%>%
unite(date, year, month, day, sep="-")
setwd("~/Documents/git/springfreeze")
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
# Dresden-Klotz(Germany): 54.38N, 10.15E
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
lat1<- filter(lat1, year>=1986)
lat1$month<- substr(lat1$date, 5, 6)
lat1$day<- substr(lat1$date, 7,8)
lat1<- lat1 %>%
select(-date)%>%
unite(date, year, month, day, sep="-")
View(lat1)
lat1<- lat1 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin)
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
# Dresden-Klotz(Germany): 54.38N, 10.15E
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
lat1<- filter(lat1, year>=1986)
lat1$month<- substr(lat1$date, 5, 6)
lat1$day<- substr(lat1$date, 7,8)
lat1<- lat1 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin)
View(lat1)
lat1$doy<-strftime(lat1, format = "%j")
lat1$doy<-yday(lat1$date)
View(lat1)
setwd("~/Documents/git/springfreeze")
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
# Dresden-Klotz(Germany): 54.38N, 10.15E
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
lat1<- filter(lat1, year>=1986)
lat1$month<- substr(lat1$date, 5, 6)
lat1$day<- substr(lat1$date, 7,8)
lat1<- lat1 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin)
lat1$doy<-yday(lat1$date)
lat1$year<-substr(lat1$date,0,4)
View(lat1)
lat1<- lat1 %>%
filter(JD > 60) %>%
filter(JD < 181)
lat1<- lat1 %>%
filter(doy > 60) %>%
filter(doy < 181)
View(lat1)
lat1<- lat1 %>%
filter(doy >= 60) %>%
filter(doy <= 181)
View(lat1)
setwd("~/Documents/git/springfreeze")
lat1<-read.csv("input/Lat.one.csv", header=TRUE)
# Dresden-Klotz(Germany): 54.38N, 10.15E
lat1<-lat1 %>%
select(DATE, TG, TN) %>%
rename(Tmean = TG) %>%
rename(Tmin = TN) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
lat1<- filter(lat1, year>=1986)
lat1$month<- substr(lat1$date, 5, 6)
lat1$day<- substr(lat1$date, 7,8)
lat1<- lat1 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin)
lat1$doy<-yday(lat1$date)
lat1$year<-substr(lat1$date,0,4)
lat1<- lat1 %>%
filter(doy >= 60) %>%
filter(doy <= 181)
View(lat1)
fx <- function(lat1, Tmean, n){
warm <- rle(lat1$Tmean >0)
gdd<-warm$lengths>= 7
}
fx <- function(lat1, Tmean, n){
warm <- rle(lat1$Tmean >0)
gdd<-warm$lengths>= 7
frz<-gdd$Tmin<=-2
}
warm <- rle(lat1$Tmean >0)
gdd<-warm$lengths>= 7
frz<-gdd$Tmin<=-2
