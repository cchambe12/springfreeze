ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata", fontface = "italic") +
annotate("text", x = 90, y = 4, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2, label = "Spring", fontface="bold") +
annotate("text", x = 96, y = 11, label = "BB") +
annotate("text", x = 99, y = 11, label = "LO")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis", fontface = "italic") +
annotate("text", x = 90, y = 4, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2, label = "Spring", fontface="bold") +
annotate("text", x = 124, y = 11, label = "BB") +
annotate("text", x = 140, y = 11, label = "LO")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
library(ggplot2)
library(gridExtra)
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
write.csv(ile, file = "~/Documents/git/springfreeze/output/ilemuc.csv", row.names = FALSE)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
write.csv(bet, file = "~/Documents/git/springfreeze/output/betall.csv", row.names = FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(rstan)
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
dx$sp <- as.numeric(as.factor(dx$sp))
dx$site <- as.numeric(as.factor(dx$site))
dx$risk<-dx$lday-dx$bday
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3; levels(dx$site) = 1:2
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
dx$site<- as.numeric(dx$site)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
#bdaymean <- t(with(dxb, tapply(risk, list(sp), mean, na.rm=T)))
#leafoutdays <- data.frame(bdaymean)
#colnames(leafoutdays) <- c("DVR.HF")
# write.csv(leafoutdays, "output/leafoutdays.csv", row.names=TRUE)
# Groups
if(FALSE){
colz = c("brown", "blue3")
shrubs = c("VIBLAN","RHAFRA","RHOPRI","SPIALB","VACMYR","VIBCAS", "AROMEL","ILEMUC", "KALANG", "LONCAN", "LYOLIG")
trees = c("ACEPEN", "ACERUB", "ACESAC", "ALNINC", "BETALL", "BETLEN", "BETPAP", "CORCOR", "FAGGRA", "FRANIG", "HAMVIR", "NYSSYL", "POPGRA", "PRUPEN", "QUEALB" , "QUERUB", "QUEVEL")
treeshrub = levels(dx$sp)
treeshrub[treeshrub %in% shrubs] = 1
treeshrub[treeshrub %in% trees] = 2
treeshrub = as.numeric(treeshrub)
}
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Analyses:
# 1. Day of bud burst by all factors, stan
# 2. Day of leaf out by all factors, stan
# 3. Effects on bud burst/leaf-out day for species:
#  - Traits (wood density, sla, N, stomata when we have it),
#  - Phylogeny
# Supplemental analyses
# Correlate order of leaf-out/bud burst in chambers to each other
# Correlate order of leaf-out in chambers to O'Keefe observational data
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
#unique(dxb$warm)
#dxb$warm[dxb$warm==1] <- 0
#dxb$warm[dxb$warm==2] <- 1
#unique(dxb$photo)
#dxb$photo[dxb$photo==1] <- 0
#dxb$photo[dxb$photo==2] <- 1
unique(dxb$site)
dxb$site[dxb$site==1] <- 0
dxb$site[dxb$site==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
risk = dxb$risk # dvr as response
warm = as.numeric(dxb$warm)
site = as.numeric(dxb$site)
sp = as.numeric(dxb$sp)
photo = as.numeric(dxb$photo)
chill1 = as.numeric(dxb$chill1)
chill2 = as.numeric(dxb$chill2)
N = length(risk)
n_sp = length(unique(dxb$sp))
n_site = length(unique(dxb$site))
datalist.b<-list(risk=risk, warm=warm, site=site, sp=sp, photo=photo, chill1=chill1, chill2=chill2, N=N, n_sp=n_sp, n_site=n_site)
# 1. Budburst day.
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan', ### change when divergent transitions improve!!
data = datalist.b, warmup=1500, iter = 2000, chains = 2,
control = list(adapt_delta = 0.99))
sumerb <- summary(doym.b)$summary
sumerb[grep("mu_", rownames(sumerb)),]
betas <- as.matrix(doym.b, pars = c("mu_b_warm","mu_b_photo","mu_b_chill1", "mu_b_chill2", "mu_b_inter_wp", "mu_b_inter_wc1",
"mu_b_inter_wc2", "mu_b_inter_pc1", "mu_b_inter_pc2", "b_inter_wp_ncp", "b_inter_wc1_ncp", "b_inter_wc2_ncp",
"b_warm", "b_photo", "b_chill1", "b_chill2", "b_inter_pc1_ncp", "b_inter_pc2_ncp"))
mcmc_intervals(betas[,1:10])
mcmc_intervals(betas[,1:9])
save(doym.b, file="stan/output/dvr_sp_chill_realdata.Rda")
save(doym.b, file="~/Documents/git/springfreeze/scripts/stan/dvr_sp_chill_realdata.Rda")
m1.bb <- td4
m1.bb <- doym.b
cols <- adjustcolor("indianred3", alpha.f = 0.3)
source("~/Documents/git/springfreeze/scripts/stan.R")
source("~/Documents/git/springfreeze/scripts/stan/StanCode_DVR.R")
load("~Documents/git/springfreeze/scripts/stan/dvr_sp_chill_realdata.Rda")
load("~/Documents/git/springfreeze/scripts/stan/dvr_sp_chill_realdata.Rda"")
m1.bb <- doym.b
# summary(m1.bb)
# explore results in shinystan
#launch_shinystan(m1.bb)
cols <- adjustcolor("indianred3", alpha.f = 0.3)
source("~/Documents/git/springfreeze/scripts/stan/StanCode_DVR.R")
sumer.ni <- summary(td4)
sumer.ni[grep("mu_", rownames(sumer.ni)),]
source("lat_analysis/source/lat_muplot.R")
sumer.wi <- summary(bb.m1.2lint)$summary
sumer.wi[grep("mu_", rownames(sumer.wi)),]
## plot data and one model for species 1
subby <- subset(bb.stan)
subby$lat<-subby$provenance.lat
subby<-dplyr::select(subby, -provenance.lat)
plot(resp~chill, data=subby) # should add color coding by datasetID
intercepthere <- sumer.ni[grep("a_sp", rownames(sumer.ni)),1][3]
slopehere <- sumer.ni[grep("b_chill", rownames(sumer.ni)),1][3]
abline(intercepthere, slopehere)
cresp <- ggplot(subby, aes(x=chill, y=resp)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=chill, y=resp),method="lm") + theme(legend.position="none")
fresp <- ggplot(subby, aes(x=force, y=resp)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=force, y=resp),method="lm") + theme(legend.position="none")
presp <- ggplot(subby, aes(x=photo, y=resp)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=photo, y=resp),method="lm") + theme(legend.position="none")
lresp <- ggplot(subby, aes(x=lat, y=resp)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=lat, y=resp),method="lm") + theme(legend.position="none")
grid.arrange(cresp, fresp, presp, lresp, ncol=4, nrow=1)
load("~/Documents/git/springfreeze/scripts/stan/dvr_sp_chill_realdata.Rda")
m1.bb <- doym.b
cols <- adjustcolor("indianred3", alpha.f = 0.3)
sumer.ni <- summary(td4)
sumer.ni <- summary(doym.b)
sumer.ni[grep("mu_", rownames(sumer.ni)),]
subby <- subset(bb.stan)
subby <- subset(dx)
plot(dvr~chill, data=subby) # should add color coding by datasetID
View(dx)
plot(risk~chill, data=subby) # should add color coding by datasetID
plot(risk~chill1, data=subby) # should add color coding by datasetID
intercepthere <- sumer.ni[grep("a_sp", rownames(sumer.ni)),1][3]
slopehere <- sumer.ni[grep("b_chill", rownames(sumer.ni)),1][3]
cresp <- ggplot(subby, aes(x=chill1, y=risk)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=chill1, y=risk),method="lm") + theme(legend.position="none")
fresp <- ggplot(subby, aes(x=warm, y=risk)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=warm, y=risk),method="lm") + theme(legend.position="none")
presp <- ggplot(subby, aes(x=photo, y=risk)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=photo, y=risk),method="lm") + theme(legend.position="none")
lresp <- ggplot(subby, aes(x=chill2, y=risk)) + geom_point(aes(colour=datasetID)) +
geom_smooth(aes(x=chill2, y=risk),method="lm") + theme(legend.position="none")
grid.arrange(cresp, fresp, presp, lresp, ncol=4, nrow=1)
cresp <- ggplot(subby, aes(x=chill1, y=risk)) + geom_point(aes(colour=species)) +
geom_smooth(aes(x=chill1, y=risk),method="lm") + theme(legend.position="none")
fresp <- ggplot(subby, aes(x=warm, y=risk)) + geom_point(aes(colour=species)) +
geom_smooth(aes(x=warm, y=risk),method="lm") + theme(legend.position="none")
presp <- ggplot(subby, aes(x=photo, y=risk)) + geom_point(aes(colour=species)) +
geom_smooth(aes(x=photo, y=risk),method="lm") + theme(legend.position="none")
lresp <- ggplot(subby, aes(x=chill2, y=risk)) + geom_point(aes(colour=species)) +
geom_smooth(aes(x=chill2, y=risk),method="lm") + theme(legend.position="none")
grid.arrange(cresp, fresp, presp, lresp, ncol=4, nrow=1)
View(dx)
cresp <- ggplot(subby, aes(x=chill1, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=chill1, y=risk),method="lm") + theme(legend.position="none")
fresp <- ggplot(subby, aes(x=warm, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=warm, y=risk),method="lm") + theme(legend.position="none")
presp <- ggplot(subby, aes(x=photo, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=photo, y=risk),method="lm") + theme(legend.position="none")
lresp <- ggplot(subby, aes(x=chill2, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=chill2, y=risk),method="lm") + theme(legend.position="none")
grid.arrange(cresp, fresp, presp, lresp, ncol=4, nrow=1)
launch_shinystan(doym.b)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(rstan)
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx$sp <- as.numeric(as.factor(dx$sp))
dx$site <- as.numeric(as.factor(dx$site))
dx$risk<-dx$lday-dx$bday
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3; levels(dx$site) = 1:2
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
dx$site<- as.numeric(dx$site)
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
unique(dxb$site)
dxb$site[dxb$site==1] <- 0
dxb$site[dxb$site==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
risk = dxb$risk # dvr as response
warm = as.numeric(dxb$warm)
site = as.numeric(dxb$site)
sp = as.numeric(dxb$sp)
photo = as.numeric(dxb$photo)
chill1 = as.numeric(dxb$chill1)
chill2 = as.numeric(dxb$chill2)
N = length(risk)
n_sp = length(unique(dxb$sp))
n_site = length(unique(dxb$site))
datalist.b<-list(risk=risk, warm=warm, site=site, sp=sp, photo=photo, chill1=chill1, chill2=chill2, N=N, n_sp=n_sp, n_site=n_site)
# 1. Budburst day.
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan', ### change when divergent transitions improve!!
data = datalist.b, warmup=1500, iter = 2000, chains = 2,
control = list(adapt_delta = 0.99))
sumerb <- summary(doym.b)$summary
sumerb[grep("mu_", rownames(sumerb)),]
betas <- as.matrix(doym.b, pars = c("mu_b_warm","mu_b_photo","mu_b_chill1", "mu_b_chill2", "mu_b_inter_wp", "mu_b_inter_wc1",
"mu_b_inter_wc2", "mu_b_inter_pc1", "mu_b_inter_pc2", "b_inter_wp_ncp", "b_inter_wc1_ncp", "b_inter_wc2_ncp",
"b_warm", "b_photo", "b_chill1", "b_chill2", "b_inter_pc1_ncp", "b_inter_pc2_ncp"))
mcmc_intervals(betas[,1:9])
launch_shinystan(doym.b)
save(doym.b, file="~/Documents/git/springfreeze/scripts/stan/dvr_sp_chill_realdata.Rda")
m1.bb <- doym.b
cols <- adjustcolor("indianred3", alpha.f = 0.3)
subby <- subset(dx)
cresp <- ggplot(subby, aes(x=chill1, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=chill1, y=risk),method="lm") + theme(legend.position="none")
fresp <- ggplot(subby, aes(x=warm, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=warm, y=risk),method="lm") + theme(legend.position="none")
presp <- ggplot(subby, aes(x=photo, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=photo, y=risk),method="lm") + theme(legend.position="none")
lresp <- ggplot(subby, aes(x=chill2, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=chill2, y=risk),method="lm") + theme(legend.position="none")
grid.arrange(cresp, fresp, presp, lresp, ncol=4, nrow=1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
library(ggplot2)
library(rstan)
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/fakedata_exp.csv", header=TRUE)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx$sp <- as.numeric(as.factor(dx$sp))
dx$site <- as.numeric(as.factor(dx$site))
dx$risk<-dx$lday-dx$bday
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3; levels(dx$site) = 1:2
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
dx$site<- as.numeric(dx$site)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
unique(dxb$site)
dxb$site[dxb$site==1] <- 0
dxb$site[dxb$site==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
risk = dxb$risk # dvr as response
warm = as.numeric(dxb$warm)
site = as.numeric(dxb$site)
sp = as.numeric(dxb$sp)
photo = as.numeric(dxb$photo)
chill1 = as.numeric(dxb$chill1)
chill2 = as.numeric(dxb$chill2)
N = length(risk)
n_sp = length(unique(dxb$sp))
n_site = length(unique(dxb$site))
datalist.b<-list(risk=risk, warm=warm, site=site, sp=sp, photo=photo, chill1=chill1, chill2=chill2, N=N, n_sp=n_sp, n_site=n_site)
# 1. Budburst day.
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan', ### change when divergent transitions improve!!
data = datalist.b, warmup=1500, iter = 2000, chains = 2,
control = list(adapt_delta = 0.99))
sumerb <- summary(doym.b)$summary
sumerb[grep("mu_", rownames(sumerb)),]
betas <- as.matrix(doym.b, pars = c("mu_b_warm","mu_b_photo","mu_b_chill1", "mu_b_chill2", "mu_b_inter_wp", "mu_b_inter_wc1",
"mu_b_inter_wc2", "mu_b_inter_pc1", "mu_b_inter_pc2", "b_inter_wp_ncp", "b_inter_wc1_ncp", "b_inter_wc2_ncp",
"b_warm", "b_photo", "b_chill1", "b_chill2", "b_inter_pc1_ncp", "b_inter_pc2_ncp"))
mcmc_intervals(betas[,1:9])
save(doym.b, file="~/Documents/git/springfreeze/scripts/stan/dvr_sp_chill_fakedata.Rda")
m1.bb <- doym.b
cols <- adjustcolor("indianred3", alpha.f = 0.3)
subby <- subset(dx)
cresp <- ggplot(subby, aes(x=chill1, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=chill1, y=risk),method="lm") + theme(legend.position="none")
fresp <- ggplot(subby, aes(x=warm, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=warm, y=risk),method="lm") + theme(legend.position="none")
presp <- ggplot(subby, aes(x=photo, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=photo, y=risk),method="lm") + theme(legend.position="none")
lresp <- ggplot(subby, aes(x=chill2, y=risk)) + geom_point(aes(colour=sp)) +
geom_smooth(aes(x=chill2, y=risk),method="lm") + theme(legend.position="none")
grid.arrange(cresp, fresp, presp, lresp, ncol=4, nrow=1)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(grid)
library(car)
library(lme4)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
# Sort Weather Data
years<- c(2010, 2014)
w<-weather %>%
filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
# Determine HF false springs based on data
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2010), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
# Add Risk and only Two Years
years<-c("2010", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) %>%
filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="2010"] <- "early"
df$si[df$year=="2014"] <- "late"
df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
plot(gdd)
# Make a graph!
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2010", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
grid.newpage()
grid.draw(rbind(ggplotGrob(hf), ggplotGrob(gdd), size="first"))
df$mean<-ave(df$risk, df$year)
df$stand<-ave(df$risk, df$year, FUN = sd)
prep<-df%>%
gather("phenophase", "doy", bb.jd, l75.jd)
grand_union<-full_join(w, prep)
## Analysis
dxx<-grand_union%>%
dplyr::select(species, si, risk, count, phenophase, sp.year)
dxx<-na.omit(dxx)
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
years<- c(2010, 2014)
w<-weather %>%
filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
w<-dplyr::rename(w, year=Year)
w<-dplyr::rename(w, doy=JD)
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2010), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
years<-c("2010", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) %>%
filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="2010"] <- "early"
df$si[df$year=="2014"] <- "late"
df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
plot(gdd)
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2010", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
grid.newpage()
grid.draw(rbind(ggplotGrob(hf), ggplotGrob(gdd), size="first"))
df$mean<-ave(df$risk, df$year)
df$stand<-ave(df$risk, df$year, FUN = sd)
prep<-df%>%
gather("phenophase", "doy", bb.jd, l75.jd)
grand_union<-full_join(w, prep)
dxx<-grand_union%>%
dplyr::select(species, si, risk, count, phenophase, sp.year)
dxx<-na.omit(dxx)
dx<-spread(dxx, phenophase, count)
dx$gdd<-dx$l75.jd - dx$bb.jd
dx$year<-substr(dx$sp.year,6,9)
mod.gdd<-lmer(risk~bb.jd+year+(1|species), data=dx)
display(mod.gdd)
mod.gdd<-lmer(risk~gdd+year+(1|species), data=dx)
display(mod.gdd)
arm::display(mod.gdd)
View(df)
View(dx)
