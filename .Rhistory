View(dx)
# Prep
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
length(unique(dx$species))
small.spp<-dx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dx<-dx%>% filter(species %in% spp)
length(unique(dx$species))
dx$risk<-dx$lday-dx$bday
dx$force<-ifelse(dx$treatcode=="CS0", 0, 1)
dx$chill<-ifelse(dx$treatcode=="CS0", 0, 1)
dx<-dx%>%dplyr::select(-treatcode, -lday, -bday, -site)
write.csv(dx, file="~/Documents/git/springfreeze/analyses/output/danf_short.csv", row.names=FALSE)
dx<-dx%>%dplyr::select(-site, -ind)
write.csv(dx, file="~/Documents/git/springfreeze/output/danf_short.csv", row.names=FALSE)
dx<-read.csv("output/danf_short.csv", header=TRUE)
# Prep
#dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx$sp <- as.numeric(as.factor(dx$sp))
#dx$site <- as.numeric(as.factor(dx$site))
dx<-dx[!is.na(dx$risk),]
dxb <- dx[!is.na(dx$risk),]
dxb
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$warm)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$force)
unique(dxb$photo)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
########### NEW EDITION - CAT 26 May 2017 ####################
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
small.spp<-dx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dx<-dx%>% filter(species %in% spp)
dx$risk<-dx$lday-dx$bday
dx$force<-ifelse(dx$treatcode=="CS0", 0, 1)
dx$photo<-ifelse(dx$treatcode=="CS0", 0, 1)
dx$chill<-ifelse(dx$treatcode=="CS0", 0, 1)
dx<-dx%>%dplyr::select(-treatcode, -lday, -bday, -site)
write.csv(dx, file="~/Documents/git/springfreeze/output/danf_short.csv", row.names=FALSE)
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
library(ggplot2)
library(rstan)
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
library(gridExtra)
library(brms)
setwd("~/Documents/git/springfreeze/")
dx<-read.csv("output/danf_short.csv", header=TRUE)
# Prep
#dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx$sp <- as.numeric(as.factor(dx$sp))
dxb <- dx[!is.na(dx$risk),]
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$force)
unique(dxb$photo)
dxb<-filter(dxb, risk>0)
fit.brm<-brm(risk~ force + photo + chill1 + chill2 + force:photo + force:chill1 + force:chill2 +
photo:chill1 + photo:chill2 + (1|sp) + (force-1|sp) + (photo-1|sp)
+ (chill1-1|sp) + (chill2-1|sp) + (force:photo-1|sp) +
(force:chill1-1|sp) + (force:chill2-1|sp) +
(photo:chill1-1|sp) + (photo:chill2-1|sp), data=dxb)
fit.brm<-brm(risk~ force + photo + chill + force:photo + force:chill +
photo:chill + (1|sp) + (force-1|sp) + (photo-1|sp)
+ (chill-1|sp) + (force:photo-1|sp) +
(force:chill-1|sp) +
(photo:chill-1|sp), data=dxb)
fit.brm
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(lme4)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
### Prep data for Anovas
dxx<-d
dxx$species<-substr(dxx$ind, 1, 6)
dxx<-dxx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
small.spp<-dxx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dxx<-dxx%>% filter(species %in% spp)
dxx$chill<- as.numeric(as.character(substr(dxx$chill, 6, 6)))
dxx<-dplyr::select(dxx, id, sp, site, ind, warm, photo, chill, lday, bday)
dxx<-dxx[!is.na(dxx$lday),]
dxx<-dxx[!is.na(dxx$bday),]
dxx$risk<-dxx$lday-dxx$bday
dxx<-dxx[(dxx$risk>0),]
write.csv(dxx, file="~/Documents/git/springfreeze/output/danfdata.csv", row.names = FALSE)
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
library(ggplot2)
library(rstan)
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
library(gridExtra)
library(brms)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/danfdata.csv", header=TRUE)
# Prep
#dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx$sp <- as.numeric(as.factor(dx$sp))
#dx$site <- as.numeric(as.factor(dx$site))
dx<-dx[!is.na(dx$risk),]
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$warm<-ifelse(dx$warm==15, 0, 1)
dx$photo <- as.numeric(dx$photo)
dx$photo<-ifelse(dx$photo==8, 0, 1)
dx$chill <- as.numeric(dx$chill)
#dx$site<- as.numeric(dx$site)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$force)
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Important: Fixing the 1/2 issue to 0/1 here
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
unique(dxb$warm)
unique(dxb$photo)
dxb<-filter(dxb, risk>0)
unique(dxb$chill1)
unique(dxb$chill2)
dxb$force<-dxb$warm
fit.brm<-brm(risk~ force + photo + chill1 + chill2 + force:photo + force:chill1 +
force:chill2 + photo:chill1 + photo:chill2 + (1|sp) + (force-1|sp) + (photo-1|sp)
+ (chill1-1|sp) + (chill2-1|sp) + (force:photo-1|sp) +
(force:chill1-1|sp) + (force:chill2-1|sp) + (photo:chill1-1|sp) +
(photo:chill2-1|sp), data=dxb)
fit.brm
m<-fit.brm
m.int<-posterior_interval(m)
sum.m<-summary(m)
cri.f<-as.data.frame(sum.m$fixed[,c("Estimate", "l-95% CI", "u-95% CI")])
cri.f<-cri.f[-1,] #removing the intercept
fdf1<-as.data.frame(rbind(as.vector(cri.f[,1]), as.vector(cri.f[,2]), as.vector(cri.f[,3])))
fdf2<-cbind(fdf1, c(0, 0, 0) , c("Estimate", "2.5%", "95%"))
names(fdf2)<-c(rownames(cri.f), "sp", "perc")
cri.r<-(ranef(m, summary = TRUE, robust = FALSE,
probs = c(0.025, 0.975)))$sp
cri.r2<-cri.r[, ,-1]
cri.r2<-cri.r2[,-2,]
dims<-dim(cri.r2)
twoDimMat <- matrix(cri.r2, prod(dims[1:2]), dims[3])
mat2<-cbind(twoDimMat, c(rep(1:9, length.out=27)), rep(c("Estimate", "2.5%", "95%"), each=9))
df<-as.data.frame(mat2)
names(df)<-c(rownames(cri.f), "sp", "perc")
dftot<-rbind(fdf2, df)
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=24)) {
for (j in seq(from=2, to=23, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=24)) {
for (j in seq(from=3, to=23, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=27)) {
for (j in seq(from=3, to=26, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$sp>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$sp<-as.factor(dfwide$sp)
View(df)
View(dx)
dx$species<-substr(id, 0,6)
dx$species<-substr(dx$id, 0,6)
View(dx)
unique(dx$species)
fig1 <-ggplot(dftot, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "Duration of Vegetative Risk")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var))))
pd <- position_dodgev(height = -0.5)
pd <- position_dodge(height = -0.5)
install.packages("ggstance")
library("ggstance", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
pd <- position_dodgev(height = -0.5)
fig1 <-ggplot(dftot, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "Duration of Vegetative Risk")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var))))
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "Duration of Vegetative Risk")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var))))
fig1
View(dfwide)
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
View(dflong)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=24)) {
for (j in seq(from=4, to=30, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=27)) {
for (j in seq(from=4, to=30, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=27)) {
for (j in seq(from=4, to=26, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$sp>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$sp<-as.factor(dfwide$sp)
pd <- position_dodgev(height = -0.5)
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "Duration of Vegetative Risk")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var))))
fig1
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=30)) {
for (j in seq(from=4, to=29, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$sp>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$sp<-as.factor(dfwide$sp)
pd <- position_dodgev(height = -0.5)
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "Duration of Vegetative Risk")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var))))
fig1
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=30)) {
for (j in seq(from=3, to=29, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$sp>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$sp<-as.factor(dfwide$sp)
pd <- position_dodgev(height = -0.5)
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "Duration of Vegetative Risk")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var))))
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
guides(fill=guide_legend(title="Fixed and Random Effects"))
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
scale_fill_discrete(name = "Effects")
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
labs("Effects")
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "ACEPEN", "ACERUB", "ACESAC", "BETALL", "BETPAP", "FAGGRA", "ILEMUC",
"POPGRA", "QUERUB"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
labs(col="Effects")
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", "A. pensylvanicum", "A. rubrum", "A. saccharum", "B. alleghaniensis", "B. papyrifera", "F. grandifolia", "I. mucronata",
"P. grandidentata", "Q. rubra"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
labs(col="Effects") + theme(legend.text=element_text(size=10))
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = c("Fixed effects", italic("A. pensylvanicum"), italic("A. rubrum"), italic("A. saccharum"), "B. alleghaniensis", "B. papyrifera", "F. grandifolia", "I. mucronata",
"P. grandidentata", "Q. rubra"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
labs(col="Effects") + theme(legend.text=element_text(size=10))
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = expression(c("Fixed effects", italic("A. pensylvanicum"), italic("A. rubrum"), italic("A. saccharum"), "B. alleghaniensis", "B. papyrifera", "F. grandifolia", "I. mucronata",
"P. grandidentata", "Q. rubra")),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
labs(col="Effects") + theme(legend.text=element_text(size=10))
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = expression("Fixed effects", italic("A. pensylvanicum"), italic("A. rubrum"), italic("A. saccharum"), "B. alleghaniensis", "B. papyrifera", "F. grandifolia", "I. mucronata",
"P. grandidentata", "Q. rubra"),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
labs(col="Effects") + theme(legend.text=element_text(size=10))
fig1
fig1 <-ggplot(dfwide, aes(x=Estimate, y=var, color=factor(sp), size=factor(rndm), alpha=factor(rndm)))+
geom_point(position =pd, size=4)+
geom_errorbarh(aes(xmin=(`2.5%`), xmax=(`95%`)), position=pd, size=.5, height =0)+
geom_vline(xintercept=0)+
scale_colour_manual(labels = expression("Fixed effects", italic("A. pensylvanicum"), italic("A. rubrum"), italic("A. saccharum"), italic("B. alleghaniensis"),
italic("B. papyrifera"), italic("F. grandifolia"), italic("I. mucronata"),
italic("P. grandidentata"), italic("Q. rubra")),
values=c("blue", "red", "orangered1","orangered3", "sienna4","sienna2", "green4", "green1", "purple2", "magenta2"))+
scale_shape_manual(labels="", values=c("1"=16,"2"=16))+
scale_alpha_manual(values=c(1, 0.5))+
guides(alpha=FALSE) + #removes the legend
ggtitle(label = "A.")+
scale_y_discrete(limits = rev(unique(sort(dfwide$var)))) + ylab("") +
labs(col="Effects") + theme(legend.text=element_text(size=10))
fig1
######################################################################################
##################### Making two plots for manuscript ################################
dxx<-read.csv("output/diffplot.csv", header=TRUE)
diff<-ggplot(dxx, aes(x=factor(code), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*" in DVR between treatments")) + coord_cartesian(ylim=c(0,25)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10)) +
annotate("text", x = 1, y = 25, label = "A.", fontface = "bold")
plot(diff)
diff<-ggplot(dxx, aes(x=factor(code), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*" in DVR between treatments")) + coord_cartesian(ylim=c(0,25)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10)) +
annotate("text", x = 1, y = 25, label = "B.")
plot(diff)
grid.draw(fig1, diff, ncol=2)
diff<-ggplot(dxx, aes(x=factor(code), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*" in DVR between treatments")) + coord_cartesian(ylim=c(0,25)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10)) +
ggtitle(label="B.")
plot(diff)
ggarrange(diff, beta, ncol=2)
library(gridExtra)
library(egg)
ggarrange(fig1, diff, ncol=2)
ggarrange(fig1, diff, ncol=2)
fit.brm
