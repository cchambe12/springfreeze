xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ncdf4)
library(Interpol.T)
library(chillR)
library(raster)
library(maptools)
library(rgeos)
library(rgdal)
raster1<-brick("~/Desktop/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
eur.temp<-nc_open("~/Desktop/tn_0.25deg_reg_v16.0.nc")
raster1<-brick("//WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc", varname="tn", sep="")
eur.temp <- nc_open("//128.103.155.31/WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc")
plot(raster1[[45]])
#raster1 <- setMinMax(raster1)
#length(doy)/365
doy<-ncvar_get(eur.temp, "time")
doy<-as.Date(doy, origin="1950-01-01")
day<-substr(doy, 9,10)
year<-as.numeric(substr(doy, 1, 4))
month<-as.numeric(substr(doy, 6, 7))
timevec<-paste(year, month, day, sep="-")
years.vec<-as.character(timevec, format="Y-%m-%d")
year<-as.numeric(substr(years.vec, 1, 4))
#doy.vec<-as.POSIXlt(names(raster1), format="X%j")
dates<-as.Date(years.vec)
names(raster1)<-dates
empty.raster<-raster1[[1]]
values(empty.raster)<-NA
years<-1950:2016
leaps <- function(x) {
m <- c()
for(i in 1:50) {
year.i <- years[which(((years %% 4 == 0) & (years %% 100 !=0) | (years %% 400 == 0)))]
m <- c(m, year.i)
}
return(m)
}
leap.years<-as.data.frame(leaps(1))
leap.years<-leap.years[!duplicated(leaps(1)),]
#year<-1950:2016
empty.raster<-raster1[[1]]
num.false.spring.year<-list()
#dates.false.spring<-list()
for(i in 1951:1983){#i=1952
print(i)
year.i<-i
is.leap<-ifelse(year.i%in%leap.years,TRUE,FALSE)
sequence.years<-which(year==year.i)
#length(sequence.years)
raster.sub<-subset(raster1,sequence.years)
#numnonas<-sum(!is.na(values(raster.sub[[1]])))
rast.array<-array(75,dim=c(ncell(raster.sub),181))
if(is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
if(!is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
#dates.fs<-apply(rast.array, 1, function(x){ifelse(x<=-2.2, x, 0)})
num.false.spring<-apply(rast.array,1,function(x){sum(ifelse(x<=-2.2,1,0))})
non.nas.ids<-which(!is.na(num.false.spring))
#values(emp.rast)<-NA
values(empty.raster)<- NA
#non.nas.dates<-which(!is.na(dates.fs))
#plot(raster1[[1]])
values(empty.raster)[non.nas.ids]<- num.false.spring[!is.na(num.false.spring)]
#values(empty.raster)[non.nas.dates]<- dates.fs[!is.na(dates.fs)]
#plot(empty.raster)
#dates.false.spring[[i]]<- empty.raster
num.false.spring.year[[i]]<-empty.raster
}
length(num.false.spring.year)
final.raster.preCC<-stack(unlist(num.false.spring.year))
summed.false.springs.preCC<-calc(final.raster.preCC,sum)
fs.years.pre<-calc(final.raster.preCC, function(x) {sum(ifelse(x>=1,1,0))})
writeRaster(fs.years.pre,"~/Documents/git/regionalrisk/analyses/output/fs.30.pre", bylayer=TRUE,format="GTiff")
install.packages("gdal")
library(gdal)
library(rgdal)
install.packages("gdalUtils")
library("gdalUtils", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgeos", repos = "http://R-Forge.R-project.org", type = "source")
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", type="source")
library(rgdal)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
rgdal::writeRaster(fs.years.post,"~/Documents/git/regionalrisk/analyses/output/fs.postCC", bylayer=TRUE,format="GTiff")
install.packages("rgeos", type="source")
install.packages("rgeos", type = "source")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages(c('rgdal','rgeos'),repos="http://www.stats.ox.ac.uk/pub/RWin")
library("rgeos", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:rgeos", unload=TRUE)
install.packages("rgdal")
install.packages("installr")
updateR()
install.packages("updateR")
version
if(!require(installr)) {
install.packages("installr");
require(installr)
}
library(installr)
version
# Clear workspace
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(gridExtra)
library(gtable)
library(reshape2)
library(grid)
library(egg)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
lat<-read.csv("input/NOAA_Eur50.csv", header=TRUE)
amer<-read.csv("input/NOAA_data2.csv", header=TRUE)
nc<-read.csv("input/N.Carolina.csv", header=TRUE)
new<-read.csv("input/Newport.csv", header=TRUE)
mid<-read.csv("input/midwest.csv", header=TRUE)
france<-read.csv("input/Lyon.csv", header=TRUE)
#####################################################################
## Plots by Month
# Bamberg,Germany: DOY 90-120
lat1<-lat %>%
dplyr::select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "BAMBERG GM") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
lat1<- lat1 %>%
filter(year>=1965) %>%
filter(year<2016)
lat1$month<- substr(lat1$date, 5, 6)
lat1$day<- substr(lat1$date, 7,8)
lat1<- lat1 %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date, Tmin, Tmax)
lat1$doy<-yday(lat1$date)
lat1$day<-substr(lat1$date,9,10)
lat1$year<-substr(lat1$date,0,4)
lat1$month<-substr(lat1$date, 6,7)
lat1$biweek<-ifelse(lat1$day<=15,1,2)
lat1<-lat1%>%unite(biweekly,month,biweek, sep="_")
lat1$Tmean <- (lat1$Tmax + lat1$Tmin)/2
lat1$gdd <- lat1$Tmean - 5
lat1$gdd <-ifelse(lat1$gdd>0, lat1$gdd, 0)
lat1$frz<- ifelse((lat1$Tmin<=-2.2), 1, 0)
lat1$count <- ave(
lat1$frz, lat1$biweekly, lat1$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
lat1<- lat1 %>%
filter(doy >= 90) %>%
filter(doy <= 120)
gm.count<- lat1 %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
gm.count$mean<-ave(gm.count$count, gm.count$biweekly)
gm.count$stand_dev<-ave(gm.count$count, gm.count$biweekly, FUN=sd)
gm.high<-gm.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(gm.count)
gm.low<-gm.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(gm.count)
gm.count<-full_join(gm.count, gm.high)
gm.count<-full_join(gm.count, gm.low)
gm<-gm.count %>%
ungroup(gm.count) %>%
dplyr::select(-count, -year)
gm<-gm%>% filter (! duplicated(biweekly))
gm$site<-"Bavaria, DE"
gm.count$site<-"Bavaria, DE"
View(gm)
# Waterville, ME: DOY 100-150
water<-mid %>%
dplyr::select(STATION_NAME,DATE, TMIN, TMAX) %>%
filter(STATION_NAME == "WATERVILLE WWTP ME US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
water$year <- substr(water$date, 0, 4)
water<- water %>%
filter(year>=1965) %>%
filter(year<2016)
water$month<- substr(water$date, 5, 6)
water$day<- substr(water$date, 7,8)
water<- water %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date, Tmin, Tmax)
water$doy<-yday(water$date)
water$year<-substr(water$date,0,4)
water$day<-substr(water$date, 9,10)
water$month<-substr(water$date, 6,7)
water$biweek<-ifelse(water$day<=15,1,2)
water<-water%>%unite(biweekly,month,biweek, sep="_")
water$Tmean <- (water$Tmax + water$Tmin)/2
water$gdd <- water$Tmean - 5
water$gdd <-ifelse(water$gdd>0, water$gdd, 0)
water$frz<- ifelse((water$Tmin<=-2.2), 1, 0)
water$count <- ave(
water$frz, water$biweekly, water$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
water<- water %>%
filter(doy >= 100) %>%
filter(doy <= 150)
water.count<- water %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
water.count$mean<-ave(water.count$count, water.count$biweekly)
water.count$stand_dev<-ave(water.count$count, water.count$biweekly, FUN=sd)
water.high<-water.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(water.count)
water.low<-water.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(water.count)
water.count<-full_join(water.count, water.high)
water.count<-full_join(water.count, water.low)
maine<-water.count %>%
ungroup(water.count) %>%
dplyr::select(-count, -year)
maine<-maine%>% filter (! duplicated(biweekly))
maine$site<-"Maine, USA"
water.count$site<-"Maine, USA"
View(maine)
# Yakima Airport: March 22-Apr 30
am8<-amer %>%
dplyr::select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "YAKIMA AIRPORT WA US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
am8$year <- substr(am8$date, 0, 4)
am8<- am8 %>%
filter(year>=1965) %>%
filter(year<2016)
am8$month<- substr(am8$date, 5, 6)
am8$day<- substr(am8$date, 7,8)
am8<- am8 %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date,Tmin, Tmax)
am8$doy<-yday(am8$date)
am8$year<-substr(am8$date,0,4)
am8$month<-substr(am8$date, 6,7)
am8$day<-substr(am8$date, 9,10)
am8$biweek<-ifelse(am8$day<=15,1,2)
am8<-am8%>%unite(biweekly,month,biweek, sep="_")
am8$Tmean <- (am8$Tmax + am8$Tmin)/2
am8$gdd <- am8$Tmean - 5
am8$gdd <-ifelse(am8$gdd>0, am8$gdd, 0)
am8$frz<- ifelse((am8$Tmin<=-2.2), 1, 0)
am8$count <- ave(
am8$frz, am8$biweekly, am8$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
am8<- am8 %>%
filter(doy >= 80) %>%
filter(doy <= 120)
wash.count<- am8 %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
wash.count$mean<-ave(wash.count$count, wash.count$biweekly)
wash.count$stand_dev<-ave(wash.count$count, wash.count$biweekly, FUN=sd)
wash.high<-wash.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(wash.count)
wash.low<-wash.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(wash.count)
wash.count<-full_join(wash.count, wash.high)
wash.count<-full_join(wash.count, wash.low)
wash<-wash.count %>%
ungroup(wash.count) %>%
dplyr::select(-count, -year)
wash<-wash%>% filter (! duplicated(biweekly))
wash$site<-"Washington, USA"
wash.count$site<-"Washington, USA"
# North Carolina: Feb 21 - Apr 4
## 1967 and 2012 both have one extra count (-9999degC)
nc1<-nc %>%
dplyr::select(STATION_NAME,DATE, TMIN, TMAX) %>%
filter(STATION_NAME == "REIDSVILLE 2 NW NC US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
nc1$year <- substr(nc1$date, 0, 4)
nc1<- nc1 %>%
filter(year>=1965) %>%
filter(year<2016)
nc1$month<- substr(nc1$date, 5, 6)
nc1$day<- substr(nc1$date, 7,8)
nc1<- nc1 %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date, Tmin, Tmax)
nc1$doy<-yday(nc1$date)
nc1$year<-substr(nc1$date,0,4)
nc1$month<-substr(nc1$date, 6,7)
nc1$day<-substr(nc1$date,9,10)
nc1$biweek<-ifelse(nc1$day<=15,1,2)
nc1<-nc1%>%unite(biweekly,month,biweek, sep="_")
nc1$Tmean <- (nc1$Tmax + nc1$Tmin)/2
nc1$gdd <- nc1$Tmean - 5
nc1$gdd <-ifelse(nc1$gdd>0, nc1$gdd, 0)
nc1$frz<- ifelse((nc1$Tmin<=-2.2), 1, 0)
nc1$count <- ave(
nc1$frz, nc1$biweekly, nc1$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
nc1<- nc1 %>%
filter(doy >= 50) %>%
filter(doy <= 100)
nc1$Tmin<-ifelse(nc1$Tmin==-9999, NA, nc1$Tmin)
nc1<-na.omit(nc1)
nc.count<- nc1 %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
nc.count$mean<-ave(nc.count$count, nc.count$biweekly)
nc.count$stand_dev<-ave(nc.count$count, nc.count$biweekly, FUN=sd)
nc.high<-nc.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(nc.count)
nc.low<-nc.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(nc.count)
nc.count<-full_join(nc.count, nc.high)
nc.count<-full_join(nc.count, nc.low)
nc2<-nc.count %>%
ungroup(nc.count) %>%
dplyr::select(-count, -year)
nc2<-nc2%>% filter (! duplicated(biweekly))
nc2$site<-"North Carolina, USA"
nc.count$site<-"North Carolina, USA"
# Lyon, France: Apr 5 - May 10
ren<-france %>%
dplyr::select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "BRON LYON AEROPORT FR") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
ren$year <- substr(ren$date, 0, 4)
ren<- ren %>%
filter(year>=1965) %>%
filter(year<2016)
ren$month<- substr(ren$date, 5, 6)
ren$day<- substr(ren$date, 7,8)
ren<- ren %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date,Tmin, Tmax)
ren$doy<-yday(ren$date)
ren$year<-substr(ren$date,0,4)
ren$month<-substr(ren$date, 6,7)
ren$day<-substr(ren$date,9,10)
ren$biweek<-ifelse(ren$day<=15,1,2)
ren<-ren%>%unite(biweekly,month,biweek, sep="_")
ren$Tmean <- (ren$Tmax + ren$Tmin)/2
ren$gdd <- ren$Tmean - 5
ren$gdd <-ifelse(ren$gdd>0, ren$gdd, 0)
ren$frz<- ifelse((ren$Tmin<=-2.2), 1, 0)
ren$count <- ave(
ren$frz, ren$biweekly, ren$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
ren<- ren %>%
filter(doy >= 95) %>%
filter(doy <= 130)
ren.count<- ren %>%
dplyr::select(year,biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
ren.count$mean<-ave(ren.count$count, ren.count$biweekly)
ren.count$stand_dev<-ave(ren.count$count, ren.count$biweekly, FUN=sd)
ren.high<-ren.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(ren.count)
ren.low<-ren.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(ren.count)
ren.count<-full_join(ren.count, ren.high)
ren.count<-full_join(ren.count, ren.low)
ren1<-ren.count %>%
ungroup(ren.count) %>%
dplyr::select(-count, -year)
ren1<-ren1%>% filter (! duplicated(biweekly))
ren1$site<-"Rhone-Alps, FR"
ren.count$site<-"Rhone-Alps, FR"
d<-full_join(gm, wash)
d<-full_join(d, nc2)
d<-full_join(d, ren1)
d<-full_join(d, maine)
df<-full_join(gm.count,wash.count)
df<-full_join(df, nc.count)
df<-full_join(df, ren.count)
df<-full_join(df, water.count)
View(d)
d$biweekly<-ifelse(d$biweekly=="02_2", "Feb 15 - Feb 29", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="03_1", "Mar 1 - Mar 14", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="03_2", "Mar 15 - Mar 31", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="04_1", "Apr 1 - Apr 14", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="04_2", "Apr 15 - Apr 30", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="05_1", "May 1 - May 14", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="05_2", "May 15 - May 31", d$biweekly)
risk<-ggplot(d, aes(x=biweekly, y=mean, color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")))) +
geom_point() + ylab("Number of days below -2.2C per two week period") +
geom_line(aes(x=biweekly, y=mean,  color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")), group=site)) +
geom_linerange(aes(ymax = d$mean + d$stand_dev, ymin=d$mean-d$stand_dev), stat="density", position=position_dodge(.2), alpha=0.3, size=2) + labs(color="Location and Day of Budburst Range") +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), legend.position=c(0.6,0.90),
legend.key.size=unit(0.35, "cm"), plot.margin=unit(c(.2,.2,-.3,.5),"cm"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_x_discrete(breaks=c(53, 66, 82, 98, 114, 128, 144), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31")) +
annotate("text", x = -13, y = 10, label = "Climate Data", fontface = "bold")
risk
x<- data.frame("Site"=c( "Rhone-Alps, FR", "Bavaria, DE", "Maine, USA", "North Carolina, USA","Washington, USA"), "Earliest"=c( 90,90, 100, 50, 80),
"Early" = c( 100, 112, 115, 80,100), "Late" = c( 115, 127, 120, 90, 120), "Latest" = c( 120,140, 150, 100, 130))
fix<-x%>%
gather("time", "doy", Earliest, Early, Late, Latest) %>%
arrange(desc(Site))
fix$biweekly<-ifelse((fix$doy>=46 & fix$doy <=60), "Feb 15 - Feb 29", fix$doy)
fix$biweekly<-ifelse((fix$doy>=61 & fix$doy <=73), "Mar 1 - Mar 14", fix$biweekly)
fix$biweekly<-ifelse((fix$doy>=74 & fix$doy <=91), "Mar 15 - Mar 31", fix$biweekly)
fix$biweekly<-ifelse((fix$doy>=92 & fix$doy <=106), "Apr 1 - Apr 14", fix$biweekly)
fix$biweekly<-ifelse((fix$doy>=107 & fix$doy <=121), "Apr 15 - Apr 30", fix$biweekly)
fix$biweekly<-ifelse((fix$doy>=122 & fix$doy <=136), "May 1 - May 14", fix$biweekly)
fix$biweekly<-ifelse((fix$doy>=137 & fix$doy <=152), "May 15 - May 31", fix$biweekly)
fix$doy<-as.numeric(as.character(fix$doy))
fix2 <- transform(fix, Site = reorder(Site, order(Site, decreasing = TRUE)))
fix$Site <- factor(fix$Site,levels=sort(unique(fix$Site), decreasing=FALSE))
time<- ggplot((fix), aes(y=doy, x=Site, color=Site)) + geom_boxplot(aes(y=doy, x=Site, fill=Site), width=0.2) + coord_flip() +
scale_y_continuous(breaks=c(55, 70, 85, 101, 116, 131, 146), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"), position="top") +
theme(legend.position="none", aspect.ratio=0.3,
panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.margin=unit(c(-.2,.5,.2,.5),"cm")) +
ylab("") + xlab("") + scale_x_discrete(limits = rev(levels(fix$Site))) + annotate("text", x = -13, y = 10, label = "Phenology Data", fontface = "bold")
ggarrange(risk, time, nrow=2)
risk<-ggplot(d, aes(x=biweekly, y=mean, color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")))) +
geom_point() + ylab("Number of days below -2.2C per two week period") +
geom_line(aes(x=biweekly, y=mean,  color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")), group=site)) +
geom_linerange(aes(ymax = d$mean + d$stand_dev, ymin=d$mean-d$stand_dev), stat="density", position=position_dodge(.2), alpha=0.3, size=2) + labs(color="Location and Day of Budburst Range") +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), legend.position=c(0.6,0.90),
legend.key.size=unit(0.35, "cm"), plot.margin=unit(c(.2,.2,-.3,.5),"cm"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_x_discrete(breaks=c(53, 66, 82, 98, 114, 128, 144), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"))
time<- ggplot((fix), aes(y=doy, x=Site, color=Site)) + geom_boxplot(aes(y=doy, x=Site, fill=Site), width=0.2) + coord_flip() +
scale_y_continuous(breaks=c(55, 70, 85, 101, 116, 131, 146), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"), position="top") +
theme(legend.position="none", aspect.ratio=0.3,
panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.margin=unit(c(-.2,.5,.2,.5),"cm")) +
ylab("") + xlab("") + scale_x_discrete(limits = rev(levels(fix$Site)))
ggarrange(risk, time, nrow=2)
d$top<-as.numeric(d$mean+d$stand_dev)
d$bot<-as.numeric(d$mean-d$stand_dev)
risk<-ggplot(d, aes(x=biweekly, y=mean, color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")))) +
geom_point() + ylab("Number of days below -2.2C per two week period") +
geom_line(aes(x=biweekly, y=mean,  color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")), group=site)) +
geom_linerange(aes(ymax = d$top, ymin=d$bot), stat="density", position=position_dodge(.2), alpha=0.3, size=2) + labs(color="Location and Day of Budburst Range") +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), legend.position=c(0.6,0.90),
legend.key.size=unit(0.35, "cm"), plot.margin=unit(c(.2,.2,-.3,.5),"cm"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_x_discrete(breaks=c(53, 66, 82, 98, 114, 128, 144), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"))
time<- ggplot((fix), aes(y=doy, x=Site, color=Site)) + geom_boxplot(aes(y=doy, x=Site, fill=Site), width=0.2) + coord_flip() +
scale_y_continuous(breaks=c(55, 70, 85, 101, 116, 131, 146), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"), position="top") +
theme(legend.position="none", aspect.ratio=0.3,
panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.margin=unit(c(-.2,.5,.2,.5),"cm")) +
ylab("") + xlab("") + scale_x_discrete(limits = rev(levels(fix$Site)))
ggarrange(risk, time, nrow=2)
risk<-ggplot(d, aes(x=biweekly, y=mean, color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")))) +
geom_point() + ylab("Number of days below -2.2C per two week period") +
geom_line(aes(x=biweekly, y=mean,  color=factor(site, labels = c("Bavaria, DE: March 31 - April 30", "Maine, USA: April 10 - May 30",
"North Carolina, USA: February 21 - April 4",  "Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30")), group=site)) +
geom_linerange(aes(ymax = d$high, ymin=d$low), stat="density", position=position_dodge(.2), alpha=0.3, size=2) + labs(color="Location and Day of Budburst Range") +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), legend.position=c(0.6,0.90),
legend.key.size=unit(0.35, "cm"), plot.margin=unit(c(.2,.2,-.3,.5),"cm"), axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_x_discrete(breaks=c(53, 66, 82, 98, 114, 128, 144), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"))
time<- ggplot((fix), aes(y=doy, x=Site, color=Site)) + geom_boxplot(aes(y=doy, x=Site, fill=Site), width=0.2) + coord_flip() +
scale_y_continuous(breaks=c(55, 70, 85, 101, 116, 131, 146), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"), position="top") +
theme(legend.position="none", aspect.ratio=0.3,
panel.grid.major = element_blank(),panel.grid.minor = element_blank(), plot.margin=unit(c(-.2,.5,.2,.5),"cm")) +
ylab("") + xlab("") + scale_x_discrete(limits = rev(levels(fix$Site)))
ggarrange(risk, time, nrow=2)
