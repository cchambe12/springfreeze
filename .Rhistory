has.count<- select(am8, year, fs)
has.count<-na.omit(has.count)
has.count<-as.data.frame(table(has.count$year))
lat12<-italy %>%
select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "GHEDI IT") %>%
rename(Tmean = TAVG) %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
lat12$year <- substr(lat12$date, 0, 4)
lat12<- filter(lat12, year>=1986)
lat12$month<- substr(lat12$date, 5, 6)
lat12$day<- substr(lat12$date, 7,8)
lat12<- lat12 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin, Tmax)
lat12$doy<-yday(lat12$date)
lat12$year<-substr(lat12$date,0,4)
lat12$gdd <- lat12$Tmean - 10
lat12$gdd <-ifelse(lat12$gdd>0, lat12$gdd, NA)
lat12$warm<- ifelse(!is.na(lat12$gdd), 1, 0)
lat12$frz<- ifelse((lat12$Tmean<=0), "freeze", "thaw")
lat12$count <- ave(
lat12$warm, lat12$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
lat12<- lat12 %>%
filter(doy >= 60) %>%
filter(doy <= 210)
lat12$fs<- ifelse((lat12$count >= 40 & lat12$frz == "freeze"), TRUE, NA)
tor.count<- select(lat12, year, fs)
tor.count<-na.omit(tor.count)
tor.count<-as.data.frame(table(tor.count$year))
View(tor.count)
View(lat12)
am9<-italy %>%
select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "YANKTON SD US") %>%
rename(Tmean = TAVG) %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
am9$year <- substr(am9$date, 0, 4)
am9<- filter(am9, year>=1986)
am9$month<- substr(am9$date, 5, 6)
am9$day<- substr(am9$date, 7,8)
am9<- am9 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin, Tmax)
am9$doy<-yday(am9$date)
am9$year<-substr(am9$date,0,4)
am9$gdd <- am9$Tmax - 10
am9$gdd <-ifelse(am9$gdd>0, am9$gdd, NA)
am9$warm<- ifelse(!is.na(am9$gdd), 1, 0)
am9$frz<- ifelse((am9$Tmin<=-2.2), "freeze", "thaw")
am9$count <- ave(
am9$warm, am9$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
am9<- am9 %>%
filter(doy >= 60) %>%
filter(doy <= 210)
am9$fs<- ifelse((am9$count >= 50 & am9$frz == "freeze"), TRUE, NA)
yan.count<- select(am9, year, fs)
yan.count<-na.omit(yan.count)
yan.count<-as.data.frame(table(yan.count$year))
View(yan.count)
View(has.count)
View(yan.count)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/Budburst.DF.csv",header=TRUE)
# Convert to Julian day
timeline$DOY<-yday(timeline$Date)
phases<-c("4","7")
tx<-c("WL2","CS1", "WL0", "CS2") # may want to use WL1 instead?
timeline<-timeline %>%
select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(treatcode %in% tx) %>%
filter(tleaf %in% phases)
timeline$tleaf<- factor(timeline$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
hf.buds <- hf %>%
filter(treatcode == "CS2") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
hf.leaves <- hf %>%
filter(treatcode == "CS2") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
hf.Risk <- hf %>%
filter(treatcode == "CS2") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cold<-full_join(hf.buds, hf.leaves)
cold<-full_join(cold, hf.Risk)
cold$tx<-"CS2"
cs1.buds <- hf %>%
filter(treatcode == "CS1") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
cs1.leaves <- hf %>%
filter(treatcode == "CS1") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
cs1.Risk <- hf %>%
filter(treatcode == "CS1") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cs1<-full_join(cs1.buds, cs1.leaves)
cs1<-full_join(cs1, cs1.Risk)
cs1$tx<-"CS1"
warm.buds <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
warm.leaves <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
warm.Risk <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
warm<-full_join(warm.buds, warm.leaves)
warm<-full_join(warm, warm.Risk)
warm$tx<-"WL2"
med.buds <- hf %>%
filter(treatcode == "WL1") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
med.leaves <- hf %>%
filter(treatcode == "WL1") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
med.Risk <- hf %>%
filter(treatcode == "WL1") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
med<-full_join(med.buds, med.leaves)
med<-full_join(med, med.Risk)
med$tx<-"WL1"
wlo.buds <- hf %>%
filter(treatcode == "WL0") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
wlo.leaves <- hf %>%
filter(treatcode == "WL0") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
wlo.Risk <- hf %>%
filter(treatcode == "WL0") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
wlo<-full_join(wlo.buds, wlo.leaves)
wlo<-full_join(wlo, wlo.Risk)
wlo$tx<-"WL0"
hf<-bind_rows(warm,cold, med, wlo, cs1)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
sp.code<-read.csv("output/Dans.timeline.csv",header=TRUE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
sp.code<-write.csv("output/Dans.timeline.csv",header=TRUE)
sp.code<-write.csv("~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
write.csv(file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
sp.code<-read.csv("output/Dans.timeline.csv",header=TRUE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
hf.lm<-ggplot((sp.code), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=tx))
plot(hf.lm)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/Budburst.DF.csv",header=TRUE)
# Convert to Julian day
timeline$DOY<-yday(timeline$Date)
phases<-c("4","7")
tx<-c("WL2","CS1", "WL0", "CS2") # may want to use WL1 instead?
timeline<-timeline %>%
select(id, sp, site, tleaf, DOY, treatcode) %>%
filter(treatcode %in% tx) %>%
filter(tleaf %in% phases)
timeline$tleaf<- factor(timeline$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
hf<- timeline%>%
filter(site == "HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
hf<-na.omit(hf)
hf$Risk <- hf$Leaves - hf$Budburst
hf<-filter(hf, Risk > 0)
hf.buds <- hf %>%
filter(treatcode == "CS2") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
hf.leaves <- hf %>%
filter(treatcode == "CS2") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
hf.Risk <- hf %>%
filter(treatcode == "CS2") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cold<-full_join(hf.buds, hf.leaves)
cold<-full_join(cold, hf.Risk)
cold$tx<-"CS2"
cs1.buds <- hf %>%
filter(treatcode == "CS1") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
cs1.leaves <- hf %>%
filter(treatcode == "CS1") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
cs1.Risk <- hf %>%
filter(treatcode == "CS1") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
cs1<-full_join(cs1.buds, cs1.leaves)
cs1<-full_join(cs1, cs1.Risk)
cs1$tx<-"CS1"
warm.buds <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
warm.leaves <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
warm.Risk <- hf %>%
filter(treatcode == "WL2") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
warm<-full_join(warm.buds, warm.leaves)
warm<-full_join(warm, warm.Risk)
warm$tx<-"WL2"
med.buds <- hf %>%
filter(treatcode == "WL1") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
med.leaves <- hf %>%
filter(treatcode == "WL1") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
med.Risk <- hf %>%
filter(treatcode == "WL1") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
med<-full_join(med.buds, med.leaves)
med<-full_join(med, med.Risk)
med$tx<-"WL1"
wlo.buds <- hf %>%
filter(treatcode == "WL0") %>%
select(sp,id,Budburst) %>%
group_by(sp) %>%
summarise_each(funs(mean), Budburst)
wlo.leaves <- hf %>%
filter(treatcode == "WL0") %>%
select(sp,id,Leaves) %>%
group_by(sp) %>%
summarise_each(funs(mean), Leaves)
wlo.Risk <- hf %>%
filter(treatcode == "WL0") %>%
select(sp,id,Risk) %>%
group_by(sp) %>%
summarise_each(funs(mean), Risk)
wlo<-full_join(wlo.buds, wlo.leaves)
wlo<-full_join(wlo, wlo.Risk)
wlo$tx<-"WL0"
hf<-bind_rows(warm,cold, med, wlo, cs1)
species<-c("ACERUB", "BETPAP", "ILEMUC", "POPGRA", "QUERUB")
hf<- hf %>%
group_by(sp,tx) %>%
filter(sp %in% species)
sp.code<-hf %>%
unite(sp.code, sp, tx)
sp.code$tx<- substr(sp.code$sp.code, 8, 10)
# Make a plot
sp.code$code <- reorder(sp.code$sp.code, sp.code$Leaves)
write.csv(sp.code, file="~/Documents/git/springfreeze/output/Dans.timeline.csv",row.names=FALSE)
hf.plot<-ggplot((sp.code), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= hf$Budburst)) +
geom_segment(aes(y = sp.code, yend = sp.code, x = Budburst, xend = Leaves, col=tx)) +
geom_point(aes(x=Leaves, col=tx)) + geom_point(aes(col=tx)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
plot(hf.plot)
am10<-kansas %>%
select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "GRAND FORKS UNIVERSITY NWS ND US") %>%
rename(Tmean = TAVG) %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
am10$year <- substr(am10$date, 0, 4)
am10<- filter(am10, year>=1986)
am10$month<- substr(am10$date, 5, 6)
am10$day<- substr(am10$date, 7,8)
am10<- am10 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin, Tmax)
am10$doy<-yday(am10$date)
am10$year<-substr(am10$date,0,4)
am10$gdd <- am10$Tmax - 10
am10$gdd <-ifelse(am10$gdd>0, am10$gdd, NA)
am10$warm<- ifelse(!is.na(am10$gdd), 1, 0)
am10$frz<- ifelse((am10$Tmin<=-2.2), "freeze", "thaw")
am10$count <- ave(
am10$warm, am10$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
am10<- am10 %>%
filter(doy >= 60) %>%
filter(doy <= 210)
am10$fs<- ifelse((am10$count >= 50 & am10$frz == "freeze"), TRUE, NA)
gra.count<- select(am10, year, fs)
gra.count<-na.omit(gra.count)
gra.count<-as.data.frame(table(gra.count$year))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
lat<-read.csv("input/germany.csv", header=TRUE)
america<- read.csv("input/northamerica.csv", header=TRUE)
italy<- read.csv("input/italy.csv", header=TRUE)
kansas<- read.csv("input/kansas.csv", header=TRUE)
am10<-kansas %>%
select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "GRAND FORKS UNIVERSITY NWS ND US") %>%
rename(Tmean = TAVG) %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
am10$year <- substr(am10$date, 0, 4)
am10<- filter(am10, year>=1986)
am10$month<- substr(am10$date, 5, 6)
am10$day<- substr(am10$date, 7,8)
am10<- am10 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin, Tmax)
am10$doy<-yday(am10$date)
am10$year<-substr(am10$date,0,4)
am10$gdd <- am10$Tmax - 10
am10$gdd <-ifelse(am10$gdd>0, am10$gdd, NA)
am10$warm<- ifelse(!is.na(am10$gdd), 1, 0)
am10$frz<- ifelse((am10$Tmin<=-2.2), "freeze", "thaw")
am10$count <- ave(
am10$warm, am10$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
am10<- am10 %>%
filter(doy >= 60) %>%
filter(doy <= 210)
am10$fs<- ifelse((am10$count >= 50 & am10$frz == "freeze"), TRUE, NA)
gra.count<- select(am10, year, fs)
gra.count<-na.omit(gra.count)
gra.count<-as.data.frame(table(gra.count$year))
am10<-kansas %>%
select(STATION_NAME,DATE, TMIN, TMAX) %>%
filter(STATION_NAME == "GRAND FORKS UNIVERSITY NWS ND US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
am10$year <- substr(am10$date, 0, 4)
am10<- filter(am10, year>=1986)
am10$month<- substr(am10$date, 5, 6)
am10$day<- substr(am10$date, 7,8)
am10<- am10 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmean, Tmin, Tmax)
am10$doy<-yday(am10$date)
am10$year<-substr(am10$date,0,4)
am10$gdd <- am10$Tmax - 10
am10$gdd <-ifelse(am10$gdd>0, am10$gdd, NA)
am10$warm<- ifelse(!is.na(am10$gdd), 1, 0)
am10$frz<- ifelse((am10$Tmin<=-2.2), "freeze", "thaw")
am10$count <- ave(
am10$warm, am10$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
am10<- am10 %>%
filter(doy >= 60) %>%
filter(doy <= 210)
am10$fs<- ifelse((am10$count >= 50 & am10$frz == "freeze"), TRUE, NA)
gra.count<- select(am10, year, fs)
gra.count<-na.omit(gra.count)
gra.count<-as.data.frame(table(gra.count$year))
am10<-kansas %>%
select(STATION_NAME,DATE, TMIN, TMAX) %>%
filter(STATION_NAME == "GRAND FORKS UNIVERSITY NWS ND US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
am10$year <- substr(am10$date, 0, 4)
am10<- filter(am10, year>=1986)
am10$month<- substr(am10$date, 5, 6)
am10$day<- substr(am10$date, 7,8)
am10<- am10 %>%
select(-date)%>%
unite(date, year, month, day, sep="-") %>%
select(date, Tmin, Tmax)
am10$doy<-yday(am10$date)
am10$year<-substr(am10$date,0,4)
am10$gdd <- am10$Tmax - 10
am10$gdd <-ifelse(am10$gdd>0, am10$gdd, NA)
am10$warm<- ifelse(!is.na(am10$gdd), 1, 0)
am10$frz<- ifelse((am10$Tmin<=-2.2), "freeze", "thaw")
am10$count <- ave(
am10$warm, am10$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
am10<- am10 %>%
filter(doy >= 60) %>%
filter(doy <= 210)
am10$fs<- ifelse((am10$count >= 50 & am10$frz == "freeze"), TRUE, NA)
gra.count<- select(am10, year, fs)
gra.count<-na.omit(gra.count)
gra.count<-as.data.frame(table(gra.count$year))
View(am10)
