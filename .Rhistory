---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("rstan")
install.packages("rstan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
```{r plot2}
mod1 <- stan_model("linear-regression.stan")
mod1 <- stan("linear-regression.stan")
mod1 <- stan_model("~/Downloads/linear-regression.stan")
mod1 <- stan("~/Downloads/linear-regression.stan")
mod1 <- stan_model("~/Documents/linear-regression.stan")
mod1 <- stan("~/Documents/linear-regression.stan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
library("bayesplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("acepack", "ape", "broom", "car", "chillR", "chron", "class", "cluster", "coda", "codetools", "colorspace", "corrplot", "crayon", "curl", "data.table", "date", "DBI", "dfoptim", "digest", "evaluate", "foreign", "gamm4", "ghit", "git2r", "githubinstall", "gtable", "Hmisc", "httr", "janeaustenr", "jsonlite", "knitr", "lattice", "latticeExtra", "manipulate", "maptools", "MASS", "Matrix", "matrixStats", "memisc", "mgcv", "mime", "mnormt", "munsell", "nlme", "nnet", "numDeriv", "openssl", "optextras", "packrat", "pbapply", "permute", "proto", "psych", "quantreg", "R6", "Rcpp", "RcppEigen", "RefManageR", "reshape2", "rmarkdown", "rsconnect", "shiny", "shinyjs", "shinythemes", "SparseM", "spatial", "stringi", "survival", "tibble", "tidyr", "tidytext", "tokenizers", "ucminf", "vegan", "XML", "yaml", "zoo"))
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(data.table)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
phenology<-read.csv("input/treespotters.timeline.csv",header=TRUE)
phases<-c("Budburst","Leaves")
pheno<-phenology%>%
dplyr::select(Site_ID, Genus, Species, Individual_ID, Phenophase_Description, First_Yes_DOY, First_Yes_Year, Latitude, Longitude) %>%
unite(species, Genus, Species, sep="_") %>%
filter(Phenophase_Description %in% phases) %>%
rename(Year = First_Yes_Year)
# Make dataframe that includes Risk for each species
y1<-pheno%>%
filter(Year=="2016")%>%
group_by(species, Individual_ID, Phenophase_Description)%>%
arrange(Individual_ID) %>%
filter(row_number()==1) %>%
spread(Phenophase_Description, First_Yes_DOY)
y1<-na.omit(y1)
y1$Risk <- y1$Leaves - y1$Budburst
y1<-filter(y1, Risk > 0)
y1<-ungroup(y1)
y1$mean<-ave(y1$Budburst, y1$species)
y1$sd<-ave(y1$Budburst, y1$species, FUN=sd)
y1$mean.leaf<-ave(y1$Leaves, y1$species)
y1$sd.leaf<-ave(y1$Leaves, y1$species, FUN=sd)
y<- y1 %>%
dplyr::select(species, Budburst, Leaves, Risk, mean, sd, mean.leaf, sd.leaf) %>%
gather(Phenophase, DOY, -species, -Risk, -mean, -sd, -mean.leaf, -sd.leaf)
y<-y %>%
group_by(species, mean, Phenophase)%>%
arrange(species)%>%
filter(row_number()==1)%>%
ungroup(y)
y3 = melt(setDT(y),
measure.vars = patterns("mean", "mean.leaf"),
variable.name = "Mean")
y3[, Mean := factor(Mean, labels = c("bud","leaf"))]
y3<-rename(y3, Budburst=value1, Leaves=value2)
y3<- y3 %>%
dplyr::select(-Mean)%>%
arrange(Phenophase)%>%
gather(pheno, Mean, -species, -Risk, -Phenophase, -DOY, -sd, -sd.leaf)
y3$Phenophase<- ifelse(y3$Phenophase==y3$pheno, y3$Phenophase, NA)
y3<-na.omit(y3)
y3 <- y3[-c(12:22), ]
y3<- dplyr::select(y3, -pheno)
y2 = melt(setDT(y3),
measure.vars = patterns("sd", "sd.leaf"),
variable.name = "sd")
y2[, sd := factor(sd, labels = c("bud","leaf"))]
y2<-rename(y2, Budburst=value1, Leaves=value2)
y2<- y2 %>%
dplyr::select(-sd)%>%
arrange(Phenophase)%>%
gather(pheno, sd, -species, -Risk, -Phenophase, -DOY, -Mean)
y2$Phenophase<- ifelse(y2$Phenophase==y2$pheno, y2$Phenophase, NA)
y2<-na.omit(y2)
y2 <- y2[-c(12:22), ]
y2<- dplyr::select(y2, -pheno)
bud<- y1 %>%
dplyr::select(species, Budburst) %>%
group_by(species)%>%
summarise_each(funs(mean), Budburst) %>%
arrange(species)
leaves<- y1 %>%
dplyr::select(species, Leaves) %>%
group_by(species)%>%
summarise_each(funs(mean), Leaves) %>%
arrange(species)
sd<- y1 %>%
dplyr::select(species, sd, sd.leaf)
basic<- full_join(bud, leaves)
basic$Risk<- basic$Leaves - basic$Budburst
basic<-full_join(basic, sd)
basic$code <- reorder(basic$species, basic$Budburst)
y2$code <- reorder(y2$species, y2$DOY)
#df<-basic %>%
#gather(Phenophase, DOY, -Risk, -species)
#df$sd<- df%>%
#group_by(species)%>%
#summarise_each(funs(sd), DOY)
ts.timeline<-ggplot((basic), aes(x=Budburst, y=code), stat="identity") + geom_point() +
geom_segment(aes(y = species, yend = species, x = Budburst, xend = Leaves)) +
geom_point(aes(x=basic$Leaves)) + theme(legend.position="none") + geom_point() + xlab("Budburst to Leaf Out") +
ylab("Species") +geom_errorbarh(aes(xmin=Budburst-sd, xmax=Budburst+sd, col="coral"), height=.0) +
geom_errorbarh(aes(xmin=Leaves-sd.leaf, xmax=Leaves+sd.leaf, col="forestgreen"), height=.0)
plot(ts.timeline)
ts<-ggplot((y2), aes(x=code, y=DOY)) + geom_point(aes(col=Phenophase)) +
xlab("Day of Year") + ylab("Species") + geom_errorbar(aes(ymin=DOY-sd, ymax=DOY+sd, col=Phenophase), width=.0) +
scale_x_discrete(labels = c("ACESAC","AESFLA","BETALL","BETNIG","CARGLA","CAROVA","FAGGRA","POPDEL","QUEALB","QUERUB","TILAME")) +
theme(legend.position="none")
plot(ts)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(data.table)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
sixteen<-read.csv("input/NPN_2016.csv",header=TRUE)
fourteen<-read.csv("input/NPN_2014.csv",header=TRUE)
ten<-read.csv("input/NPN_2010.csv",header=TRUE)
phases<-c("Budburst","Leaves")
pheno16<-sixteen%>%
dplyr::select(Site_ID, Genus, Species, Individual_ID, Phenophase_Description, First_Yes_DOY, First_Yes_Year, Latitude, Longitude, NumYs_in_Series) %>%
unite(species, Genus, Species, sep="_") %>%
filter(Phenophase_Description %in% phases) %>%
filter(Latitude>40 & Latitude<45)%>%
rename(Year = First_Yes_Year) %>%
filter(NumYs_in_Series>1)
df<-pheno16%>%
dplyr::select(-NumYs_in_Series)%>%
group_by(species, Individual_ID, Phenophase_Description)%>%
arrange(Individual_ID) %>%
filter(row_number()==1) %>%
spread(Phenophase_Description, First_Yes_DOY)
df<-na.omit(df)
df$Risk <- df$Leaves - df$Budburst
df<-filter(df, Risk > 0)
df<-ungroup(df)
df$mean<-ave(df$Budburst, df$species)
df$stand_dev<-ave(df$Budburst, df$species, FUN=sd)
df$mean.leaf<-ave(df$Leaves, df$species)
df$stand_dev.leaf<-ave(df$Leaves, df$species, FUN=sd)
y<- df %>%
dplyr::select(species, Budburst, Leaves, Risk, mean, stand_dev, mean.leaf, stand_dev.leaf) %>%
gather(Phenophase, DOY, -species, -Risk, -mean, -stand_dev, -mean.leaf, -stand_dev.leaf)
y<-y %>%
group_by(species, mean, Phenophase)%>%
arrange(species)%>%
filter(row_number()==1)%>%
ungroup(y)
bud<- df %>%
dplyr::select(species, Budburst) %>%
group_by(species)%>%
summarise_each(funs(mean), Budburst) %>%
arrange(species)
leaves<- df %>%
dplyr::select(species, Leaves) %>%
group_by(species)%>%
summarise_each(funs(mean), Leaves) %>%
arrange(species)
stand_dev<- y %>%
dplyr::select(species, stand_dev, stand_dev.leaf)
basic<- full_join(bud, leaves)
basic$Risk<- basic$Leaves - basic$Budburst
basic<-full_join(basic, stand_dev)
basic$code <- reorder(basic$species, basic$Budburst)
basic<-na.omit(basic)
basic$stand_dev<-ifelse(basic$stand_dev> (basic$Risk*2), NA, basic$stand_dev)
basic$stand_dev.leaf<-ifelse(basic$stand_dev.leaf> (basic$Risk*2), NA, basic$stand_dev.leaf)
basic<-filter(basic, species != "Populus_tremuloides")
basic<-na.omit(basic)
ts.timeline<-ggplot((basic), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= basic$Budburst)) +
geom_segment(aes(y = species, yend = species, x = Budburst, xend = Leaves)) +
geom_point(aes(x=basic$Leaves)) + theme(legend.position="none") + geom_point() + xlab("Budburst to Leaf Out") +
ylab("Species") +geom_errorbarh(aes(xmin=Budburst-stand_dev, xmax=Budburst+stand_dev, col="coral"), height=.0) +
geom_errorbarh(aes(xmin=Leaves-stand_dev.leaf, xmax=Leaves+stand_dev.leaf, col="forestgreen"), height=.0)
plot(ts.timeline)
y$code <- reorder(y$species, y$DOY)
y$stand_dev<-ifelse(y$stand_dev==0, NA, y$stand_dev)
y$stand_dev<-ifelse(y$stand_dev> (y$Risk*2), NA, y$stand_dev)
y$stand_dev.leaf<-ifelse(y$stand_dev.leaf> (y$Risk*2), NA, y$stand_dev.leaf)
y<-filter(y, species != "Populus_tremuloides")
y<-na.omit(y)
y<-na.omit(y)
ts<-ggplot((y), aes(x=code, y=DOY)) + geom_point(aes(col=Phenophase)) +
xlab("Day of Year") + ylab("Species") + geom_errorbar(aes(ymin=DOY-stand_dev, ymax=DOY+stand_dev, col=Phenophase), width=.0) +
scale_x_discrete(labels = c("SAMRAC","PRUVIR","MALSPP","VIBACE","ULMAME","CARGLA","FAGGRA","AESFLA","CAROVA",
"BETLEN","PRUSER","VIBLAN","QUEVEL","TILAME","BETNIG","HAMVIR","QUERUB","JUGNIG","QUEALB",
"ACERUB")) + theme(legend.position="none")
plot(ts)
df2<-df
df2$stand_dev<-ifelse(df2$stand_dev> (df2$Risk*2), NA, df2$stand_dev)
df2$stand_dev.leaf<-ifelse(df2$stand_dev.leaf> (df2$Risk*2), NA, df2$stand_dev.leaf)
df2<-filter(df2, species != "Populus_tremuloides")
df2<-na.omit(df2)
write.csv(df2,"output/npn_2016_data.csv",row.names = FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(data.table)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
phenology<-read.csv("input/treespotters.timeline.csv",header=TRUE)
phases<-c("Budburst","Leaves")
pheno<-phenology%>%
dplyr::select(Site_ID, Genus, Species, Individual_ID, Phenophase_Description, First_Yes_DOY, First_Yes_Year, Latitude, Longitude) %>%
unite(species, Genus, Species, sep="_") %>%
filter(Phenophase_Description %in% phases) %>%
rename(Year = First_Yes_Year)
# Make dataframe that includes Risk for each species
y1<-pheno%>%
filter(Year=="2016")%>%
group_by(species, Individual_ID, Phenophase_Description)%>%
arrange(Individual_ID) %>%
filter(row_number()==1) %>%
spread(Phenophase_Description, First_Yes_DOY)
y1<-na.omit(y1)
y1$Risk <- y1$Leaves - y1$Budburst
y1<-filter(y1, Risk > 0)
y1<-ungroup(y1)
y1$mean<-ave(y1$Budburst, y1$species)
y1$sd<-ave(y1$Budburst, y1$species, FUN=sd)
y1$mean.leaf<-ave(y1$Leaves, y1$species)
y1$sd.leaf<-ave(y1$Leaves, y1$species, FUN=sd)
y<- y1 %>%
dplyr::select(species, Budburst, Leaves, Risk, mean, sd, mean.leaf, sd.leaf) %>%
gather(Phenophase, DOY, -species, -Risk, -mean, -sd, -mean.leaf, -sd.leaf)
y<-y %>%
group_by(species, mean, Phenophase)%>%
arrange(species)%>%
filter(row_number()==1)%>%
ungroup(y)
y3 = melt(setDT(y),
measure.vars = patterns("mean", "mean.leaf"),
variable.name = "Mean")
y3[, Mean := factor(Mean, labels = c("bud","leaf"))]
y3<-rename(y3, Budburst=value1, Leaves=value2)
y3<- y3 %>%
dplyr::select(-Mean)%>%
arrange(Phenophase)%>%
gather(pheno, Mean, -species, -Risk, -Phenophase, -DOY, -sd, -sd.leaf)
y3$Phenophase<- ifelse(y3$Phenophase==y3$pheno, y3$Phenophase, NA)
y3<-na.omit(y3)
y3 <- y3[-c(12:22), ]
y3<- dplyr::select(y3, -pheno)
y2 = melt(setDT(y3),
measure.vars = patterns("sd", "sd.leaf"),
variable.name = "sd")
y2[, sd := factor(sd, labels = c("bud","leaf"))]
y2<-rename(y2, Budburst=value1, Leaves=value2)
y2<- y2 %>%
dplyr::select(-sd)%>%
arrange(Phenophase)%>%
gather(pheno, sd, -species, -Risk, -Phenophase, -DOY, -Mean)
y2$Phenophase<- ifelse(y2$Phenophase==y2$pheno, y2$Phenophase, NA)
y2<-na.omit(y2)
y2 <- y2[-c(12:22), ]
y2<- dplyr::select(y2, -pheno)
bud<- y1 %>%
dplyr::select(species, Budburst) %>%
group_by(species)%>%
summarise_each(funs(mean), Budburst) %>%
arrange(species)
leaves<- y1 %>%
dplyr::select(species, Leaves) %>%
group_by(species)%>%
summarise_each(funs(mean), Leaves) %>%
arrange(species)
sd<- y1 %>%
dplyr::select(species, sd, sd.leaf)
basic<- full_join(bud, leaves)
basic$Risk<- basic$Leaves - basic$Budburst
basic<-full_join(basic, sd)
basic$code <- reorder(basic$species, basic$Budburst)
y2$code <- reorder(y2$species, y2$DOY)
#df<-basic %>%
#gather(Phenophase, DOY, -Risk, -species)
#df$sd<- df%>%
#group_by(species)%>%
#summarise_each(funs(sd), DOY)
ts.timeline<-ggplot((basic), aes(x=Budburst, y=code), stat="identity") + geom_point() +
geom_segment(aes(y = species, yend = species, x = Budburst, xend = Leaves)) +
geom_point(aes(x=basic$Leaves)) + theme(legend.position="none") + geom_point() + xlab("Budburst to Leaf Out") +
ylab("Species") +geom_errorbarh(aes(xmin=Budburst-sd, xmax=Budburst+sd, col="coral"), height=.0) +
geom_errorbarh(aes(xmin=Leaves-sd.leaf, xmax=Leaves+sd.leaf, col="forestgreen"), height=.0)
plot(ts.timeline)
ts<-ggplot((y2), aes(x=code, y=DOY)) + geom_point(aes(col=Phenophase)) +
xlab("Day of Year") + ylab("Species") + geom_errorbar(aes(ymin=DOY-sd, ymax=DOY+sd, col=Phenophase), width=.0) +
scale_x_discrete(labels = c("ACESAC","AESFLA","BETALL","BETNIG","CARGLA","CAROVA","FAGGRA","POPDEL","QUEALB","QUERUB","TILAME")) +
theme(legend.position="none")
plot(ts)
ggplot((basic), aes( x= Budburst, y=Risk)) + geom_smooth(method="lm", se=FALSE) + geom_point(aes(col=species))
lm1<-lm(Risk~Budburst,data=basic)
lm2<-lm(Risk~species, data=y2)
display(lm1);display(lm2)
write.csv(basic,"output/ts_2016_data.csv", row.names = FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(data.table)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
sixteen<-read.csv("input/NPN_2016.csv",header=TRUE)
fourteen<-read.csv("input/NPN_2014.csv",header=TRUE)
ten<-read.csv("input/NPN_2010.csv",header=TRUE)
phases<-c("Budburst","Leaves")
pheno16<-sixteen%>%
dplyr::select(Site_ID, Genus, Species, Individual_ID, Phenophase_Description, First_Yes_DOY, First_Yes_Year, Latitude, Longitude, NumYs_in_Series) %>%
unite(species, Genus, Species, sep="_") %>%
filter(Phenophase_Description %in% phases) %>%
filter(Latitude>40 & Latitude<45)%>%
rename(Year = First_Yes_Year) %>%
filter(NumYs_in_Series>1)
df<-pheno16%>%
dplyr::select(-NumYs_in_Series)%>%
group_by(species, Individual_ID, Phenophase_Description)%>%
arrange(Individual_ID) %>%
filter(row_number()==1) %>%
spread(Phenophase_Description, First_Yes_DOY)
df<-na.omit(df)
df$Risk <- df$Leaves - df$Budburst
df<-filter(df, Risk > 0)
df<-ungroup(df)
df$mean<-ave(df$Budburst, df$species)
df$stand_dev<-ave(df$Budburst, df$species, FUN=sd)
df$mean.leaf<-ave(df$Leaves, df$species)
df$stand_dev.leaf<-ave(df$Leaves, df$species, FUN=sd)
y<- df %>%
dplyr::select(species, Budburst, Leaves, Risk, mean, stand_dev, mean.leaf, stand_dev.leaf) %>%
gather(Phenophase, DOY, -species, -Risk, -mean, -stand_dev, -mean.leaf, -stand_dev.leaf)
y<-y %>%
group_by(species, mean, Phenophase)%>%
arrange(species)%>%
filter(row_number()==1)%>%
ungroup(y)
bud<- df %>%
dplyr::select(species, Budburst) %>%
group_by(species)%>%
summarise_each(funs(mean), Budburst) %>%
arrange(species)
leaves<- df %>%
dplyr::select(species, Leaves) %>%
group_by(species)%>%
summarise_each(funs(mean), Leaves) %>%
arrange(species)
stand_dev<- y %>%
dplyr::select(species, stand_dev, stand_dev.leaf)
basic<- full_join(bud, leaves)
basic$Risk<- basic$Leaves - basic$Budburst
basic<-full_join(basic, stand_dev)
basic$code <- reorder(basic$species, basic$Budburst)
basic<-na.omit(basic)
basic$stand_dev<-ifelse(basic$stand_dev> (basic$Risk*2), NA, basic$stand_dev)
basic$stand_dev.leaf<-ifelse(basic$stand_dev.leaf> (basic$Risk*2), NA, basic$stand_dev.leaf)
basic<-filter(basic, species != "Populus_tremuloides")
basic<-na.omit(basic)
ts.timeline<-ggplot((basic), aes(x=Budburst, y=code), stat="identity") + geom_point(aes(x= basic$Budburst)) +
geom_segment(aes(y = species, yend = species, x = Budburst, xend = Leaves)) +
geom_point(aes(x=basic$Leaves)) + theme(legend.position="none") + geom_point() + xlab("Budburst to Leaf Out") +
ylab("Species") +geom_errorbarh(aes(xmin=Budburst-stand_dev, xmax=Budburst+stand_dev, col="coral"), height=.0) +
geom_errorbarh(aes(xmin=Leaves-stand_dev.leaf, xmax=Leaves+stand_dev.leaf, col="forestgreen"), height=.0)
plot(ts.timeline)
y$code <- reorder(y$species, y$DOY)
y$stand_dev<-ifelse(y$stand_dev==0, NA, y$stand_dev)
y$stand_dev<-ifelse(y$stand_dev> (y$Risk*2), NA, y$stand_dev)
y$stand_dev.leaf<-ifelse(y$stand_dev.leaf> (y$Risk*2), NA, y$stand_dev.leaf)
y<-filter(y, species != "Populus_tremuloides")
y<-na.omit(y)
y<-na.omit(y)
ts<-ggplot((y), aes(x=code, y=DOY)) + geom_point(aes(col=Phenophase)) +
xlab("Day of Year") + ylab("Species") + geom_errorbar(aes(ymin=DOY-stand_dev, ymax=DOY+stand_dev, col=Phenophase), width=.0) +
scale_x_discrete(labels = c("SAMRAC","PRUVIR","MALSPP","VIBACE","ULMAME","CARGLA","FAGGRA","AESFLA","CAROVA",
"BETLEN","PRUSER","VIBLAN","QUEVEL","TILAME","BETNIG","HAMVIR","QUERUB","JUGNIG","QUEALB",
"ACERUB")) + theme(legend.position="none")
plot(ts)
