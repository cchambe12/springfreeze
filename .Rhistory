```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores())
```
### Load and look at the data
```{r linear-regression-data}
load("kidiq.rda")
head(kidiq)
```
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```{r plot1}
```{r plot1}
library("rstan")
library("ggplot2")
install_packages("bayesplot")
install_package("bayesplot")
install.packages("bayesplot")
install.packages("bayesplot")
install.packages("rstanarm")
install.packages("rstanarm")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("ggplot2")
install.packages("ggplot2")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("rstan")
install.packages("rstan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
```{r plot2}
mod1 <- stan_model("linear-regression.stan")
mod1 <- stan("linear-regression.stan")
mod1 <- stan_model("~/Downloads/linear-regression.stan")
mod1 <- stan("~/Downloads/linear-regression.stan")
mod1 <- stan_model("~/Documents/linear-regression.stan")
mod1 <- stan("~/Documents/linear-regression.stan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
library("bayesplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("acepack", "ape", "broom", "car", "chillR", "chron", "class", "cluster", "coda", "codetools", "colorspace", "corrplot", "crayon", "curl", "data.table", "date", "DBI", "dfoptim", "digest", "evaluate", "foreign", "gamm4", "ghit", "git2r", "githubinstall", "gtable", "Hmisc", "httr", "janeaustenr", "jsonlite", "knitr", "lattice", "latticeExtra", "manipulate", "maptools", "MASS", "Matrix", "matrixStats", "memisc", "mgcv", "mime", "mnormt", "munsell", "nlme", "nnet", "numDeriv", "openssl", "optextras", "packrat", "pbapply", "permute", "proto", "psych", "quantreg", "R6", "Rcpp", "RcppEigen", "RefManageR", "reshape2", "rmarkdown", "rsconnect", "shiny", "shinyjs", "shinythemes", "SparseM", "spatial", "stringi", "survival", "tibble", "tidyr", "tidytext", "tokenizers", "ucminf", "vegan", "XML", "yaml", "zoo"))
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
library(car)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/bbch_data.csv", header=TRUE, check.names=FALSE)
# Organizing data
df<-gather(d, "date","bbch", -NEW, -TX)
df<-na.omit(df)
df$date<-as.character(as.Date(df$date,"%m/%d/%y"))
df$doy<-yday(df$date)
df$species<-substr(df$NEW, 0,6)
df<-dplyr::select(df, -date)
# Now start evaluating duration of vegetative risk
# 9 is using 9 as budburst, 10 is using 10. Some individuals, I missed 9 so it
# was sometime in between the observation dates
phases.9<-c("9","15")
df9<-filter(df, bbch %in% phases.9)
df9$bbch<- factor(df9$bbch, levels = c(9,15),
labels = c("Budburst","Leaves"))
code<-unite_(df9, "species_TX", c("species","TX"))
df9<-full_join(df9, code)
risk9<- df9%>%
group_by(NEW, bbch, species_TX)%>%
arrange(NEW)%>%
filter(row_number()==1) %>%
spread(bbch, doy)
risk9<-na.omit(risk9)
risk9$Risk <- risk9$Leaves - risk9$Budburst
# Some graphs
ggplot(risk9, aes(x=species, y=Risk)) + geom_point(aes(col=as.factor(TX))) +
geom_smooth(aes(col=as.factor(TX)),method="loess", se=FALSE)
ggplot((risk9), aes(x=Budburst, y=NEW), stat="identity") + geom_point(aes(x= risk9$Budburst)) +
geom_segment(aes(y = NEW, yend = NEW, x = Budburst, xend = Leaves, col=TX)) +
geom_point(aes(x=Leaves, col=TX)) + geom_point(aes(col=TX)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
# Means and Standard deviations
risk<-risk9%>%
ungroup(NEW, Risk)%>%
dplyr::select(species_TX, Risk)
risk.mean<- risk%>%
group_by(species_TX) %>%
summarise_each(funs(mean))%>%
rename(mean=Risk)
risk.sd<-risk%>%
group_by(species_TX) %>%
summarise_each(funs(sd)) %>%
rename(sd=Risk)
risk.count<-as.data.frame(table(risk$species_TX)) %>%
rename(species_TX=Var1)%>%
rename(count=Freq)
risk.species<-full_join(risk.mean, risk.sd)
risk.species.tx<-full_join(risk.species,risk.count)
tx.count<-as.data.frame(table(risk9$TX))%>%
rename(TX=Var1)%>%
rename(count=Freq)
tx<-risk9%>%
ungroup(NEW, Risk)%>%
dplyr::select(TX, Risk)
tx.mean<- tx%>%
group_by(TX) %>%
summarise_each(funs(mean))%>%
rename(mean=Risk)
tx.sd<-tx%>%
group_by(TX) %>%
summarise_each(funs(sd)) %>%
rename(sd=Risk)
tx.species<-full_join(tx.mean, tx.sd)
tx.species.count<-full_join(tx.species,tx.count)
#write.csv(tx.species.count, "output/tx_count.csv", row.names = FALSE)
mod<-lm(Risk~TX, data=risk9)
lmer<-lmer(Risk~TX + (1|species),data=risk9)
display(mod);display(lmer)
ggplot((risk9), aes(x=Budburst, y=Risk)) + xlab("Budburst") + ylab("Duration of Vegetative Risk") +
geom_point(aes(col=as.factor(TX))) +
geom_smooth(aes(col=as.factor(TX)),method="lm", se=FALSE)
qplot(species, Risk, data = risk9,
geom = "boxplot", color=TX) +
xlab("Species")+ylab("Duration of Vegetative Risk")
# Anova
model<-lm(Risk~TX+Budburst+species,data=risk9)
Anova(model)
# ALNINC
alninc<-risk9 %>% filter(species=="ALNINC")
aln.mod<-lm(Risk~TX,data=alninc)
Anova(aln.mod)
# BETPOP
betpop<-risk9 %>% filter(species=="BETPOP")
bet.mod<-lm(Risk~TX,data=betpop)
Anova(bet.mod)
# PRUPEN
prupen<-risk9 %>% filter(species=="PRUPEN")
pru.mod<-lm(Risk~TX,data=prupen)
Anova(pru.mod)
# VIBCAS
vibcas<-risk9 %>% filter(species=="VIBCAS")
vib.mod<-lm(Risk~TX,data=vibcas)
Anova(vib.mod)
#write.csv(risk.species.tx, "output/exp.species.count.csv", row.names = FALSE)
View(tx.species.count)
MO<-lm(Risk~Budburst + TX, data=risk9)
display(MO)
lm4<-lmer(Risk~Budburst + (1|TX), data=risk9)
display(lm4)
View(risk9)
treat<-risk9%>%filter(TX!="C")
lm5<-lm(Risk~Budburst+TX+species, data=treat)
display(lm5)
lm6<-lmer(Risk~Budburst+TX+(1|species), data=treat)
display(lm6)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(car)
library(broom)
library(lme4)
library(xtable)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.DF.csv",header=TRUE)
d$DOY<-yday(d$Date)
d$chilling<- substr(d$chill, 6, 6)
#d$chilling<-as.numeric(as.character(
#ifelse((d$chilling==0), 0, ifelse((d$chilling==1), 4, 1.5))))
d$force<-as.numeric(as.character(ifelse((d$warm=="warm"), 20, 15)))
d$photoperiod<- as.numeric(as.character(ifelse((d$photo=="short"), 8, 12)))
phases<-c("4","7")
d<-d %>%
dplyr::select(id, sp, site, bday, lday, chilling, force, photoperiod, treatcode) %>%
filter(tleaf %in% phases)
d$tleaf<- factor(d$tleaf, levels = c(4,7),
labels = c("Budburst","Leaves"))
## Harvard Forest Data
d.hf<-d%>%
filter(site=="HF") %>%
group_by(sp, id, tleaf)%>%
arrange(id)%>%
filter(row_number()==1) %>%
spread(tleaf, DOY)
d.hf$risk<-d.hf$Leaves-d.hf$Budburst
d.hf<-filter(d.hf,risk>0)
d.hf<-na.omit(d.hf)
d.total<-as.data.frame(table(d.hf$sp)) %>%
rename(sp=Var1)%>%
rename(total=Freq)
d.total$total<-ifelse(d.total$total>=3, d.total$total, NA)
d.total<-na.omit(d.total)
spp<-as.character(d.total$sp)
d.hf<-filter(d.hf, sp %in% spp)
# keep condensing species list -- error from chilling, only one chilling tx for some species
d.sp<-d.hf %>%
ungroup(d.hf)%>%
dplyr::select(sp, chilling)
d.sp<-unique(d.sp)
d.sp<-as.data.frame(table(d.sp$sp)) %>%
rename(sp=Var1)%>%
rename(total=Freq)
d.sp$total<-ifelse(d.sp$total>1, d.sp$total, NA)
d.sp<-na.omit(d.sp)
species<-as.character(d.sp$sp)
d.hf<-filter(d.hf, sp %in% species)
# dplyr version
hf<-d.hf%>%
group_by(sp) %>%
do(mod=lm(risk~as.factor(chilling) + force + photoperiod, data=d.hf))
table<-hf %>% rowwise %>% do(Anova(.$mod))
# Lizzie's version:
myspp <- unique(d.hf$sp)
mylist<-list()
for(i in c(1:length(myspp))) {
subby<-subset(d.hf, sp==myspp[i])
myanova<-Anova(lm(risk~as.factor(chilling)+ force + photoperiod, data=subby))
print(myanova)
mylist[[myspp[i]]] <- myanova
}
myspp <- unique(d.hf$sp)
mylist<-list()
for(i in c(1:length(myspp))) {
subby<-subset(d.hf, sp==myspp[i])
myanova<-Anova(lm(risk~chilling+ force + photoperiod, data=subby))
print(myanova)
mylist[[myspp[i]]] <- myanova
}
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(data.table)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
########### NEW EDITION - CAT 17 APRIL 2017 ####################
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
df<-dx%>%unite(ID, species, treatcode, sep="_")
df$mean<-ave(df$bday, df$ID)
df$sd<-ave(df$bday, df$ID, FUN=sd)
df$mean.leaf<-ave(df$lday, df$ID)
df$sd.leaf<-ave(df$lday, df$ID, FUN=sd)
df<-df%>%
group_by(mean, ID)%>%
arrange(ID)%>%
filter(row_number()==1)
#df$risk<-df$lday-df$bday
#df$code<-reorder(df$ID, df$risk)
df$code<-reorder(df$ID, df$bday)
ts.timeline<-ggplot((df), aes(x=bday, y=code), stat="identity") +
geom_point(aes(x=df$bday, col="royalblue4")) +
geom_point(aes(x=df$lday, col="forestgreen"))  +
xlab("Day of Year") +scale_color_manual(labels = c("Leafout","Budburst"), values = c("forestgreen","royalblue4")) +
ylab("Species") +geom_errorbarh(aes(xmin=bday-sd, xmax=bday+sd, col="royalblue4"), height=.0) +
geom_errorbarh(aes(xmin=lday-sd.leaf, xmax=lday+sd.leaf, col="forestgreen"), height=.0)
plot(ts.timeline)
### Prep data for Anovas
dxx<-d
dxx$chilling<- as.numeric(as.character(substr(dxx$chill, 6, 6)))
#d$chilling<-as.numeric(as.character(
#ifelse((d$chilling==0), 0, ifelse((d$chilling==1), 4, 1.5))))
dxx$warm<-as.numeric(as.character(dxx$warm))
dxx$photo<-as.numeric(as.character(dxx$photo))
dxx<-dxx %>%
dplyr::select(id, sp, site, lday, bday, chilling, warm, photo, treatcode)
dxx$risk<-dxx$lday-dxx$bday
# Run anovas for each species
myspp <- unique(dxx$sp)
mylist<-list()
for(i in c(1:length(myspp))) {
subby<-subset(dxx, sp==myspp[i])
myanova<-Anova(lm(risk~chilling + warm + photo, data=subby))
print(myanova)
mylist[[myspp[i]]] <- myanova
}
View(subby)
library(xtable)
xtableList(mylist, caption ="Anova results for Risk by chilling, forcing, and photoperiod effects for each species.", floating=FALSE)
write.csv(mylist, "anovatable.csv", row.names=FALSE)
library(knitr)
Sweave2knitr(Chilling_plots.Rnw)
Sweave2knitr(~/Documents/git/springfreeze/Sweave/Chilling_plots.Rnw)
Sweave2knitr(Users/CatherineChamberlain/Documents/git/springfreeze/Sweave/Chilling_plots.Rnw)
Sweave2knitr(/Users/CatherineChamberlain/Documents/git/springfreeze/Sweave/Chilling_plots.Rnw)
Sweave2knitr("~/Documents/git/springfreeze/Sweave/Chilling_plots.Rnw")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(dplyr)
library(tidyr)
setwd("~/Documents/git/springfreeze")
d<-read.csv("output/anovatable.csv",header=TRUE)
library(dplyr)
library(tidyr)
setwd("~/Documents/git/springfreeze")
d<-read.csv("output/anovatable.csv",header=TRUE)
setwd("~/Documents/git/springfreeze")
d<-read.csv("output/anovatable.csv",header=TRUE)
d<-read.csv("output/anovatable.csv",header=TRUE)
d<-read.table("output/anovatable.csv",header=TRUE)
d<-read.table("output/anovatable.csv",header=TRUE, sep="")
d<-read.table("output/anovatable.csv",header=TRUE, sep=",")
d<-read("output/anovatable.csv",header=TRUE, sep=",")
d<-read.csv("output/anovatable.csv",header=TRUE, sep=",")
setwd("~/Documents/git/springfreeze")
d<-read.csv("output/anovatable.csv",header=TRUE, colClasses="numeric")
