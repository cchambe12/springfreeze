ylab("False Spring Index") + scale_x_continuous(limits = c(2008,2014),breaks=seq(2008,2014,1)) +
geom_point(aes(shape=Method, col=Method)) +
scale_color_manual(name="Method", values=cols, labels=c("SI-x", "Observational (O`Keefe)", "PhenoCam")) +
geom_line(aes(x=year, y=FSI, col=Method)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(), plot.title = element_text(family="Helvetica"))  + geom_hline(yintercept=0, linetype="solid", col="grey") + geom_hline(yintercept=7, linetype="dotted", col="grey") +
scale_shape_manual(name="Method", labels = c("SI-x", "Observational (O`Keefe)", "PhenoCam"),
values = c(16, 17, 15)) #+ ggtitle("Calculating False Spring Risk")
quartz()
plot(methodplot)
png("~/Documents/git/springfreeze/figures/fsi_compare_color.png",
width=8, units="in",
height=6,res = 750 )
plot(methodplot)
dev.off()
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Analysis of bud burst experiment Flynn and Wolkovich, 2018: used now for change in DVR
library(ggplot2)
library(dplyr)
library(brms)
library(RColorBrewer)
setwd("~/Documents/git/springfreeze/")
if(FALSE){
source('scripts/stan/savestan.R')
dx<-read.csv("output/expdata_dvr.csv", header=TRUE)
dx$sp <- as.numeric(as.factor(dx$sp))
dx<-dx[!is.na(dx$risk),]
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$warm<-ifelse(dx$warm==15, 0, 1)
dx$photo <- as.numeric(dx$photo)
dx$photo<-ifelse(dx$photo==8, 0, 1)
dx$chill <- as.numeric(dx$chill)
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
dxb <- dx[!is.na(dx$risk),]
dxb<-filter(dxb, risk>0)
dxb$force<-dxb$warm
fit.brm2<-brm(risk~ force + photo + chill1 + chill2 + force:photo + force:chill1 + force:chill2 +
photo:chill1 + photo:chill2 + (force + photo + chill1 + chill2 + force:photo +
force:chill1 + force:chill2 +
photo:chill1 + photo:chill2|sp), data=dxb)
save(fit.brm2, file="~/Documents/git/springfreeze/output/exp_output.Rdata")
}
load(file="output/exp_output.Rdata")
m<-fit.brm2
m.int<-posterior_interval(m)
sum.m<-summary(m)
cri.f<-as.data.frame(sum.m$fixed[,c("Estimate", "l-95% CI", "u-95% CI")])
cri.f<-cri.f[-1,] #removing the intercept
fdf1<-as.data.frame(rbind(as.vector(cri.f[,1]), as.vector(cri.f[,2]), as.vector(cri.f[,3])))
fdf2<-cbind(fdf1, c(0, 0, 0) , c("Estimate", "2.5%", "95%"))
names(fdf2)<-c(rownames(cri.f), "sp", "perc")
cri.r<-(ranef(m, summary = TRUE, robust = FALSE,
probs = c(0.025, 0.975)))$sp
cri.r2<-cri.r[, ,-1]
cri.r2<-cri.r2[,-2,]
dims<-dim(cri.r2)
twoDimMat <- matrix(cri.r2, prod(dims[1:2]), dims[3])
mat2<-cbind(twoDimMat, c(rep(1:9, length.out=27)), rep(c("Estimate", "2.5%", "95%"), each=9))
df<-as.data.frame(mat2)
names(df)<-c(rownames(cri.f), "sp", "perc")
dftot<-rbind(fdf2, df)
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=30)) {
for (j in seq(from=3, to=29, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$sp>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$sp<-as.factor(dfwide$sp)
## plotting
pd <- position_dodgev(height = -0.5)
dfwide$legend<-factor(dfwide$sp,
labels=c("Overall Effects","1","2","3","4","5","6","7","8","9"))
### Now make a new dataframe for more conceptual figure
configprep<-subset(dfwide, select=c("sp", "var", "Estimate"))
species<-c("1", "6", "8")
configprep<-subset(configprep, sp%in%species)
configprep<-configprep[!(configprep$var=="photo:chill1" | configprep$var=="photo:chill2" | configprep$var=="force:chill1"
| configprep$var=="chill1"),]
configprep$var<-ifelse(configprep$var=="chill2", "chill", as.character(configprep$var))
configprep$var<-ifelse(configprep$var=="force:chill2", "force:chill", as.character(configprep$var))
estimates<-c("More Forcing", "Shorter Photoperiod", "Less Chilling", "Interaction of More Forcing \nand Shorter Photoperiod", "Interaction of More Forcing \nand Less Chilling",
"More Forcing and \nShorter Photoperiod", "More Forcing and \nLess Chilling")
configprep$Jvar<-NA
configprep$Jvar<-ifelse(configprep$var=="force", 7, configprep$var)
configprep$Jvar<-ifelse(configprep$var=="photo", 6, configprep$Jvar)
configprep$Jvar<-ifelse(configprep$var=="chill", 5, configprep$Jvar)
configprep$Jvar<-ifelse(configprep$var=="force:photo", 2, configprep$Jvar)
configprep$Jvar<-ifelse(configprep$var=="force:chill", 1, configprep$Jvar)
configprep$Jvar2<-as.numeric(configprep$Jvar)
configprep$spp<-NA
configprep$spp<-ifelse(configprep$sp=="1", 1, configprep$spp)
configprep$spp<-ifelse(configprep$sp=="6", 2, configprep$spp)
configprep$spp<-ifelse(configprep$sp=="8", 3, configprep$spp)
configprep$spp<-ifelse(configprep$spp>1, (configprep$spp*0.1) - 0.1, 0)
configprep$Jvar2<-as.numeric(configprep$Jvar)-configprep$spp
configprep$newEstimate<-configprep$Estimate
configprep$newEstimate<-ifelse(configprep$var=="photo", -configprep$Estimate, configprep$newEstimate)
configprep$newEstimate<-ifelse(configprep$var=="chill", -configprep$Estimate, configprep$newEstimate)
configprep$newEstimate<-ifelse(configprep$var=="force:photo", -configprep$Estimate, configprep$newEstimate)
configprep$newEstimate<-ifelse(configprep$var=="force:chill", -configprep$Estimate, configprep$newEstimate)
configprep$sp<-as.numeric(configprep$sp)-1
species<-unique(configprep$sp)
configprep$est2<-configprep$newEstimate
for(i in c(1:length(species))) {
configprep$est2<-ifelse(configprep$sp==species[i] & configprep$var=="force:photo", configprep$newEstimate[configprep$var=="force" & configprep$sp==species[i]]+
configprep$newEstimate[configprep$var=="photo" & configprep$sp==species[i]]+
configprep$newEstimate[configprep$var=="force:photo" & configprep$sp==species[i]], configprep$est2)
configprep$est2<-ifelse(configprep$sp==species[i] & configprep$var=="force:chill", configprep$newEstimate[configprep$var=="force" & configprep$sp==species[i]]+
configprep$newEstimate[configprep$var=="chill" & configprep$sp==species[i]]+
configprep$newEstimate[configprep$var=="force:chill" & configprep$sp==species[i]], configprep$est2)
}
configprep<-rbind(configprep,list(1,"force:photo2",0, 3, 4, 0, 0, configprep$newEstimate[configprep$sp==1 & configprep$var=="force:photo"], 0))
configprep<-rbind(configprep,list(6,"force:photo2",0, 3, 3.9, 0, 0, configprep$newEstimate[configprep$sp==6 & configprep$var=="force:photo"], 0))
configprep<-rbind(configprep,list(8,"force:photo2",0, 3, 3.8, 0, 0, configprep$newEstimate[configprep$sp==8 & configprep$var=="force:photo"], 0))
configprep<-rbind(configprep,list(1,"force:chill2",0, 1, 3, 0, 0, configprep$newEstimate[configprep$sp==1 & configprep$var=="force:chill"], 0))
configprep<-rbind(configprep,list(6,"force:chill2",0, 1, 2.9, 0, 0, configprep$newEstimate[configprep$sp==6 & configprep$var=="force:chill"], 0))
configprep<-rbind(configprep,list(8,"force:chill2",0, 1, 2.8, 0, 0, configprep$newEstimate[configprep$sp==8 & configprep$var=="force:chill"], 0))
estimates<-rev(estimates)
cols <- colorRampPalette(brewer.pal(3,"Accent"))(3)
expB<-ggplot(configprep, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_linetype_manual(name="Species", values=c("solid", "longdash", "dotdash"),
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"8"=expression(paste(italic("Populus grandidentata"))))) +
scale_color_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"8"=expression(paste(italic("Populus grandidentata"))))) +
geom_segment(arrow = arrow(length = unit(0.02, "npc")), aes(linetype=as.factor(sp), col=as.factor(sp))) +
scale_y_discrete(limits = sort(unique(configprep$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = -14.3, y = 2.35, label = "Combined Effects:", size=4, family="Helvetica") +
annotate("text", x = -11.9, y = 7.45, label = "Estimated Isolated Effects:", size=4, family="Helvetica") +
theme_linedraw() +
theme(legend.text=element_text(size=9), legend.title = element_text(size=9),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0) + coord_cartesian(ylim=c(1,7), xlim=c(-20, 10))
quartz()
expB
png("figures/exp_intrxns_dvr_color.png",
width=8, units="in",
height=6,res = 750 )
plot(expB)
dev.off()
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(egg)
library(RColorBrewer)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
lat<-read.csv("input/NOAA_Eur50.csv", header=TRUE)
amer<-read.csv("input/NOAA_data2.csv", header=TRUE)
nc<-read.csv("input/N.Carolina.csv", header=TRUE)
new<-read.csv("input/Newport.csv", header=TRUE)
mid<-read.csv("input/midwest.csv", header=TRUE)
france<-read.csv("input/Lyon.csv", header=TRUE)
#####################################################################
## Plots by Month
# Bamberg,Germany: DOY 90-120
lat1<-lat %>%
dplyr::select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "BAMBERG GM") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
lat1$year <- substr(lat1$date, 0, 4)
lat1<- lat1 %>%
filter(year>=1965) %>%
filter(year<2016)
lat1$month<- substr(lat1$date, 5, 6)
lat1$day<- substr(lat1$date, 7,8)
lat1<- lat1 %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date, Tmin, Tmax)
lat1$doy<-yday(lat1$date)
lat1$day<-substr(lat1$date,9,10)
lat1$year<-substr(lat1$date,0,4)
lat1$month<-substr(lat1$date, 6,7)
lat1$biweek<-ifelse(lat1$day<=15,1,2)
lat1<-lat1%>%unite(biweekly,month,biweek, sep="_")
lat1$Tmean <- (lat1$Tmax + lat1$Tmin)/2
lat1$gdd <- lat1$Tmean - 5
lat1$gdd <-ifelse(lat1$gdd>0, lat1$gdd, 0)
lat1$frz<- ifelse((lat1$Tmin<=-2.2), 1, 0)
lat1$count <- ave(
lat1$frz, lat1$biweekly, lat1$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
lat1<- lat1 %>%
filter(doy >= 90) %>%
filter(doy <= 120)
gm.count<- lat1 %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
gm.count$mean<-ave(gm.count$count, gm.count$biweekly)
gm.count$stand_dev<-ave(gm.count$count, gm.count$biweekly, FUN=sd)
gm.high<-gm.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(gm.count)
gm.low<-gm.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(gm.count)
gm.count<-full_join(gm.count, gm.high)
gm.count<-full_join(gm.count, gm.low)
gm<-gm.count %>%
ungroup(gm.count) %>%
dplyr::select(-count, -year)
gm<-gm%>% filter (! duplicated(biweekly))
gm$site<-"Bavaria, DE"
gm.count$site<-"Bavaria, DE"
# Waterville, ME: DOY 100-150
water<-mid %>%
dplyr::select(STATION_NAME,DATE, TMIN, TMAX) %>%
filter(STATION_NAME == "WATERVILLE WWTP ME US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
water$year <- substr(water$date, 0, 4)
water<- water %>%
filter(year>=1965) %>%
filter(year<2016)
water$month<- substr(water$date, 5, 6)
water$day<- substr(water$date, 7,8)
water<- water %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date, Tmin, Tmax)
water$doy<-yday(water$date)
water$year<-substr(water$date,0,4)
water$month<-substr(water$date, 6,7)
water$day<-substr(water$date, 9,10)
water$biweek<-ifelse(water$day<=15,1,2)
water<-water%>%unite(biweekly,month,biweek, sep="_")
water$Tmean <- (water$Tmax + water$Tmin)/2
water$gdd <- water$Tmean - 5
water$gdd <-ifelse(water$gdd>0, water$gdd, 0)
water$frz<- ifelse((water$Tmin<=-2.2), 1, 0)
water$count <- ave(
water$frz, water$biweekly, water$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
water<- water %>%
filter(doy >= 100) %>%
filter(doy <= 150)
water.count<- water %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
water.count$mean<-ave(water.count$count, water.count$biweekly)
water.count$stand_dev<-ave(water.count$count, water.count$biweekly, FUN=sd)
water.high<-water.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(water.count)
water.low<-water.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(water.count)
water.count<-full_join(water.count, water.high)
water.count<-full_join(water.count, water.low)
maine<-water.count %>%
ungroup(water.count) %>%
dplyr::select(-count, -year)
maine<-maine%>% filter (! duplicated(biweekly))
maine$site<-"Maine, USA"
water.count$site<-"Maine, USA"
# Yakima Airport: March 22-Apr 30
am8<-amer %>%
dplyr::select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "YAKIMA AIRPORT WA US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
am8$year <- substr(am8$date, 0, 4)
am8<- am8 %>%
filter(year>=1965) %>%
filter(year<2016)
am8$month<- substr(am8$date, 5, 6)
am8$day<- substr(am8$date, 7,8)
am8<- am8 %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date,Tmin, Tmax)
am8$doy<-yday(am8$date)
am8$year<-substr(am8$date,0,4)
am8$month<-substr(am8$date, 6,7)
am8$day<-substr(am8$date, 9,10)
am8$biweek<-ifelse(am8$day<=15,1,2)
am8<-am8%>%unite(biweekly,month,biweek, sep="_")
am8$Tmean <- (am8$Tmax + am8$Tmin)/2
am8$gdd <- am8$Tmean - 5
am8$gdd <-ifelse(am8$gdd>0, am8$gdd, 0)
am8$frz<- ifelse((am8$Tmin<=-2.2), 1, 0)
am8$count <- ave(
am8$frz, am8$biweekly, am8$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
am8<- am8 %>%
filter(doy >= 80) %>%
filter(doy <= 120)
wash.count<- am8 %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
wash.count$mean<-ave(wash.count$count, wash.count$biweekly)
wash.count$stand_dev<-ave(wash.count$count, wash.count$biweekly, FUN=sd)
wash.high<-wash.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(wash.count)
wash.low<-wash.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(wash.count)
wash.count<-full_join(wash.count, wash.high)
wash.count<-full_join(wash.count, wash.low)
wash<-wash.count %>%
ungroup(wash.count) %>%
dplyr::select(-count, -year)
wash<-wash%>% filter (! duplicated(biweekly))
wash$site<-"Washington, USA"
wash.count$site<-"Washington, USA"
# North Carolina: Feb 21 - Apr 4
## 1967 and 2012 both have one extra count (-9999degC)
nc1<-nc %>%
dplyr::select(STATION_NAME,DATE, TMIN, TMAX) %>%
filter(STATION_NAME == "REIDSVILLE 2 NW NC US") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
nc1$year <- substr(nc1$date, 0, 4)
nc1<- nc1 %>%
filter(year>=1965) %>%
filter(year<2016)
nc1$month<- substr(nc1$date, 5, 6)
nc1$day<- substr(nc1$date, 7,8)
nc1<- nc1 %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date, Tmin, Tmax)
nc1$doy<-yday(nc1$date)
nc1$year<-substr(nc1$date,0,4)
nc1$month<-substr(nc1$date, 6,7)
nc1$day<-substr(nc1$date,9,10)
nc1$biweek<-ifelse(nc1$day<=15,1,2)
nc1<-nc1%>%unite(biweekly,month,biweek, sep="_")
nc1$Tmean <- (nc1$Tmax + nc1$Tmin)/2
nc1$gdd <- nc1$Tmean - 5
nc1$gdd <-ifelse(nc1$gdd>0, nc1$gdd, 0)
nc1$frz<- ifelse((nc1$Tmin<=-2.2), 1, 0)
nc1$count <- ave(
nc1$frz, nc1$biweekly, nc1$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
nc1<- nc1 %>%
filter(doy >= 50) %>%
filter(doy <= 100)
nc1$Tmin<-ifelse(nc1$Tmin==-9999, NA, nc1$Tmin)
nc1<-na.omit(nc1)
nc.count<- nc1 %>%
dplyr::select(year, biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
nc.count$mean<-ave(nc.count$count, nc.count$biweekly)
nc.count$stand_dev<-ave(nc.count$count, nc.count$biweekly, FUN=sd)
nc.high<-nc.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(nc.count)
nc.low<-nc.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(nc.count)
nc.count<-full_join(nc.count, nc.high)
nc.count<-full_join(nc.count, nc.low)
nc2<-nc.count %>%
ungroup(nc.count) %>%
dplyr::select(-count, -year)
nc2<-nc2%>% filter (! duplicated(biweekly))
nc2$site<-"North Carolina, USA"
nc.count$site<-"North Carolina, USA"
# Lyon, France: Apr 5 - May 10
ren<-france %>%
dplyr::select(STATION_NAME,DATE, TAVG, TMIN, TMAX) %>%
filter(STATION_NAME == "BRON LYON AEROPORT FR") %>%
rename(Tmin = TMIN) %>%
rename(Tmax = TMAX) %>%
rename(date = DATE)
ren$year <- substr(ren$date, 0, 4)
ren<- ren %>%
filter(year>=1965) %>%
filter(year<2016)
ren$month<- substr(ren$date, 5, 6)
ren$day<- substr(ren$date, 7,8)
ren<- ren %>%
dplyr::select(-date)%>%
unite(date, year, month, day, sep="-") %>%
dplyr::select(date,Tmin, Tmax)
ren$doy<-yday(ren$date)
ren$year<-substr(ren$date,0,4)
ren$month<-substr(ren$date, 6,7)
ren$day<-substr(ren$date,9,10)
ren$biweek<-ifelse(ren$day<=15,1,2)
ren<-ren%>%unite(biweekly,month,biweek, sep="_")
ren$Tmean <- (ren$Tmax + ren$Tmin)/2
ren$gdd <- ren$Tmean - 5
ren$gdd <-ifelse(ren$gdd>0, ren$gdd, 0)
ren$frz<- ifelse((ren$Tmin<=-2.2), 1, 0)
ren$count <- ave(
ren$frz, ren$biweekly, ren$year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
ren<- ren %>%
filter(doy >= 95) %>%
filter(doy <= 130)
ren.count<- ren %>%
dplyr::select(year,biweekly, count) %>%
group_by(year, biweekly)%>%
filter(row_number(biweekly)==n())
ren.count$mean<-ave(ren.count$count, ren.count$biweekly)
ren.count$stand_dev<-ave(ren.count$count, ren.count$biweekly, FUN=sd)
ren.high<-ren.count%>%group_by(biweekly)%>%summarise(high=max(count))%>%ungroup(ren.count)
ren.low<-ren.count%>%group_by(biweekly)%>%summarise(low=min(count))%>%ungroup(ren.count)
ren.count<-full_join(ren.count, ren.high)
ren.count<-full_join(ren.count, ren.low)
ren1<-ren.count %>%
ungroup(ren.count) %>%
dplyr::select(-count, -year)
ren1<-ren1%>% filter (! duplicated(biweekly))
ren1$site<-"Rhone-Alps, FR"
ren.count$site<-"Rhone-Alps, FR"
d<-full_join(gm, wash)
d<-full_join(d, nc2)
d<-full_join(d, ren1)
d<-full_join(d, maine)
df<-full_join(gm.count,wash.count)
df<-full_join(df, nc.count)
df<-full_join(df, ren.count)
df<-full_join(df, water.count)
limits <- aes(ymax = mean + stand_dev, ymin=mean - stand_dev)
d$biweekly<-ifelse(d$biweekly=="02_2", "Feb 15-Feb 29", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="03_1", "Mar 1-Mar 14", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="03_2", "Mar 15-Mar 31", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="04_1", "Apr 1-Apr 14", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="04_2", "Apr 15-Apr 30", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="05_1", "May 1-May 14", d$biweekly)
d$biweekly<-ifelse(d$biweekly=="05_2", "May 15-May 31", d$biweekly)
d$high<-as.numeric(d$high)
d$low<-as.numeric(d$low)
d$biweekly <- factor(d$biweekly, levels=c("Feb 15-Feb 29", "Mar 1-Mar 14", "Mar 15-Mar 31", "Apr 1-Apr 14",
"Apr 15-Apr 30","May 1-May 14","May 15-May 31"))
#limitcolor<-c("lightgoldenrod", "lightgoldenrod", "lightgoldenrod","plum", "plum", "plum",
#             "lightblue", "lightblue", "lightblue", "lightblue",
#            "pink", "pink", "pink", "mediumaquamarine", "mediumaquamarine", "mediumaquamarine", "mediumaquamarine")
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(5)
risk<-ggplot(d, aes(x=biweekly, y=mean, shape=factor(site))) +
geom_point(aes(size=factor(site), group=site, shape=factor(site)), size=2) + ylab("Number of days below -2.2C per two-week period") +
geom_line(aes(x=biweekly, y=mean,  col=factor(site), group=site), size=1) +
geom_linerange(aes(ymax=high, col=as.factor(site),  ymin=low), position=position_dodge(.2), alpha=0.3, size=2) + labs(color="Location and Day of Budburst Range") +
theme_classic() +
theme(legend.position="none", axis.title.x=element_blank(),  plot.background = element_rect(fill="transparent", color=NA),
panel.border = element_rect(fill="transparent"), plot.margin=unit(c(-.6,.5,.3,.5),"cm"),
panel.background = element_rect(fill="transparent", color=NA)) +
scale_x_discrete(breaks=c(53, 66, 82, 98, 114, 128, 144), label=c("Feb 15 - Feb 29", "Mar 1 - Mar 14", "Mar 15 - Mar 31", "Apr 1 - Apr 14",
"Apr 15 - Apr 30", "May 1 - May 14", "May 15 - May 31"),
position="top") +scale_y_continuous(expand = c(0, 0.1)) + coord_cartesian(ylim=c(0.03:15)) +
annotate("text", x = 6.3, y = 12, label = "Climate Data", fontface = "bold", size=4) +
scale_shape_manual(labels=c("Bavaria, DE: March 31 - April 30",
"Maine, USA: April 10 - May 30", "North Carolina, USA: February 21 - April 4",
"Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30"),
values= c(0, 19, 0, 2, 15)) +
scale_color_manual(labels=c("Bavaria, DE: March 31 - April 30",
"Maine, USA: April 10 - May 30", "North Carolina, USA: February 21 - April 4",
"Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30"),
values= cols) + guides(shape=FALSE, size=FALSE, color=FALSE)
#risk
x<- data.frame("Site"=c( "Rhone-Alps, France", "Bavaria, Germany", "Maine, USA", "North Carolina, USA","Washington, USA"), "Earliest"=c( 90,90, 100, 50, 80),
"Early" = c( 100, 112, 115, 80,100), "Late" = c( 115, 127, 120, 90, 120), "Latest" = c( 120,140, 150, 100, 130))
timeprep<-x%>%
gather("time", "doy", Earliest, Early, Late, Latest) %>%
arrange(desc(Site))
timeprep$biweekly<-ifelse((timeprep$doy>=46 & timeprep$doy <=60), "Feb 15-Feb 29", timeprep$doy)
timeprep$biweekly<-ifelse((timeprep$doy>=61 & timeprep$doy <=73), "Mar 1-Mar 14", timeprep$biweekly)
timeprep$biweekly<-ifelse((timeprep$doy>=74 & timeprep$doy <=91), "Mar 15-Mar 31", timeprep$biweekly)
timeprep$biweekly<-ifelse((timeprep$doy>=92 & timeprep$doy <=106), "Apr 1-Apr 14", timeprep$biweekly)
timeprep$biweekly<-ifelse((timeprep$doy>=107 & timeprep$doy <=121), "Apr 15-Apr 30", timeprep$biweekly)
timeprep$biweekly<-ifelse((timeprep$doy>=122 & timeprep$doy <=136), "May 1-May 14", timeprep$biweekly)
timeprep$biweekly<-ifelse((timeprep$doy>=137 & timeprep$doy <=152), "May 15-May 31", timeprep$biweekly)
timeprep$doy<-as.numeric(as.character(timeprep$doy))
timeprep2 <- transform(timeprep, Site = reorder(Site, order(Site, decreasing = TRUE)))
timeprep$Site <- factor(timeprep$Site,levels=sort(unique(timeprep$Site), decreasing=FALSE))
time<- ggplot(timeprep, aes(y=doy, x=Site, col=Site)) + geom_boxplot(aes(y=doy, x=Site), width=0.2) + coord_flip() +
scale_y_continuous(breaks=c(55, 70, 85, 101, 116, 131, 146), label=c("Feb15-Feb29", "Mar1-Mar14", "Mar15-Mar31", "Apr1-Apr14",
"Apr15-Apr30", "May1-May14", "May15-May31")) +
theme_classic() +
theme(legend.position="none", plot.margin=unit(c(.2,.5,-.3,.5),"cm"),
panel.border = element_rect(fill="transparent"), axis.text.x = element_text(size=7),
plot.background = element_rect(fill = "transparent", color = NA), panel.background = element_rect(fill = "transparent",colour = NA)) +
ylab("") + xlab("") + scale_x_discrete(limits = rev(levels(timeprep$Site))) +
annotate("text", x=5.35, y=118, label="March 31-April 30", fontface="bold", size=3, col="grey") +
annotate("text", x=4.35, y=120, label="April 10-May 30", fontface="bold", size=3, col="grey") +
annotate("text", x=3.35, y=83, label="February 21-April 4", fontface="bold", size=3, col="grey") +
annotate("text", x=2.35, y=107, label="April 5-May 10", fontface="bold", size=3, col="grey") +
annotate("text", x=1.35, y=109, label="March 22-April 30", fontface="bold", size=3, col="grey") +
annotate("text", x=4.8, y=63, label="Phenology Data", fontface="bold", size=4) +
scale_color_manual(labels=c("Bavaria, DE: March 31 - April 30",
"Maine, USA: April 10 - May 30", "North Carolina, USA: February 21 - April 4",
"Rhone-Alps, FR: April 5 - May 10", "Washington, USA: March 22 - April 30"), values= cols)
#time
quartz()
dev.new()
regrisk <- ggarrange(time, risk, nrow=2, heights=c(0.45, 1))
regrisk
ggsave("figures/regionalrisk_sites_color.png",width=6.5,height=7,units="in",bg = "white", dpi=500, plot=regrisk)
