}
hist(fake$dp[sunny==1])
hist(fake$dp[sunny==2])
mean(fake$dp) # 50.5
sd(fake$dp) # 7.24
display(lm(dp~sunny, data=fake))
#lm(formula = dp ~ sunny, data = fake)
#coef.est coef.se
#(Intercept) 45.33     0.23
#sunny2      10.25     0.32
#---
#  n = 1000, k = 2
#residual sd = 5.11, R-Squared = 0.50
### Alright, now let's triple the effect size...
### Sunny D increases the level of dopamine to 75 ng/ml - we'll keep the sample size the same
nsunny.e = 2
rep.e = 5
ntot.e = nsunny.e*rep.e
sunny.e = gl(nsunny.e, rep.e, length=ntot.e)
sunnydiff.e = 30
sunnydiff.sd.e = 0
suns.e<-rnorm(ntot.e, 75, 5)
base.e <- 45
child.e <- base.e + suns.e-mean(suns.e)
mm.e <- model.matrix(~(sunny.e)^2, data.frame=(sunny.e))
fake.e <- vector()
for (i in 1:length(ntot.e)){
coeff.e <- c(child.e[i],
rnorm(1, sunnydiff.e, sunnydiff.sd.e)
)
dp.e <- rnorm(n = length(sunny.e), mean = mm.e %*% coeff.e, sd = 5)
fake.e <- data.frame(dp.e=dp.e, sunny.e=sunny.e)
}
hist(fake.e$dp.e[sunny.e==1])
hist(fake.e$dp.e[sunny.e==2])
mean(fake.e$dp.e) # 61.2
sd(fake.e$dp.e) # 15.9
display(lm(dp.e~sunny.e, data=fake.e))
#lm(formula = dp.e ~ sunny.e, data = fake.e)
#coef.est coef.se
#(Intercept) 46.04     0.22
#sunny.e2    30.24     0.31
#---
#  n = 1000, k = 2
#residual sd = 4.94, R-Squared = 0.90
## And now, we triple the sample size...
nsunny.s = 2
rep.s = 15
ntot.s = nsunny.s*rep.s
sunny.s = gl(nsunny.s, rep.s, length=ntot.s)
sunnydiff.s = 10
sunnydiff.sd.s = 0
suns.s<-rnorm(ntot.s, 55, 5)
base.s <- 45
child.s <- base.s + suns.s-mean(suns.s)
mm.s <- model.matrix(~(sunny.s)^2, data.frame=(sunny.s))
fake.s <- vector()
for (i in 1:length(ntot.s)){
coeff.s <- c(child.s[i],
rnorm(1, sunnydiff.s, sunnydiff.sd.s)
)
dp.s <- rnorm(n = length(sunny.s), mean = mm.s %*% coeff.s, sd = 5)
fake.s <- data.frame(dp.s=dp.s, sunny.s=sunny.s)
}
hist(fake.s$dp.s)
mean(fake.s$dp.s) # 52.8
sd(fake.s$dp.s) # 6.93
display(lm(dp.s~sunny.s, data=fake.s))
#lm(formula = dp.s ~ sunny.s, data = fake.s)
#coef.est coef.se
#(Intercept) 48.01     0.13
#sunny.s2     9.66     0.18
#---
#  n = 3000, k = 2
#residual sd = 4.97, R-Squared = 0.49
#### Let's plot the effects!
fake$sunny<-ifelse(fake$sunny==1, "control", "sunnyD")
base<- qplot(sunny, dp, data = fake, geom="boxplot", color=sunny) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
fake.e$sunny.e<-ifelse(fake.e$sunny.e==1, "control", "sunnyD")
effect<- qplot(sunny.e, dp.e, data = fake.e, geom="boxplot", color=sunny.e) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
fake.s$sunny.s<-ifelse(fake.s$sunny.s==1, "control", "sunnyD")
sample<- qplot(sunny.s, dp.s, data = fake.s, geom="boxplot", color=sunny.s) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
grid.arrange(base, effect, sample, ncol=3, nrow=1)
fake$child<- as.numeric(sample(1000))
fake.e$child.e<-as.numeric(sample(1000))
fake.s$child.s<-as.numeric(sample(3000))
bg<-ggplot(fake, aes(x=child, y=dp)) + geom_point(aes(color=sunny)) + geom_smooth(method="lm")
#bh<-hist(fake$dp)
#grid.arrange(bg,bh, ncol=1, nrow=2)
eg<-ggplot(fake.e, aes(x=child.e, y=dp.e)) + geom_point(aes(color=sunny.e)) + geom_smooth(method="lm")
#eh<-hist(fake.e$dp.e)
#grid.arrange(eg,eh, ncol=1, nrow=2)
sg<-ggplot(fake.s, aes(x=child.s, y=dp.s)) + geom_point(aes(color=sunny.s)) + geom_smooth(method="lm")
#sh<-hist(fake.s$dp.s)
#grid.arrange(sg,sh, ncol=1, nrow=2)
grid.arrange(bg,eg,sg, ncol=3, nrow=1)
fake$child<- as.numeric(sample(10))
fake.e$child.e<-as.numeric(sample(10))
fake.s$child.s<-as.numeric(sample(30))
bg<-ggplot(fake, aes(x=child, y=dp)) + geom_point(aes(color=sunny)) + geom_smooth(method="lm")
eg<-ggplot(fake.e, aes(x=child.e, y=dp.e)) + geom_point(aes(color=sunny.e)) + geom_smooth(method="lm")
sg<-ggplot(fake.s, aes(x=child.s, y=dp.s)) + geom_point(aes(color=sunny.s)) + geom_smooth(method="lm")
grid.arrange(bg,eg,sg, ncol=3, nrow=1)
library(arm)
library(ggplot2)
library(gridExtra)
## What is the effect size in this example?
ES = (55-45)/5 ## ES = 2
SE = 5/(sqrt(100)) ## SE = 0.16
## What about when we triple the effect size?
ES = (75-45)/5 ## ES = 6
SE = 5/(sqrt(100)) ## SE stays the same
## How about when we triple the sample size?
ES = (55-45)/5 ## ES is 2 like before but...
SE = 5/(sqrt(300)) ## SE decreases slightly - SE = 0.09
### Andrew states that " it is generally better to double the effect size [theta] than to double the sample size [n]"
## here we can see that doubling the sample size decreases the standard error at a slower rate than doubling the effect size
# The SE: effect size influences the numerator, sample size influences the denominator
nsunny = 2
rep = 50
ntot = nsunny*rep
sunny = gl(nsunny, rep, length=ntot)
sunnydiff = 10
sunnydiff.sd = 0
suns<-rnorm(ntot, 55, 5)
base <- 45
child <- base + suns-mean(suns)
mm <- model.matrix(~(sunny)^2, data.frame=(sunny))
fake <- vector()
for (i in 1:length(ntot)){
coeff <- c(child[i],
rnorm(1, sunnydiff, sunnydiff.sd)
)
dp <- rnorm(n = length(sunny), mean = mm %*% coeff, sd = 5)
fake <- data.frame(dp=dp, sunny=sunny)
}
hist(fake$dp[sunny==1])
hist(fake$dp[sunny==2])
mean(fake$dp) # 50.5
sd(fake$dp) # 7.24
display(lm(dp~sunny, data=fake))
#lm(formula = dp ~ sunny, data = fake)
#coef.est coef.se
#(Intercept) 45.33     0.23
#sunny2      10.25     0.32
#---
#  n = 1000, k = 2
#residual sd = 5.11, R-Squared = 0.50
### Alright, now let's triple the effect size...
### Sunny D increases the level of dopamine to 75 ng/ml - we'll keep the sample size the same
nsunny.e = 2
rep.e = 50
ntot.e = nsunny.e*rep.e
sunny.e = gl(nsunny.e, rep.e, length=ntot.e)
sunnydiff.e = 30
sunnydiff.sd.e = 0
suns.e<-rnorm(ntot.e, 75, 5)
base.e <- 45
child.e <- base.e + suns.e-mean(suns.e)
mm.e <- model.matrix(~(sunny.e)^2, data.frame=(sunny.e))
fake.e <- vector()
for (i in 1:length(ntot.e)){
coeff.e <- c(child.e[i],
rnorm(1, sunnydiff.e, sunnydiff.sd.e)
)
dp.e <- rnorm(n = length(sunny.e), mean = mm.e %*% coeff.e, sd = 5)
fake.e <- data.frame(dp.e=dp.e, sunny.e=sunny.e)
}
hist(fake.e$dp.e[sunny.e==1])
hist(fake.e$dp.e[sunny.e==2])
mean(fake.e$dp.e) # 61.2
sd(fake.e$dp.e) # 15.9
display(lm(dp.e~sunny.e, data=fake.e))
#lm(formula = dp.e ~ sunny.e, data = fake.e)
#coef.est coef.se
#(Intercept) 46.04     0.22
#sunny.e2    30.24     0.31
#---
#  n = 1000, k = 2
#residual sd = 4.94, R-Squared = 0.90
## And now, we triple the sample size...
nsunny.s = 2
rep.s = 150
ntot.s = nsunny.s*rep.s
sunny.s = gl(nsunny.s, rep.s, length=ntot.s)
sunnydiff.s = 10
sunnydiff.sd.s = 0
suns.s<-rnorm(ntot.s, 55, 5)
base.s <- 45
child.s <- base.s + suns.s-mean(suns.s)
mm.s <- model.matrix(~(sunny.s)^2, data.frame=(sunny.s))
fake.s <- vector()
for (i in 1:length(ntot.s)){
coeff.s <- c(child.s[i],
rnorm(1, sunnydiff.s, sunnydiff.sd.s)
)
dp.s <- rnorm(n = length(sunny.s), mean = mm.s %*% coeff.s, sd = 5)
fake.s <- data.frame(dp.s=dp.s, sunny.s=sunny.s)
}
hist(fake.s$dp.s)
mean(fake.s$dp.s) # 52.8
sd(fake.s$dp.s) # 6.93
display(lm(dp.s~sunny.s, data=fake.s))
#lm(formula = dp.s ~ sunny.s, data = fake.s)
#coef.est coef.se
#(Intercept) 48.01     0.13
#sunny.s2     9.66     0.18
#---
#  n = 3000, k = 2
#residual sd = 4.97, R-Squared = 0.49
#### Let's plot the effects!
fake$sunny<-ifelse(fake$sunny==1, "control", "sunnyD")
base<- qplot(sunny, dp, data = fake, geom="boxplot", color=sunny) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
fake.e$sunny.e<-ifelse(fake.e$sunny.e==1, "control", "sunnyD")
effect<- qplot(sunny.e, dp.e, data = fake.e, geom="boxplot", color=sunny.e) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
fake.s$sunny.s<-ifelse(fake.s$sunny.s==1, "control", "sunnyD")
sample<- qplot(sunny.s, dp.s, data = fake.s, geom="boxplot", color=sunny.s) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
grid.arrange(base, effect, sample, ncol=3, nrow=1)
fake$child<- as.numeric(sample(100))
fake.e$child.e<-as.numeric(sample(100))
fake.s$child.s<-as.numeric(sample(300))
bg<-ggplot(fake, aes(x=child, y=dp)) + geom_point(aes(color=sunny)) + geom_smooth(method="lm")
eg<-ggplot(fake.e, aes(x=child.e, y=dp.e)) + geom_point(aes(color=sunny.e)) + geom_smooth(method="lm")
sg<-ggplot(fake.s, aes(x=child.s, y=dp.s)) + geom_point(aes(color=sunny.s)) + geom_smooth(method="lm")
grid.arrange(bg,eg,sg, ncol=3, nrow=1)
display(mod.base);display(mod.e);display(mod.s)
mod.base<-lm(dp~sunny, data=fake)
mod.e<-lm(dp.e~sunny.e, data=fake.e)
mod.s<-lm(dp.s~sunny.s, data=fake.s)
display(mod.base);display(mod.e);display(mod.s)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
library(ggplot2)
#library(rstan)
library(rstanarm)
#library(shinystan)
#library(bayesplot)
library(dplyr)
library(gridExtra)
library(brms)
library(egg)
library(ggstance)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/danfdata.csv", header=TRUE)
# Prep
#dx<-dx[!(dx$chill==1),]
#dx$chill<-ifelse(dx$chill==2, 0, 1)
#dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN")
dx$sp <- as.numeric(as.factor(dx$sp))
#dx$site <- as.numeric(as.factor(dx$site))
dx<-dx[!is.na(dx$risk),]
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3
dx$warm <- as.numeric(dx$warm)
dx$warm<-ifelse(dx$warm==15, 0, 1)
dx$photo <- as.numeric(dx$photo)
dx$photo<-ifelse(dx$photo==8, 0, 1)
dx$chill <- as.numeric(dx$chill)
#dx$site<- as.numeric(dx$site)
# Chill dummy variables
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
dxb <- dx[!is.na(dx$risk),]
dxb<-filter(dxb, risk>0)
View(dx)
View(dxb)
load(fit.brm2, file="~/Documents/git/springfreeze/output/exp_output.Rdata")
#fit.brm<-brm(risk~ force + photo + chill + force:photo + force:chill +
#             photo:chill + (force + photo + chill + force:photo + force:chill +
#                                      photo:chill|sp), data=dxb)
fit.brm2<-brm(risk~ force + photo + chill1 + chill2 + force:photo + force:chill1 + force:chill2 +
photo:chill1 + photo:chill2 + (force + photo + chill1 + chill2 + force:photo +
force:chill1 + force:chill2 +
photo:chill1 + photo:chill2|sp), data=dxb)
dxb$force<-dxb$warm
#fit.brm<-brm(risk~ force + photo + chill + force:photo + force:chill +
#             photo:chill + (force + photo + chill + force:photo + force:chill +
#                                      photo:chill|sp), data=dxb)
fit.brm2<-brm(risk~ force + photo + chill1 + chill2 + force:photo + force:chill1 + force:chill2 +
photo:chill1 + photo:chill2 + (force + photo + chill1 + chill2 + force:photo +
force:chill1 + force:chill2 +
photo:chill1 + photo:chill2|sp), data=dxb)
save(fit.brm2, file="~/Documents/git/springfreeze/output/exp_output.Rdata")
m<-fit.brm2
m.int<-posterior_interval(m)
sum.m<-summary(m)
cri.f<-as.data.frame(sum.m$fixed[,c("Estimate", "l-95% CI", "u-95% CI")])
cri.f<-cri.f[-1,] #removing the intercept
fdf1<-as.data.frame(rbind(as.vector(cri.f[,1]), as.vector(cri.f[,2]), as.vector(cri.f[,3])))
fdf2<-cbind(fdf1, c(0, 0, 0) , c("Estimate", "2.5%", "95%"))
names(fdf2)<-c(rownames(cri.f), "sp", "perc")
cri.r<-(ranef(m, summary = TRUE, robust = FALSE,
probs = c(0.025, 0.975)))$sp
cri.r2<-cri.r[, ,-1]
cri.r2<-cri.r2[,-2,]
dims<-dim(cri.r2)
twoDimMat <- matrix(cri.r2, prod(dims[1:2]), dims[3])
mat2<-cbind(twoDimMat, c(rep(1:9, length.out=27)), rep(c("Estimate", "2.5%", "95%"), each=9))
df<-as.data.frame(mat2)
names(df)<-c(rownames(cri.f), "sp", "perc")
dftot<-rbind(fdf2, df)
dflong<- tidyr::gather(dftot, var, value, force:`photo:chill2`, factor_key=TRUE)
#adding the coef estiamtes to the random effect values
for (i in seq(from=1,to=nrow(dflong), by=30)) {
for (j in seq(from=3, to=29, by=1)) {
dflong$value[i+j]<- as.numeric(dflong$value[i+j]) + as.numeric(dflong$value[i])
}
}
dflong$rndm<-ifelse(dftot$sp>0, 2, 1)
dfwide<-tidyr::spread(dflong, perc, value)
dfwide[,4:6] <- as.data.frame(lapply(c(dfwide[,4:6]), as.numeric ))
dfwide$sp<-as.factor(dfwide$sp)
pd <- position_dodgev(height = -0.5)
estimates<-c("Forcing", "Photoperiod", "Chilling 1.5", "Chilling 4", "Forcing x Photoperiod",
"Forcing x Chilling 1.5", "Forcing x Chilling 4", "Photoperiod x Chilling 1.5", "Photoperiod x Chilling 4")
dfwide$legend<-factor(dfwide$sp,
labels=c("Overall Effects","1","2","3","4","5","6","7","8","9"))
estimates<-rev(estimates)
### Now make a new dataframe for more conceptual figure
## Do I add the intercept? Which is 23.71...
simple<-subset(dfwide, select=c("sp", "var", "Estimate"))
#simple<-simple[(simple$sp=="1"|simple$sp=="4"|simple$sp=="8"),]
#simple$sp<-ifelse(simple$sp=="4", "1", "9")
simple<-simple[!(simple$sp=="0"),]
simple<-simple[!(simple$var=="photo:chill1" | simple$var=="photo:chill2" | simple$var=="force:chill1"
| simple$var=="chill1"),]
simple$var<-ifelse(simple$var=="chill2", "chill", as.character(simple$var))
simple$var<-ifelse(simple$var=="force:chill2", "force:chill", as.character(simple$var))
estimates<-c("More Forcing", "Shorter Photoperiod", "Less Chilling", "More Forcing and \nShorter Photoperiod",
"More Forcing and \nLess Chilling")
#pd <- position_dodgev(height = -0.5)
#simple$Jvar <- ave(as.numeric(simple$var), simple$var,
#                         FUN = function(x) x + rnorm(length(x), sd = .1))
simple$Jvar<-NA
simple$Jvar<-ifelse(simple$var=="force", 5, simple$var)
simple$Jvar<-ifelse(simple$var=="photo", 4, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="chill", 3, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:photo", 2, simple$Jvar)
simple$Jvar<-ifelse(simple$var=="force:chill", 1, simple$Jvar)
simple$Jvar2<-as.numeric(simple$Jvar)
simple$spp<-(as.numeric(simple$sp)-1)*0.05
simple$Jvar2<-as.numeric(simple$Jvar)-simple$spp
simple$Estimate<-ifelse(simple$var=="photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="chill", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:photo", -simple$Estimate, simple$Estimate)
simple$Estimate<-ifelse(simple$var=="force:chill", -simple$Estimate, simple$Estimate)
species<-unique(simple$sp)
simple$est2<-simple$Estimate
for(i in c(1:length(species))) {
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:photo", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="photo" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:photo" & simple$sp==species[i]], simple$Estimate)
simple$est2<-ifelse(simple$sp==species[i] & simple$var=="force:chill", simple$Estimate[simple$var=="force" & simple$sp==species[i]]+
simple$Estimate[simple$var=="chill" & simple$sp==species[i]]+
simple$Estimate[simple$var=="force:chill" & simple$sp==species[i]], simple$est2)
}
estimates<-rev(estimates)
cols <- colorRampPalette(brewer.pal(9,"Spectral"))(9)
library(RColorBrewer)
cols <- colorRampPalette(brewer.pal(9,"Spectral"))(9)
exp<-ggplot(simple, aes(x=0, xend=est3, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
quartz()
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8)) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
cols <- colorRampPalette(brewer.pal(9,"Accent"))(9)
cols <- colorRampPalette(brewer.pal(9,"Set3"))(9)
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=cols,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
View(fdf1)
View(simple)
simple$spp<-(as.numeric(simple$sp)-1)
simple$spp<-ifelse(simple$spp>1, simple$spp*0.05, simple$spp)
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", aes(values=sp),
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=sp,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
exp<-ggplot(simple, aes(x=0, xend=est2, y=Jvar2, yend=Jvar2, col=sp)) +
geom_vline(xintercept=0, linetype="dotted") +
scale_colour_manual(name="Species", values=simple$sp,
labels=c("1"=expression(paste(italic("Acer pensylvanicum"))),
"2"=expression(paste(italic("Acer rubrum"))),
"3"=expression(paste(italic("Acer saccharum"))),
"4"=expression(paste(italic("Betula alleghaniensis"))),
"5"=expression(paste(italic("Betula papyrifera"))),
"6"=expression(paste(italic("Fagus grandifolia"))),
"7"=expression(paste(italic("Ilex mucronata"))),
"8"=expression(paste(italic("Populus grandidentata"))),
"9"=expression(paste(italic("Quercus rubra"))))) +
geom_segment(arrow = arrow(length = unit(0.03, "npc"))) +
scale_y_discrete(limits = sort(unique(simple$var)), labels=estimates) +
xlab("Change in Duration (Days) \nof Vegetative Risk") + ylab("") +
geom_hline(yintercept=2.5, col="grey") +
annotate("text", x = 11.55, y = 2.4, label = "Combined Effects:", fontface="bold", size=3) +
annotate("text", x = 10.8, y = 5.5, label = "Simple Effects:", fontface="bold", size=3) +
theme(legend.text=element_text(size=8), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
legend.position=c(0.8, 0.8), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="sans")) + theme_linedraw() + coord_cartesian(ylim=c(1,5))
exp
install.packages("ggplot2")
