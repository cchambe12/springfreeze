nsunny = 2
rep = 50
ntot = nsunny*rep
sunny = gl(nsunny, rep, length=ntot)
sunnydiff = 10
sunnydiff.sd = 0
suns<-rnorm(ntot, 55, 5)
base <- 45
child <- base + suns-mean(suns)
mm <- model.matrix(~(sunny)^2, data.frame=(sunny))
fake <- vector()
for (i in 1:length(ntot)){
coeff <- c(child[i],
rnorm(1, sunnydiff, sunnydiff.sd)
)
dp <- rnorm(n = length(sunny), mean = mm %*% coeff, sd = 5)
fake <- data.frame(dp=dp, sunny=sunny)
}
hist(fake$dp[sunny==1])
hist(fake$dp[sunny==2])
mean(fake$dp) # 50.5
sd(fake$dp) # 7.24
display(lm(dp~sunny, data=fake))
#lm(formula = dp ~ sunny, data = fake)
#coef.est coef.se
#(Intercept) 45.33     0.23
#sunny2      10.25     0.32
#---
#  n = 1000, k = 2
#residual sd = 5.11, R-Squared = 0.50
### Alright, now let's triple the effect size...
### Sunny D increases the level of dopamine to 75 ng/ml - we'll keep the sample size the same
nsunny.e = 2
rep.e = 50
ntot.e = nsunny.e*rep.e
sunny.e = gl(nsunny.e, rep.e, length=ntot.e)
sunnydiff.e = 30
sunnydiff.sd.e = 0
suns.e<-rnorm(ntot.e, 75, 5)
base.e <- 45
child.e <- base.e + suns.e-mean(suns.e)
mm.e <- model.matrix(~(sunny.e)^2, data.frame=(sunny.e))
fake.e <- vector()
for (i in 1:length(ntot.e)){
coeff.e <- c(child.e[i],
rnorm(1, sunnydiff.e, sunnydiff.sd.e)
)
dp.e <- rnorm(n = length(sunny.e), mean = mm.e %*% coeff.e, sd = 5)
fake.e <- data.frame(dp.e=dp.e, sunny.e=sunny.e)
}
hist(fake.e$dp.e[sunny.e==1])
hist(fake.e$dp.e[sunny.e==2])
mean(fake.e$dp.e) # 61.2
sd(fake.e$dp.e) # 15.9
display(lm(dp.e~sunny.e, data=fake.e))
#lm(formula = dp.e ~ sunny.e, data = fake.e)
#coef.est coef.se
#(Intercept) 46.04     0.22
#sunny.e2    30.24     0.31
#---
#  n = 1000, k = 2
#residual sd = 4.94, R-Squared = 0.90
## And now, we triple the sample size...
nsunny.s = 2
rep.s = 150
ntot.s = nsunny.s*rep.s
sunny.s = gl(nsunny.s, rep.s, length=ntot.s)
sunnydiff.s = 10
sunnydiff.sd.s = 0
suns.s<-rnorm(ntot.s, 55, 5)
base.s <- 45
child.s <- base.s + suns.s-mean(suns.s)
mm.s <- model.matrix(~(sunny.s)^2, data.frame=(sunny.s))
fake.s <- vector()
for (i in 1:length(ntot.s)){
coeff.s <- c(child.s[i],
rnorm(1, sunnydiff.s, sunnydiff.sd.s)
)
dp.s <- rnorm(n = length(sunny.s), mean = mm.s %*% coeff.s, sd = 5)
fake.s <- data.frame(dp.s=dp.s, sunny.s=sunny.s)
}
hist(fake.s$dp.s)
mean(fake.s$dp.s) # 52.8
sd(fake.s$dp.s) # 6.93
display(lm(dp.s~sunny.s, data=fake.s))
#lm(formula = dp.s ~ sunny.s, data = fake.s)
#coef.est coef.se
#(Intercept) 48.01     0.13
#sunny.s2     9.66     0.18
#---
#  n = 3000, k = 2
#residual sd = 4.97, R-Squared = 0.49
#### Let's plot the effects!
fake$sunny<-ifelse(fake$sunny==1, "control", "sunnyD")
base<- qplot(sunny, dp, data = fake, geom="boxplot", color=sunny) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
fake.e$sunny.e<-ifelse(fake.e$sunny.e==1, "control", "sunnyD")
effect<- qplot(sunny.e, dp.e, data = fake.e, geom="boxplot", color=sunny.e) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
fake.s$sunny.s<-ifelse(fake.s$sunny.s==1, "control", "sunnyD")
sample<- qplot(sunny.s, dp.s, data = fake.s, geom="boxplot", color=sunny.s) +
xlab("Sunny D consumption") + ylab("Dopamine levels (ng/ml)") + ylim(30,85)
grid.arrange(base, effect, sample, ncol=3, nrow=1)
fake$child<- as.numeric(sample(100))
fake.e$child.e<-as.numeric(sample(100))
fake.s$child.s<-as.numeric(sample(300))
bg<-ggplot(fake, aes(x=child, y=dp)) + geom_point(aes(color=sunny)) + geom_smooth(method="lm")
eg<-ggplot(fake.e, aes(x=child.e, y=dp.e)) + geom_point(aes(color=sunny.e)) + geom_smooth(method="lm")
sg<-ggplot(fake.s, aes(x=child.s, y=dp.s)) + geom_point(aes(color=sunny.s)) + geom_smooth(method="lm")
grid.arrange(bg,eg,sg, ncol=3, nrow=1)
display(mod.base);display(mod.e);display(mod.s)
mod.base<-lm(dp~sunny, data=fake)
mod.e<-lm(dp.e~sunny.e, data=fake.e)
mod.s<-lm(dp.s~sunny.s, data=fake.s)
display(mod.base);display(mod.e);display(mod.s)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(grid)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
# Sort Weather Data
#years<- c(2010, 2014)
w<-weather %>%
#filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
# Determine HF false springs based on data
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2010), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
# Add Risk and only Two Years
years<-c("2010", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) %>%
filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="2010"] <- "early"
df$si[df$year=="2014"] <- "late"
#df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
# Make a graph!
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2010", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(grid)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
# Sort Weather Data
#years<- c(2010, 2014)
w<-weather %>%
#filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
# Determine HF false springs based on data
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2010), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
# Add Risk and only Two Years
#years<-c("2010", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) #%>%
#filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
#df$si[df$year=="2010"] <- "early"
#df$si[df$year=="2014"] <- "late"
#df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
# Make a graph!
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2010", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual() +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(values=year) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(values=df$year) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(grid)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
# Sort Weather Data
years<- c(1992, 2014)
w<-weather %>%
filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
# Determine HF false springs based on data
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2010), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
# Add Risk and only Two Years
years<-c("1992", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) %>%
filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="1992"] <- "early"
df$si[df$year=="2014"] <- "late"
df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
# Make a graph!
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2010", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(grid)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
# Sort Weather Data
years<- c(2000, 2014)
w<-weather %>%
filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
# Determine HF false springs based on data
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2010), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
# Add Risk and only Two Years
years<-c("2000", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) %>%
filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="2000"] <- "early"
df$si[df$year=="2014"] <- "late"
df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
# Make a graph!
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2010", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(grid)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
# Sort Weather Data
years<- c(2008, 2014)
w<-weather %>%
filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
# Determine HF false springs based on data
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2010), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
# Add Risk and only Two Years
years<-c("2008", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) %>%
filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="2008"] <- "early"
df$si[df$year=="2014"] <- "late"
df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
# Make a graph!
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2010", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2008", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
grid.newpage()
grid.draw(rbind(ggplotGrob(hf), ggplotGrob(gdd), size="first"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(arm)
library(grid)
library(car)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
timeline<-read.csv("input/hf003-06-mean-spp.csv", header=TRUE)
weather<-read.csv("input/WeatherData.csv", header=TRUE)
# Sort Weather Data
years<- c(2008, 2014)
w<-weather %>%
filter(Year %in% years) %>%
filter(JD<=160)
w$gdd <- w$AirT - 0
w$gdd <-ifelse(w$gdd>0, w$gdd, 0)
w$count <- ave(
w$gdd, w$Year,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
w<-rename(w, year=Year)
w<-rename(w, doy=JD)
# Determine HF false springs based on data
w$ten<-ifelse((w$doy >=107 & w$doy <= 145 & w$year == 2008), w$count, 0)
w$four<-ifelse((w$doy >=130 & w$doy <= 158 & w$year == 2014), w$count, 0)
w$grow<-w$ten + w$four
w<-dplyr::select(w, -ten, -four)
w$grow<-ifelse((w$grow==0), NA, w$grow)
w<-na.omit(w)
# Add Risk and only Two Years
years<-c("2008", "2014")
timeline<-timeline %>%
dplyr::select(year, species, bb.jd, l75.jd) %>%
filter(year%in%years)
timeline<-na.omit(timeline)
timeline$risk <- timeline$l75.jd - timeline$bb.jd
df<- timeline %>%
unite(sp.year, species, year, remove=FALSE)
df$si[df$year=="2008"] <- "early"
df$si[df$year=="2014"] <- "late"
df<-na.omit(df)
gdd<- ggplot((w), aes(doy, grow, col=factor(year))) + geom_line(aes(x=doy, y=grow, col=factor(year)), size=4) +
ylab("Growing Degree Days") + xlab("Day of Year") + labs(col="Year")
# Make a graph!
df$code <- reorder(df$species, df$year)
df$ord<- reorder(df$code, df$bb.jd)
df$bb.jd<-as.numeric(as.character(df$bb.jd))
df$l75.jd<-as.numeric(as.character(df$l75.jd))
hf<-ggplot(df, aes(x=ord,ymin = bb.jd, ymax = l75.jd, group=interaction(species, year) )) +
geom_point(aes(y=bb.jd, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=l75.jd, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x=ord,ymin = bb.jd, ymax = l75.jd, col=factor(year)), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("2008", "2014", "Leafout", "Budburst"), values = c("#F8766D", "#00BFC4", "green4", "darkolivegreen3")) +
xlab("Species") +coord_flip() + labs(color="Phenophase and Year")
plot(hf)
grid.newpage()
grid.draw(rbind(ggplotGrob(hf), ggplotGrob(gdd), size="first"))
df$mean<-ave(df$risk, df$year)
df$stand<-ave(df$risk, df$year, FUN = sd)
prep<-df%>%
gather("phenophase", "doy", bb.jd, l75.jd)
grand_union<-full_join(w, prep)
grand<-grand_union%>%
dplyr::select(year, doy, count, species, phenophase, risk, code, AirT)
mod.gdd<-glm(risk~count, data=grand)
display(mod.gdd)
