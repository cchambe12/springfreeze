bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
ile$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
ile$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 5, bet$risk)
betall<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20)
betall
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
library(gridExtra)
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
geom_label(x = 82:97, y = 1:6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotation_custom(df, xmin=82, xmax=97, ymin=1, ymax=6)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 135, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 137, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(ncdf4)
library(Interpol.T)
library(chillR)
library(raster)
library(maptools)
library(rgeos)
library(rgdal)
raster1<-brick("~/Desktop/tn_0.25deg_reg_v16.0.nc", varname="tn", sep="")
eur.temp<-nc_open("~/Desktop/tn_0.25deg_reg_v16.0.nc")
raster1<-brick("//WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc", varname="tn", sep="")
eur.temp <- nc_open("//128.103.155.31/WeldShare/Wolkovich Lab/Budburst Review - Ospree/Climate Data/tn_0.25deg_reg_v15.0.nc")
plot(raster1[[45]])
#raster1 <- setMinMax(raster1)
#length(doy)/365
doy<-ncvar_get(eur.temp, "time")
doy<-as.Date(doy, origin="1950-01-01")
day<-substr(doy, 9,10)
year<-as.numeric(substr(doy, 1, 4))
month<-as.numeric(substr(doy, 6, 7))
timevec<-paste(year, month, day, sep="-")
years.vec<-as.character(timevec, format="Y-%m-%d")
year<-as.numeric(substr(years.vec, 1, 4))
#doy.vec<-as.POSIXlt(names(raster1), format="X%j")
dates<-as.Date(years.vec)
names(raster1)<-dates
empty.raster<-raster1[[1]]
values(empty.raster)<-NA
years<-1950:2016
leaps <- function(x) {
m <- c()
for(i in 1:50) {
year.i <- years[which(((years %% 4 == 0) & (years %% 100 !=0) | (years %% 400 == 0)))]
m <- c(m, year.i)
}
return(m)
}
leap.years<-as.data.frame(leaps(1))
leap.years<-leap.years[!duplicated(leaps(1)),]
#year<-1950:2016
empty.raster<-raster1[[1]]
num.false.spring.year<-list()
#dates.false.spring<-list()
for(i in 1951:1983){#i=1952
print(i)
year.i<-i
is.leap<-ifelse(year.i%in%leap.years,TRUE,FALSE)
sequence.years<-which(year==year.i)
#length(sequence.years)
raster.sub<-subset(raster1,sequence.years)
#numnonas<-sum(!is.na(values(raster.sub[[1]])))
rast.array<-array(75,dim=c(ncell(raster.sub),181))
if(is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
if(!is.leap){
for(j in 75:181){ ## you need to change
print(paste(year.i,j))
rast.array[,j]<-values(raster.sub[[j]])
}
}
#dates.fs<-apply(rast.array, 1, function(x){ifelse(x<=-2.2, x, 0)})
num.false.spring<-apply(rast.array,1,function(x){sum(ifelse(x<=-2.2,1,0))})
non.nas.ids<-which(!is.na(num.false.spring))
#values(emp.rast)<-NA
values(empty.raster)<- NA
#non.nas.dates<-which(!is.na(dates.fs))
#plot(raster1[[1]])
values(empty.raster)[non.nas.ids]<- num.false.spring[!is.na(num.false.spring)]
#values(empty.raster)[non.nas.dates]<- dates.fs[!is.na(dates.fs)]
#plot(empty.raster)
#dates.false.spring[[i]]<- empty.raster
num.false.spring.year[[i]]<-empty.raster
}
length(num.false.spring.year)
final.raster.preCC<-stack(unlist(num.false.spring.year))
summed.false.springs.preCC<-calc(final.raster.preCC,sum)
fs.years.pre<-calc(final.raster.preCC, function(x) {sum(ifelse(x>=1,1,0))})
writeRaster(fs.years.pre,"~/Documents/git/regionalrisk/analyses/output/fs.30.pre", bylayer=TRUE,format="GTiff")
install.packages("gdal")
library(gdal)
library(rgdal)
install.packages("gdalUtils")
library("gdalUtils", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgeos", repos = "http://R-Forge.R-project.org", type = "source")
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", type="source")
library(rgdal)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
rgdal::writeRaster(fs.years.post,"~/Documents/git/regionalrisk/analyses/output/fs.postCC", bylayer=TRUE,format="GTiff")
install.packages("rgeos", type="source")
install.packages("rgeos", type = "source")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages(c('rgdal','rgeos'),repos="http://www.stats.ox.ac.uk/pub/RWin")
library("rgeos", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:rgeos", unload=TRUE)
install.packages("rgdal")
install.packages("installr")
updateR()
install.packages("updateR")
version
if(!require(installr)) {
install.packages("installr");
require(installr)
}
library(installr)
version
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
library(lme4)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
########### NEW EDITION - CAT 26 May 2017 ####################
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
View(dx)
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
View(dx)
dx<-dx%>%dplyr::select(-site, -ind)
dx$mean<-ave(dx$bday, dx$species, dx$treatcode)
dx$sd<-ave(dx$bday, dx$species, dx$treatcode, FUN=sd)
dx<-dx%>%
group_by(mean, species, sd)%>%
arrange(species)%>%
filter(row_number()==1)
dx<-dx%>%group_by(species, treatcode) %>% arrange(species, desc(treatcode))
dx$code<-reorder(dx$species, dx$bday)
View(dx)
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
########### NEW EDITION - CAT 26 May 2017 ####################
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%dplyr::select(-site, -ind)
View(d)
View(dx)
dx$dvr<-dx$lday - dx$bday
View(d)
View(dx)
dx$mean<-ave(dx$dvr, dx$species, dx$treatcode)
dx$sd<-ave(dx$dvr, dx$species, dx$treatcode, FUN=sd)
dx<-dx%>%
group_by(mean, species, sd)%>%
arrange(species)%>%
filter(row_number()==1)
View(dx)
dx<-dx%>%group_by(species, treatcode) %>% arrange(species, desc(treatcode))
dx$code<-reorder(dx$species, dx$bday)
chill<-ggplot(dx, aes(x = code,ymin = bday, ymax = lday, group=interaction(species, treatcode) )) +
geom_point(aes(y=bday, col="forestgreen"), position = position_dodge(.5)) + geom_point(aes(y=lday, col="darkgreen"), position = position_dodge(.5)) +
geom_linerange(aes(x = code,ymin = bday, ymax = lday, col=treatcode), position=position_dodge(.5)) +  ylab("Day of Year") +
scale_color_manual(labels = c("CS0","Leafout", "Budburst", "WL1"), values = c("purple3", "green4", "darkolivegreen3", "royalblue3")) +
xlab("Species") +coord_flip()
plot(chill)
df<-dx%>%dplyr::select(species, treatcode, mean, sd)
df<-spread(df, treatcode, mean)
View(df)
df$diff<-as.numeric(df$CS0-df$WL1)
View(df)
View(df)
dfx<-df%>% dplyr::select(-sd)%>%spread(df, treatcode, mean)
dfx<-df%>% dplyr::select(-sd)%>%spread(treatcode, mean)
df<-dx%>%dplyr::select(species, treatcode, mean, sd)
dfx<-df%>% dplyr::select(-sd)%>%spread(treatcode, mean)
View(dfx)
dfx<-dfx[!duplicated(dfx),]
View(dfx)
dfx<-dfx[!is.na(dfx),]
View(dfx)
dfx<-dfx[!is.na(dfx$WL1),]
View(dfx)
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
########### NEW EDITION - CAT 26 May 2017 ####################
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
small.spp<-dx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dx<-dx%>% filter(species %in% spp)
dx<-dx%>%dplyr::select(-site, -ind)
dx$dvr<-dx$lday - dx$bday
dx$mean<-ave(dx$dvr, dx$species, dx$treatcode)
dx$sd<-ave(dx$dvr, dx$species, dx$treatcode, FUN=sd)
dx<-dx%>%
group_by(mean, species, sd)%>%
arrange(species)%>%
filter(row_number()==1)
dx<-dx%>%group_by(species, treatcode) %>% arrange(species, desc(treatcode))
dx$code<-reorder(dx$species, dx$bday)
df<-dx%>%dplyr::select(species, treatcode, mean, sd)
dfx<-df%>% dplyr::select(-sd)%>%spread(treatcode, mean)
dfx$diff<-as.numeric(df$CS0-df$WL1)
dfx<-dfx[!is.na(dfx$WL1),]
View(dfx)
View(df)
for(i in c(1:nrow(dfx))) {
for(j in c(1:nrow(df)))
dfx$sd[i]<-ifelse(dfx$species[i]==df$species[j], df$sd[j], dfx$sd[i])
}
dfx$sd<-NA
for(i in c(1:nrow(dfx))) {
for(j in c(1:nrow(df)))
dfx$sd[i]<-ifelse(dfx$species[i]==df$species[j], df$sd[j], dfx$sd[i])
}
View(dfx)
bb<-dx%>%dplyr::select(species, treatcode, bday)%>%filter(treatcode=="CS0")
#bb<-bb[!duplicated(bb$species),]
df<-cbind(dfx, bb)
dfx$code<-reorder(dfx$species, dfx$bday)
#bb<-bb[!duplicated(bb$species),]
dfx<-cbind(dfx, bb)
dfx$code<-reorder(dfx$species, dfx$bday)
diff<-ggplot(dfx, aes(x=factor(code), y=diff)) + geom_point() +ylab("Difference in DVR between Treatments") + xlab("Species")
diff
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
########### NEW EDITION - CAT 26 May 2017 ####################
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
small.spp<-dx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dx<-dx%>% filter(species %in% spp)
dx<-dx%>%dplyr::select(-site, -ind)
dx$dvr<-dx$lday - dx$bday
dx$mean<-ave(dx$dvr, dx$species, dx$treatcode)
dx$sd<-ave(dx$dvr, dx$species, dx$treatcode, FUN=sd)
dx<-dx%>%
group_by(mean, species, sd)%>%
arrange(species)%>%
filter(row_number()==1)
dx<-dx%>%group_by(species, treatcode) %>% arrange(species, desc(treatcode))
dx$code<-reorder(dx$species, dx$bday)
df<-dx%>%dplyr::select(species, treatcode, mean, sd)
dfx<-df%>% dplyr::select(-sd)%>%spread(treatcode, mean)
dfx$diff<-as.numeric(df$CS0-df$WL1)
dfx<-dfx[!is.na(dfx$WL1),]
dfx$sd<-NA
for(i in c(1:nrow(dfx))) {
for(j in c(1:nrow(df)))
dfx$sd[i]<-ifelse(dfx$species[i]==df$species[j], df$sd[j], dfx$sd[i])
}
bb<-dx%>%dplyr::select(species, treatcode, bday)%>%filter(treatcode=="CS0")
#bb<-bb[!duplicated(bb$species),]
dfx<-cbind(dfx, bb)
dfx$code<-reorder(dfx$species, dfx$bday)
View(dfx)
dfx$diff<-as.numeric(dfx$CS0-dfx$WL1)
diff<-ggplot(dfx, aes(x=factor(code), y=diff)) + geom_point() +ylab("Difference in DVR between Treatments") + xlab("Species")
diff
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# Set Working Directory
setwd("~/Documents/git/springfreeze")
d<-read.csv("input/Budburst.clean.csv",header=TRUE)
tx<-c("CS0", "WL1")
dx<- d %>%
dplyr::select(ind, treatcode, lday, bday, site) %>%
filter(treatcode %in% tx)
## Omit Viburnum due to budburst date issues
dx<-na.omit(dx)
dx$species<-substr(dx$ind, 1, 6)
dx<-dx%>%filter(species!="VIBCAS")%>%filter(species!="VIBLAN") # all entries for two species have the same budburst and leafout day, removed because probably from error
small.spp<-dx %>% dplyr::select(species, treatcode) %>% filter(treatcode=="WL1")
spp<-unique(small.spp$species)
dx<-dx%>% filter(species %in% spp)
dx<-dplyr::select(dx, -ind, -site)
### Start determining risk for each treatment
dxx<-dx
dxx$risk<-dxx$lday-dxx$bday
dxx$dvr<-ave(dxx$risk, dxx$species, dxx$treatcode)
dxx$dvr.sd<-ave(dxx$risk, dxx$species, dxx$treatcode, FUN=sd)/sqrt(length(unique(dxx$dvr)))
dxx<-dplyr::select(dxx, species, treatcode, dvr, dvr.sd)
dxx<-dxx[!duplicated(dxx),]
dxx$tx.sd<-paste(dxx$treatcode, "se", sep="_")
dm<-dxx%>%dplyr::select(species, treatcode, dvr)%>%spread(treatcode, dvr)
ds<-dxx%>%dplyr::select(species, tx.sd, dvr.sd)%>%spread(tx.sd, dvr.sd)
dxx<-inner_join(dm, ds)
dxx$diff<-dxx$CS0-dxx$WL1
dxx$diff.sd<-sqrt((dxx$CS0_se)^2+(dxx$WL1_se)^2)
df<-dx%>%filter(treatcode=="WL1")%>%dplyr::select(treatcode, bday, species)
df$bday<-ave(df$bday, df$species, df$treatcode)
df<-df[!duplicated(df),]
df$species<-ifelse(df$species=="ILEMUC", "I. mucronata", df$species)
df$species<-ifelse(df$species=="ACEPEN", "A. pensylvanicum", df$species)
df$species<-ifelse(df$species=="BETALL", "B.alleghaniensis", df$species)
df$species<-ifelse(df$species=="BETPAP", "B.papyrifera", df$species)
df$species<-ifelse(df$species=="ACERUB", "A.rubrum", df$species)
df$species<-ifelse(df$species=="POPGRA", "P.grandidentata", df$species)
df$species<-ifelse(df$species=="QUERUB", "Q.rubra", df$species)
df$species<-ifelse(df$species=="ACESAC", "A.saccharum", df$species)
df$species<-ifelse(df$species=="FAGGRA", "F.grandifolia", df$species)
df$code<-reorder(df$species, df$bday)
dxx$code<-df$code
diff<-ggplot(dxx, aes(x=factor(code), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*"Difference in DVR between treatments")) + coord_cartesian(ylim=c(0,25)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10))
plot(diff)
diff<-ggplot(dxx, aes(x=factor(code), y=diff)) + geom_point() +
geom_linerange(aes(ymin=diff-diff.sd, ymax=diff+diff.sd), alpha=0.3) +
ylab(expression(Delta*"in DVR between treatments")) + coord_cartesian(ylim=c(0,25)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x=element_blank(),
axis.text.x = element_text(face = "italic", angle=45, vjust=0.5), axis.text=element_text(size=10))
plot(diff)
View(dxx)
### Start determining risk for each treatment
dxx<-dx
dxx$risk<-dxx$lday-dxx$bday
View(dxx)
dxx$dvr<-ave(dxx$risk, dxx$species, dxx$treatcode)
dxx$dvr.sd<-ave(dxx$risk, dxx$species, dxx$treatcode, FUN=sd)/sqrt(length(unique(dxx$dvr)))
dxx<-dplyr::select(dxx, species, treatcode, dvr, dvr.sd)
dxx<-dxx[!duplicated(dxx),]
View(dxx)
### Start determining risk for each treatment
dxx<-dx
dxx$risk<-dxx$lday-dxx$bday
dxx$dvr<-ave(dxx$risk, dxx$species, dxx$treatcode)
View(dxx)
dxx$dvr.sd<-ave(dxx$risk, dxx$species, dxx$treatcode, FUN=sd)/sqrt(length(unique(dxx$dvr)))
dxx<-dplyr::select(dxx, species, treatcode, dvr, dvr.sd)
dxx<-dxx[!duplicated(dxx),]
dxx$tx.sd<-paste(dxx$treatcode, "se", sep="_")
dm<-dxx%>%dplyr::select(species, treatcode, dvr)%>%spread(treatcode, dvr)
ds<-dxx%>%dplyr::select(species, tx.sd, dvr.sd)%>%spread(tx.sd, dvr.sd)
dxx<-inner_join(dm, ds)
dxx$diff<-dxx$CS0-dxx$WL1
dxx$diff.sd<-sqrt((dxx$CS0_se)^2+(dxx$WL1_se)^2)
df<-dx%>%filter(treatcode=="WL1")%>%dplyr::select(treatcode, bday, species)
df$bday<-ave(df$bday, df$species, df$treatcode)
df<-df[!duplicated(df),]
View(df)
