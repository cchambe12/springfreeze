conds <- r_condition[speciesBETPEN, mat.z]
check <- orig.full %>%
spread_draws(species[elev.z, cc.z, term])
library(dplyr)
check <- orig.full %>%
spread_draws(species[elev.z, cc.z, term])
varies <- get_variables(orig.full)
varies
check <- orig.full %>%
spread_draws(b_speciesBETPEN[elev.z, cc.z, term]) %>%
spread_draws(b_speciesFRAEXC[elev.z, cc.z, term])
check <- orig.full %>%
spread_draws(b_speciesBETPEN[elev.z, term]) %>%
spread_draws(b_speciesFRAEXC[elev.z, term])
check <- orig.full %>%
spread_draws(b_elev.z[condition, term]) %>%
spread_draws(b_cc.z[condition, term])
check <- orig.full %>%
add_fitted_draws()
check <- add_fitted_draws(orig.full)
check <- bb %>% add_fitted_draws(orig.full)
View(check)
head(check)
check <- bb %>% add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
dplyr::select(species, cc, elev)
check <- bb %>% add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN"))
unique(check$species)
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev)
View(foo)
foo <- foo[!duplicated(foo),]
colnames(check)
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev, .value)
foo <- foo[!duplicated(foo),]
View(foo)
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=cc)) + geom_line()
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=as.factor(cc))) + geom_line(aes(col=species, alpha=as.factor(cc)), stat="smooth", method="lm")
goober <- posterior_interval(orig.full, prob=0.5)
View(goober)
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
colnames(check)
ggplot(foo, aes(x=elev, y=.value, col=species, alpha=as.factor(cc))) + geom_line(aes(col=species, alpha=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
ggplot(foo, aes(x=elev, y=.value, col=species, line_type=as.factor(cc))) + geom_line(aes(col=species, line_type=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
ggplot(foo, aes(x=elev, y=.value, col=species, linetype=as.factor(cc))) + geom_line(aes(col=species, linetype=as.factor(cc)),
stat="smooth", method="lm", se=TRUE, span=0.5)
list_of_draws <- extract(orig.full)
## Libraries
library(rstan)
list_of_draws <- extract(orig.full)
load("/Users/catchamberlain/Downloads/orig_full_itrxns.Rdata")
list_of_draws <- extract(orig.full)
list_of_draws <- extract_fit(orig.full)
list_of_draws <- brms::extract_fit(orig.full)
library(brms)
list_of_draws <- brms::extract_fit(orig.full)
list_of_draws <- brms::extract_draws(orig.full)
print(names(list_of_draws))
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
library(dplyr)
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
library(tidybayes)
library(broom)
gather <- bb %>% gather_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(elev.z, cc.z, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(`b_elev.z`, `b_cc.z`, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
gather <- orig.full %>% gather_draws(b_elev.z, b_cc.z, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
check <- bb %>% add_fitted_draws(orig.full, prob=0.5) %>%
filter(species==c("FRAEXC", "BETPEN"))
foo <- ungroup(check) %>%
dplyr::select(species, cc, elev, .value)
bb %>%
data_grid(elev) %>%
add_fitted_draws(orig.full) %>%
ggplot(aes(x = .value, y = elev)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
ggplot(aes(x = .value, y = elev)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(check$species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, group=cc)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, group=cc, col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
stat_pointintervalh(.width = c(.25, .75))
bb %>%
add_fitted_draws(orig.full) %>%
filter(species==c("FRAEXC", "BETPEN")) %>%
ggplot(aes(x = .value, y = elev, linetype=as.factor(cc), col=species)) +
geom_line(.width = c(.25, .75), aes(col=species, linetype=as.factor(cc)),
stat="smooth", method="lm")
(46.1+50.3+38.1+44.7+43.7+32+41.7+33.7)/8
(59+58.1+38.7+37.1)/4
(40.2+46.675+40.5+44.575+44.525+45.325+49.675+48.325)/8
(49.425+39.275+45.125+39.825)/4
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load libraries
library(RColorBrewer)
library(egg)
# Setting working directory
setwd("~/Documents/git/chillfreeze/analyses/output")
chill.stan <- read.csv("clean_dvr_60dayoutput.csv", header=TRUE)
labs <- c("SALPUR"=expression(paste(italic("Salix purpurea"))),
"CORRAC"=expression(paste(italic("Cornus racemosa"))),
"BETPAP"=expression(paste(italic("Betula papyrifera"))),
"BETPOP"=expression(paste(italic("Betula populifolia"))),
"ALNRUG"=expression(paste(italic("Alnus incana"))),
"SORAME"=expression(paste(italic("Sorbus americana"))),
"ACESAC"=expression(paste(italic("Acer saccharinum"))),
"VIBDEN"=expression(paste(italic("Viburnum dentatum"))),
"FAGGRA"=expression(paste(italic("Fagus grandifolia"))),
"NYSSYL"=expression(paste(italic("Nyssa sylvatica"))))
cols <- colorRampPalette(brewer.pal(10,"Paired"))(10)
# to use for now until all species leafout
values <- c( "SALPUR"="#A6CEE3", "CORRAC"="#1F78B4", "BETPAP"="#B2DF8A", "BETPOP"="#33A02C",
"ALNRUG"="#FB9A99", "SORAME"="#E31A1C", "ACESAC"="#FDBF6F",
"VIBDEN"="#FF7F00", "FAGGRA"="#CAB2D6", "NYSSYL"="#6A3D9A")
species_order <- c("SALPUR", "CORRAC", "BETPAP", "BETPOP", "ALNRUG", "SORAME", "ACESAC", "VIBDEN", "FAGGRA", "NYSSYL")
fourweeks <- subset(chill.stan, chill.stan$chill==1)
fourweeks.meas <- fourweeks[!is.na(fourweeks$ht.diff),]
#cols <- colorRampPalette(brewer.pal(8,"Set2"))(8)
height<- ggplot(fourweeks.meas, aes(x=factor(species, levels = species_order), y=ht.diff, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank(),
legend.position = "none") + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Height Difference (cm)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
chlorophyll<- ggplot(fourweeks.meas, aes(x=factor(species, levels = species_order), y=mg.cm2, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Chlorophyll Content\n (mg/cm2)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
sixweeks <- subset(chill.stan, chill.stan$chill==2)
#sixweeks <- sixweeks[!is.na(sixweeks$ht.diff),]
height.six<- ggplot(sixweeks, aes(x=factor(species, levels = species_order), y=ht.diff, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank(),
legend.position = "none") + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Height Difference (cm)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
chlorophyll.six<- ggplot(sixweeks, aes(x=factor(species, levels = species_order), y=mg.cm2, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species)), outlier.shape=NA) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
ylab("Chlorophyll Content\n (mg/cm2)") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
quartz()
ggarrange(height, chlorophyll, ncol=2)
#### More plots on DVR
#fourweeks.dvr <- subset(chill.stan, chill.stan$chill==1)
dvr<- ggplot(fourweeks, aes(x=factor(species, levels = species_order), y=dvr, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species))) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank(),
legend.position = "none") + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 50)) +
ylab("Duration of \nVegetative Risk") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
annotate("text", x = 8, y = 47, label = "4 Weeks of Chilling", family="Helvetica", size=3, fontface="bold") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
#sixweeks.dvr <- subset(chill.stan, chill.stan$chill==2)
dvr.six<- ggplot(sixweeks, aes(x=factor(species, levels = species_order), y=dvr, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species))) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0,
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank(), axis.ticks.x = element_blank(), axis.text.x = element_blank()) + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 50)) +
ylab("Duration of \nVegetative Risk") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
annotate("text", x = 8, y = 47, label = "6 Weeks of Chilling", family="Helvetica", size=3, fontface="bold") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
eightweeks <- subset(chill.stan, chill.stan$chill==3)
dvr.eight<- ggplot(eightweeks, aes(x=factor(species, levels = species_order), y=dvr, alpha=tx)) + geom_boxplot(aes(alpha=as.factor(tx), fill=as.factor(species), col=as.factor(species))) +
theme(legend.text=element_text(size=7), legend.title = element_text(size=9), legend.background = element_rect(linetype="solid", color="grey", size=0.5),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
text=element_text(family="Helvetica"),
legend.text.align = 0, axis.text.x = element_text(face = "italic", angle=45, hjust=1),
legend.key = element_rect(colour = "transparent", fill = "white"),
axis.title.x = element_blank(),
legend.position = "none") + # top, right, bottom, left
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 50)) +
ylab("Duration of \nVegetative Risk") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Species", values=values,
labels=labs) +
scale_color_manual(name="Species", values=values,
labels=labs) + scale_x_discrete(labels=labs) +
annotate("text", x = 8, y = 47, label = "8 Weeks of Chilling", family="Helvetica", size=3, fontface="bold") +
guides(alpha=guide_legend(override.aes=list(fill=hcl(c(15,195),100,0,alpha=c(0.2,0.7)))), col=FALSE, fill=FALSE)
quartz()
ggarrange(dvr, dvr.six, dvr.eight, nrow=3)
scatter <- ggplot(fourweeks, aes(x=budburst, y=dvr)) + geom_point(aes(col=as.factor(tx))) +
theme_classic() + geom_smooth(aes(col=as.factor(tx), fill=as.factor(tx)), method="lm") +
scale_y_continuous(expand = c(0, 0)) + theme(legend.position = "none") +
ylab("Duration of Vegetative Risk") + xlab("Day of Budburst") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_color_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring")) +
coord_cartesian(xlim=c(0,80), ylim=c(0, 60), expand=c(0,0))
scatter.six <- ggplot(sixweeks, aes(x=budburst, y=dvr)) + geom_point(aes(col=as.factor(tx))) +
theme_classic() + geom_smooth(aes(col=as.factor(tx), fill=as.factor(tx)), method="lm") +
scale_y_continuous(expand = c(0, 0)) + theme(legend.position = "none") +
ylab("Duration of Vegetative Risk") + xlab("Day of Budburst") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_color_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring"))+
coord_cartesian(xlim=c(0,80), ylim=c(0, 60), expand=c(0,0))
scatter.eight <- ggplot(eightweeks, aes(x=budburst, y=dvr)) + geom_point(aes(col=as.factor(tx))) +
theme_classic() + geom_smooth(aes(col=as.factor(tx), fill=as.factor(tx)), method="lm") +
scale_y_continuous(expand = c(0, 0)) +
ylab("Duration of Vegetative Risk") + xlab("Day of Budburst") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_color_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring"))+
coord_cartesian(xlim=c(0,80), ylim=c(0, 60), expand=c(0,0))
quartz()
ggarrange(scatter, scatter.six, scatter.eight, ncol=3)
quartz()
ggarrange(dvr, dvr.six, dvr.eight, nrow=3)
quartz()
ggarrange(dvr, dvr.six, dvr.eight, nrow=3)
scatter <- ggplot(fourweeks, aes(x=budburst, y=dvr)) + geom_point(aes(col=as.factor(tx))) +
theme_classic() + geom_smooth(aes(col=as.factor(tx), fill=as.factor(tx)), method="lm") +
scale_y_continuous(expand = c(0, 0)) + theme(legend.position = "none") +
ylab("Duration of Vegetative Risk") + xlab("Day of Budburst") +
scale_alpha_manual(name="Treatment", values=c(0.2, 0.7),
labels=c("0"="Control", "1"="False Spring")) +
scale_color_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring")) +
scale_fill_manual(name="Treatment", values=c("grey", "royalblue"),
labels=c("0"="Control", "1"="False Spring")) +
coord_cartesian(xlim=c(0,80), ylim=c(0, 60), expand=c(0,0))
quartz()
scatter
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load Libraries
library(ggplot2)
library(gridExtra)
if(FALSE){
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
write.csv(ile, file = "~/Documents/git/springfreeze/output/ilemuc.csv", row.names = FALSE)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
write.csv(bet, file = "~/Documents/git/springfreeze/output/betall.csv", row.names = FALSE)
}
setwd("~/Documents/git/springfreeze/")
ile<-read.csv("output/ilemuc.csv",header=TRUE)
bet<-read.csv("output/betall.csv",header=TRUE)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=0.5
, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 97.5, y = 12, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank(), legend.key=element_blank(),plot.title = element_text(family="Helvetica")) + scale_y_discrete(limits=c("", "low",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_point(x=96, y=10, shape=15, col="green2") + geom_point(x=99, y=10, shape=17, col="green4") #+
#ggtitle("Defining the Duration of Vegetative Risk")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=0.5, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 132.5, y = 11.5, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank()) + scale_y_discrete(limits=c("","low", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_point(x=124, y=10, shape=15, col="green2") + geom_point(x=140, y=10, shape=17, col="green4")
quartz()
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=0.5
, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 97.5, y = 12, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank(), legend.key=element_blank(),plot.title = element_text(family="Helvetica")) + scale_y_discrete(limits=c("", "low",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_point(x=96, y=10, shape=15, col="green2") + geom_point(x=99, y=10, shape=17, col="green4") +
geom_segment(x=96, xend=99, y=10, yend=10, col="green3")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=0.5, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 132.5, y = 11.5, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank()) + scale_y_discrete(limits=c("","low", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_point(x=124, y=10, shape=15, col="green2") + geom_point(x=140, y=10, shape=17, col="green4") +
geom_segment(x=124, xend=140, y=10, yend=10, col="green3")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 97.5, y = 12, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank(), legend.key=element_blank(),plot.title = element_text(family="Helvetica")) + scale_y_discrete(limits=c("", "low",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_segment(x=96, xend=99, y=10, yend=10, col="green3") +
geom_point(x=96, y=10, shape=15, col="green2") + geom_point(x=99, y=10, shape=17, col="green4")
, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 97.5, y = 12, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank(), legend.key=element_blank(),plot.title = element_text(family="Helvetica")) + scale_y_discrete(limits=c("", "low",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_segment(x=96, xend=99, y=10, yend=10, col="green3") +
geom_point(x=96, y=10, shape=15, col="green2") + geom_point(x=99, y=10, shape=17, col="green4")
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=0.5
, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 97.5, y = 12, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank(), legend.key=element_blank(),plot.title = element_text(family="Helvetica")) + scale_y_discrete(limits=c("", "low",  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_segment(x=96, xend=99, y=10, yend=10, col="green3") +
geom_point(x=96, y=10, shape=15, col="green2") + geom_point(x=99, y=10, shape=17, col="green4")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=0.5, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis", fontface = "italic") +
annotate("text", x = 90, y = 4.5, label = "False", fontface="bold") +
annotate("text", x = 90, y = 2.05, label = "Spring", fontface="bold") +
annotate("text", x = 132.5, y = 11.5, label = "Duration of Vegetative Risk") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), axis.ticks.y = element_blank()) + scale_y_discrete(limits=c("","low", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "high"))+
geom_segment(x=124, xend=140, y=10, yend=10, col="green3") +
geom_point(x=124, y=10, shape=15, col="green2") + geom_point(x=140, y=10, shape=17, col="green4") +
quartz()
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(ggplot2)
## Let's make the data...
d<- data.frame(study=c("Sorbus aucuparia - 50% (Lenz et al., 2016)", "Prunus avium - 50% (Lenz et al., 2016)", "Tilia platyphyllos - 50% (Lenz et al., 2016)",
"Acer pseudoplatanus - 50% (Lenz et al., 2016)", "Fagus sylvatica - 50% (Lenz et al., 2016)", "All species - hard freeze (Schwartz, 1993))",
"All species - soft freeze (Augspurger, 2013)", "Eucalyptus pauciflora (Barker et al., 2005)", "All species (Peterson & Abatzoglou, 2014)",
"All species (Cannell & Smith, 1986)", "Vaccinium spp. (Longstroth, 2012)", "Rosaceae - 10% (Longstroth, 2013)", "Rosaceae - 90% (Longstroth, 2013)",
"Wheat - 10 to 90% (Barlow et al., 2015)", "Wheat - 100% (Barlow et al., 2015)", "Rice - 100% (Sanchez et al., 2013)", "Corn - 100% (Sanchez et al., 2013)", "Wheat - 100% (Sanchez et al., 2013)"),
Phase=c("Vegetative", "Vegetative", "Vegetative", "Vegetative", "Vegetative", "Both", "Both", "Both", "Both", "Both",
"Floral", "Vegetative", "Vegetative", "Floral", "Vegetative", "Vegetative", "Vegetative", "Vegetative"),
Sector=c("Ecological", "Agronomic", "Ecological", "Ecological", "Ecological", "Ecological",
"Ecological", "Ecological", "Ecological", "Agronomic", "Agronomic", "Agronomic", "Agronomic",
"Agronomic", "Agronomic", "Agronomic", "Agronomic", "Agronomic"),
temperature=c(-7.4, -8.5, -7.4, -6.7, -4.8, -2.2, -1.7, -5.8, -2.2, 2, -2.2, -7.2, -13.3, -4.5,
-5.5, 4.7, -1.8, -17.2),
sd=c(4, 5, 3, 4, 3, 0, 0, 0, 0, 1, 2.2, 0, 0, 0.5, 1.5, 1.3, 1.9, 1.2))
d$alph<-ifelse(d$Sector=="Agronomic", 1, 2)
d$dataset<-reorder(d$study, d$alph)
d$dataset <- factor(d$dataset, levels = d$dataset[order(d$Sector, d$temperature)])
my.xlab = expression(paste("Temperature Threshold ", degree,"C"))
temp<-ggplot(d, aes(x=dataset, y=temperature, col=Sector)) +
geom_linerange(aes(ymin=temperature-sd, ymax=temperature+sd), alpha=0.3) +
geom_point(aes(shape=Phase)) + ylab(my.xlab) + theme(axis.title.y=element_blank()) +
geom_hline(yintercept=0, linetype=2) + geom_vline(xintercept = 10.5, linetype=4) +
annotate("text", y=-15, x= 10, label="Agronomic", family="Helvetica", size=3, fontface="bold") +
annotate("text", y=-15, x= 18, label="Ecological", family="Helvetica", size=3, fontface="bold") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"), legend.key=element_blank(), plot.title = element_text(family="Helvetica")) +
ylim(c(-20, 10)) + scale_color_manual(name="Sector", values=c("navyblue", "red4"), labels=c("Ecological", "Agronomic"))
temp<- temp + scale_x_discrete(labels=c("All species - soft freeze (Augspurger, 2013)"="All species - soft freeze (Augspurger, 2013)",
"All species (Peterson & Abatzoglou, 2014)"="All species (Peterson & Abatzoglou, 2014)",
"All species - hard freeze (Schwartz, 1993))"="All species - hard freeze (Schwartz, 1993))",
"Fagus sylvatica - 50% (Lenz et al., 2016)" = expression(paste(italic("Fagus sylvatica"),  "- 50% (Lenz et al., 2016)")),
"Eucalyptus pauciflora (Barker et al., 2005)"=expression(paste(italic("Eucalyptus pauciflora"), "(Barker et al., 2005)")),
"Acer pseudoplatanus - 50% (Lenz et al., 2016)"=expression(paste(italic("Acer pseudoplatanus"), "- 50% (Lenz et al., 2016)")),
"Tilia platyphyllos - 50% (Lenz et al., 2016)"=expression(paste(italic("Tilia platyphyllos"), "- 50% (Lenz et al., 2016)")),
"Sorbus aucuparia - 50% (Lenz et al., 2016"=expression(paste(italic("Sorbus aucuparia"), "- 50% (Lenz et al., 2016")),
"Prunus avium - 50% (Lenz et al., 2016)"=expression(paste(italic("Prunus avium"), "- 50% (Lenz et al., 2016)")),
"Rice - 100% (Sanchez et al., 2013)"="Rice - 100% (Sanchez et al., 2013)",
"All species (Cannell & Smith, 1986)"="All species (Cannell & Smith, 1986)",
"Corn - 100% (Sanchez et al., 2013)"="Corn - 100% (Sanchez et al., 2013)",
"Vaccinium spp. (Longstroth, 2012)"=expression(paste(italic("Vaccinium spp."), "(Longstroth, 2012)")),
"Wheat - 10 to 90% (Barlow et al., 2015)"="Wheat - 10 to 90% (Barlow et al., 2015)",
"Wheat - 100% (Barlow et al., 2015)"="Wheat - 100% (Barlow et al., 2015)",
"Rosaceae - 10% (Longstroth, 2013)"=expression(paste(italic("Rosaceae"), "- 10% (Longstroth, 2013)")),
"Rosaceae - 90% (Longstroth, 2013)"=expression(paste(italic("Rosaceae"), "- 90% (Longstroth, 2013)")),
"Wheat - 100% (Sanchez et al., 2013)"="Wheat - 100% (Sanchez et al., 2013)"))
temp<-temp +coord_flip() #+ ggtitle("Descrepancies in Defining \nFalse Spring Temperatures")
quartz()
plot(temp)
