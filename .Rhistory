mydata <- read.csv("fish.species.csv" , header=TRUE)
attach(mydata)
install.packages("swirl")
library("swirl")
swirl()
library(vegan)
install.packages("swirl")
swirl()
library(swirl)
swirl()
?picante
help(picante)
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
# Install Packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("ggplot2", "plyr", "dplyr", "tidyr", "tidytext",
"purrr", "Hmisc", "lme4","rstan","shinystan","picante")
ipak(packages)
?fixef
?ranef
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rstan, type="source")
install.packages("rstan, type= "source")
install.packages("rstan", type= "source")
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
rstan:::rstudio_stanc("Documents/Temporal Ecology/Stanleyi/nesting_ex.stan")
rm(list=ls())
options(stringsAsFactors = FALSE)
# Load Libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# Integrate Phenology Data and compare methodologies
# Set Working Directory
setwd("~/Documents/git/treespotters/Data")
record<-read.csv("December2016.csv",header=TRUE,sep=",")
# Blend
blend<-record %>%
select(Route, first, second, third) %>%
gather(Year, Recordings, -Route) %>%
arrange(Route)
# Bar Plot
ggplot(blend,aes(x=Route,y=Recordings, fill=factor(Year))) +
geom_bar(stat = "identity" , position="dodge") +
xlab("Route")+ylab("Number of Recordings") +
scale_fill_discrete(labels=c("2014", "2015", "2016"),
name="Number of Recordings")
# Volunteer Data and Retention Rate
observers<-read.csv("December2016.csv",header=TRUE,sep=",")
attach(observers)
retention<- observers%>%
select(ObservedBy_Person_ID,Observation_Date) %>%
group_by(ObservedBy_Person_ID) %>%
summarize_each(funs(first))
date <- as.Date(
retention$Observation_Date, "%m/%d/%y")
rate<- retention %>%
filter(date >= '2016-01-01')
# Demographics
#setwd("~/Documents/Temporal Ecology/TreeSpotters")
#demo<-read.csv("volunteer.csv",header=TRUE,sep=",")
#date2 <- as.Date(
#demo$Last_Observation, "%m/%d/%y")
#area<-demo %>%
#filter(date2 >= "2016/01/01") %>%
#select(Area, Last_Observation)
#count<- count(area,Area)
#qplot(Area,n, data = count, geom = "boxplot", color=Area)
# How many observers per individual and species
obs.all<- record %>%
select(Observation_Date, Phenophase_Status, Common_Name,
Phenophase_Description,Plant_Nickname, Day_of_Year,
Species_ID, ObservedBy_Person_ID)
date.obs <- as.Date(
obs.all$Observation_Date, "%m/%d/%y")
obs.all1 <- obs.all %>%
filter(date.obs >= "2016/01/01") %>%
group_by(Plant_Nickname,ObservedBy_Person_ID)%>%
arrange(Plant_Nickname)%>%
filter(row_number()==1)
obs.count<-as.data.frame(table(obs.all1$Plant_Nickname)) %>%
rename(Plant_Nickname = Var1) %>%
rename(n = Freq)
obs<-full_join(obs.count,obs.all1, by="Plant_Nickname")
qplot(Common_Name, n, data = obs,
geom = "boxplot", color=Common_Name) +
xlab("Species")+ylab("# of Observers")
# Observers per Tree
total<- record %>%
select (Observation_Date, Common_Name, Plant_Nickname, Day_of_Year,
Observation_ID)
date.tot <- as.Date(
total$Observation_Date, "%m/%d/%y")
total1 <- total %>%
filter(date.tot >= "2016/01/01") %>%
group_by(Plant_Nickname,Observation_ID)%>%
select(Day_of_Year,Plant_Nickname,Observation_ID, Common_Name)
total.count<-as.data.frame(table(total1$Plant_Nickname)) %>%
rename(Plant_Nickname = Var1) %>%
rename(n = Freq)
tot<-full_join(total.count,total1, by = "Plant_Nickname")%>%
group_by(Plant_Nickname)%>%
filter(row_number()==1) %>%
select(-Observation_ID)
table<-left_join(tot,obs, by="Plant_Nickname")%>%
select(-Day_of_Year.x, -Day_of_Year.y, -Common_Name.x)
ggplot(table,aes(x=n.x,y=n.y)) +
geom_point(aes(col=Common_Name.y)) + geom_smooth(method="lm") +
xlab("Total Observations")+ylab("Number of Observers")
u1 <- rnorm(30)
usq<-0
for(i in 1:10)
{
usq[i]<-u1[i]*u1[i] # i-th element of u1 squared into i-th position of usq
print(usq[i])
}
for(i in 2001:2014)){
if (AirT>0) {
}
for(i in 2001:2014){
if (weather$AirT>0) {
rle(weather$AirT>0, 7)
}
}
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
setwd("~/Documents/git/springfreeze")
weather<-read.csv("input/WeatherData.csv",header=TRUE)
weather<- weather %>%
filter(Site == "hf") %>%
filter(Year > 2000) %>%
filter(JD > 60) %>%
filter(JD < 181)
for(i in 2001:2014){
if (weather$AirT>0) {
rle(weather$AirT>0, 7)
}
}
for(i in 2001:2014){
if (weather$AirT>0) {
rle(weather$AirT>0)
}
}
warning()
for(i in 2001:2014){
ifelse (weather$AirT>0, TRUE, FALSE)
}
print(i)
for(i in unique(budburst$year)){
ifelse (weather$AirT>0, TRUE, FALSE)
}
for(i in unique(weather$year)){
ifelse (weather$AirT>0, TRUE, FALSE)
}
print(i)
View(weather)
for(i in unique(weather$Year)){
ifelse (weather$AirT>0, TRUE, FALSE)
}
print(i)
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
warm<- rle(weather$AirT > 0)
dxx$inst<-tall(group_by(warm, Year), sort = TRUE)
}
print(i)
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
warm<- rle(weather$AirT > 0)
dxx$inst<-tally(group_by(warm, Year), sort = TRUE)
}
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
warm<- rle(weather$AirT > 0)
dxx$inst<-tally((warm, Year), sort = TRUE)
}
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
warm<- rle(weather$AirT > 0)
dxx$inst<-tally(warm, sort = TRUE)
}
z <- c(TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE)
rle(z)
rle(as.character(z))
print(rle(z), prefix = "..| ")
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
ifelse(weather$AirT>0, TRUE, FALSE)
warm<- rle(weather$AirT)
dxx$inst<-tally(warm, sort = TRUE)
}
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
ifelse(weather$AirT>0, TRUE, FALSE)
warm<- rle(as.character(weather$AirT))
dxx$inst<-tally(warm, sort = TRUE)
}
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
ifelse(weather$AirT>0, TRUE, FALSE)
warm<- rle(as.character(AirT))
dxx$inst<-tally(warm, sort = TRUE)
}
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
ifelse(weather$AirT>0, TRUE, FALSE)
}
print(i)
for(i in unique(weather$Year)){
dxx<-weather[weather$year == i,]
dxx$warm<- ifelse(weather$AirT>0, 1, 0)
}
for(i in unique(weather$AirT)){
dxx<-weather[weather$year == i,]
dxx$warm<- ifelse(weather$AirT>0, 1, 0)
}
for(i in 2001:2014){
dxx<-weather[weather$year == i,]
dxx$warm<- ifelse(weather$AirT>0, 1, 0)
}
for(i in 2001:2014){
dxx<-weather[weather$year == i,]
dxx$warm<- ifelse(weather$AirT>0, x, NA)
}
dxx$warm<- ifelse(weather$AirT>0, x, NA)
dxx$warm<- ifelse(weather$AirT>0, 1, 0)
dxx<-weather[weather$year == i,]
dxx$warm<- ifelse(weather$AirT>0, weather, NA)
weather$warm<- ifelse(weather$AirT>0, weather, NA)
View(weather)
weather$warm<- ifelse(weather$AirT>0, 1, 0)
View(weather)
for(i in 2001:2014){
weather$warm<- ifelse(weather$AirT>0, 1, 0)
dxx<- rle(weather$warm)
wh <- which(dxx$lengths >= 7)
}
print(i)
weather$warm<- ifelse(weather$AirT>0, 1, 0)
dxx<- rle(weather$warm)
print(dxx)
weather$inst<- rle(as.character(weather$warm))
View(weather)
inst<- rle(as.character(weather$warm))
inst<- rle(table(weather$warm))
inst<- rle(as.data.frame(table(weather$warm)))
weather$warm<- ifelse(weather$AirT>0, 1, 0)
weather<-na.omit(weather)
View(weather)
weather$inst<-length(weather[weather==1])
weather$inst<-length(weather[warm==1])
weather$inst<-table(weather)["1"]
weather$inst<-table(weather$warm)["1"]
View(weather)
weather$inst<-length(weather$warm)["1"]
View(weather)
weather$inst<-length(weather[weather$warm=="1"])
weather$inst<-length(weather)[weather$warm=="1"])
