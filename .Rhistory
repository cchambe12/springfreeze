sitewarm = 0
sitephoto = 0
sitechill1 = -0.5
sitechill2 = -1
warmphoto = 5 # positive 3.5. So at the warm level, the effect of longer days is muted by 3.5 days.
warmchill1 = 5 # both positive ~ 10.
warmchill2 = 5
photochill1 = 1 # from stan results
photochill2 = 1
######## SD for each treatment
sitediff.sd = 1.5
warmdiff.sd = 1
photodiff.sd = 1
chill1diff.sd = 1.5
chill2diff.sd = 1.5
# interactions. 9 two-way interactions
sitewarm.sd = 1
sitephoto.sd = 1
sitechill1.sd = 2
sitechill2.sd = 2
warmphoto.sd = 1
warmchill1.sd = 1.5
warmchill2.sd = 1.5
photochill1.sd = 1
photochill2.sd = 1
mm <- model.matrix(~(site+warm+photo+chill1+chill2)^2, data.frame(warm, photo))
# remove last column, chill1 x chill2, empty
mm <- mm[,-grep("chill1:chill2", colnames(mm))]
colnames(mm)
coeff <- c(1, sitediff, warmdiff, photodiff, chill1diff, chill2diff,
sitewarm, sitephoto, sitechill1, sitechill2,
warmphoto, warmchill1, warmchill2,
photochill1, photochill2
)
risk <- rnorm(n = length(warm), mean = mm %*% coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
(fake <- data_frame(risk, site, warm, photo, chill1, chill2))
summary(lm(risk ~ (site+warm+photo+chill1+chill2)^2, data = fake)) # sanity check
##### Again, now with species now.
baseinter = 20 # baseline intercept across all species for DVR
spint <- baseinter + c(1:nsp)-mean(1:nsp) # different intercepts by species
fake <- vector()
for(i in 1:nsp){ # loop over species, as these are the random effect modeled
# Give species different difference values, drawn from normal. Could make dataframe of diffs and diff.sds, and use apply..
coeff <- c(spint[i],
rnorm(1, sitediff, sitediff.sd),
rnorm(1, warmdiff, warmdiff.sd),
rnorm(1, photodiff, photodiff.sd),
rnorm(1, chill1diff, chill1diff.sd),
rnorm(1, chill2diff, chill2diff.sd),
rnorm(1, sitewarm, sitewarm.sd),
rnorm(1, sitephoto, sitephoto.sd),
rnorm(1, sitechill1, sitechill1.sd),
rnorm(1, sitechill2, sitechill2.sd),
rnorm(1, warmphoto, warmphoto.sd),
rnorm(1, warmchill1, warmchill1.sd),
rnorm(1, warmchill2, warmchill2.sd),
rnorm(1, photochill1, photochill1.sd),
rnorm(1, photochill2, photochill2.sd)
)
risk <- rnorm(n = length(warm), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(risk, sp = i, site, warm, photo, chill1, chill2)
fake <- rbind(fake, fakex)
}
summary(lm(risk ~ (site+warm+photo+chill1+chill2)^2, data = fake)) # sanity check
# now fix the levels to 0/1 (not 1/2) as R does
fake$site <- as.numeric(fake$site)
fake$site[fake$site==1] <- 0
fake$site[fake$site==2] <- 1
fake$warm <- as.numeric(fake$warm)
fake$warm[fake$warm==1] <- 0
fake$warm[fake$warm==2] <- 1
fake$photo <- as.numeric(fake$photo)
fake$photo[fake$photo==1] <- 0
fake$photo[fake$photo==2] <- 1
summary(lm(risk ~ (site+warm+photo+chill1+chill2)^2, data = fake)) # double sanity check
#summary(lmer(bb ~ (site|sp) + (warm|sp) + (photo|sp) + (chill1|sp) + (chill2|sp), data = fake)) # too hard for lmer.
save(list=c("fake"), file = "Fake Budburst.RData")
#write.csv(fake, file="~/Documents/git/springfreeze/output/fakedata_exp.csv", row.names = FALSE)
write.csv(fake, file="~/Documents/git/springfreeze/output/fakedata_exp.csv", row.names = FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
#library(memisc) # for getSummary
#library(xtable)
#library(scales) # for alpha
library(ggplot2)
library(rstan)
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/fakedata_exp.csv", header=TRUE)
dxb <- dx[!is.na(dx$risk),]
unique(dxb$site)
dxb$site[dxb$site==1] <- 0
dxb$site[dxb$site==2] <- 1
risk = dxb$risk # dvr as response
warm = as.numeric(dxb$warm)
site = as.numeric(dxb$site)
sp = as.numeric(dxb$sp)
photo = as.numeric(dxb$photo)
chill1 = as.numeric(dxb$chill1)
chill2 = as.numeric(dxb$chill2)
N = length(risk)
n_sp = length(unique(dxb$sp))
n_site = length(unique(dxb$site))
datalist.b<-list(risk=risk, warm=warm, site=site, sp=sp, photo=photo, chill1=chill1, chill2=chill2, N=N, n_sp=n_sp, n_site=n_site)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan', ### change when divergent transitions improve!!
data = datalist.b, warmup=1500, iter = 2000, chains = 2,
control = list(adapt_delta = 0.99))
sumerb <- summary(doym.b)$summary
sumerb[grep("mu_", rownames(sumerb)),]
rm(list=ls())
options(stringsAsFactors=FALSE)
# Fake data for buburst stan work #
library(dplyr)
setwd("~/Documents/git/springfreeze/scripts/stan")
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: same as experiment, with two sites, 28 species, two levels each of warming and photoperiod, and three levels of chilling. 2016-04-01 adding interactions. This ends up generating expected differences, but variation in effect sizes across species is minimal currently.
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
nsp = 9
nsite = 2
nwarm = 2
nphoto = 2
nchill = 3 ### should this be 3? Am I including all treatments or just the two?
rep = 6 # within each combination of treatments.
(ntot = nsite*nwarm*nphoto*nchill*rep) # 792 rows; 22k rows across species
# Build up the data frame
site = gl(nsite, rep, length=ntot)
warm = gl(nwarm, rep*nsite, length = ntot)
photo = gl(nphoto, rep*nwarm*nsite, length = ntot)
chill = gl(nchill, rep*nwarm*nphoto*nsite, length = ntot)
chill1 = ifelse(chill == 2, 1, 0)
chill2 = ifelse(chill == 3, 1, 0)
treatcombo = paste(warm, photo, chill1, chill2, sep = "_")
(d <- data.frame(site, warm, photo, chill1, chill2, treatcombo)) # critical coding error here!
###### Set up differences for each level
sitediff = 2
warmdiff = -10 # days earlier from 1 to 2
photodiff = -10
chill1diff = -5
chill2diff = -4
# interactions. 9 two-way interactions
sitewarm = 0
sitephoto = 0
sitechill1 = 0
sitechill2 = 0
warmphoto = 5 # positive 3.5. So at the warm level, the effect of longer days is muted by 3.5 days.
warmchill1 = 3 # both positive ~ 10.
warmchill2 = 3
photochill1 = 2 # from stan results
photochill2 = 2
######## SD for each treatment
sitediff.sd = 1
warmdiff.sd = 1
photodiff.sd = 1
chill1diff.sd = 1
chill2diff.sd = 1
# interactions. 9 two-way interactions
sitewarm.sd = 1
sitephoto.sd = 1
sitechill1.sd = 1
sitechill2.sd = 1
warmphoto.sd = 1
warmchill1.sd = 1
warmchill2.sd = 1
photochill1.sd = 1
photochill2.sd = 1
mm <- model.matrix(~(site+warm+photo+chill1+chill2)^2, data.frame(warm, photo))
# remove last column, chill1 x chill2, empty
mm <- mm[,-grep("chill1:chill2", colnames(mm))]
colnames(mm)
coeff <- c(1, sitediff, warmdiff, photodiff, chill1diff, chill2diff,
sitewarm, sitephoto, sitechill1, sitechill2,
warmphoto, warmchill1, warmchill2,
photochill1, photochill2
)
risk <- rnorm(n = length(warm), mean = mm %*% coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
(fake <- data_frame(risk, site, warm, photo, chill1, chill2))
summary(lm(risk ~ (site+warm+photo+chill1+chill2)^2, data = fake)) # sanity check
##### Again, now with species now.
baseinter = 20 # baseline intercept across all species for DVR
spint <- baseinter + c(1:nsp)-mean(1:nsp) # different intercepts by species
fake <- vector()
for(i in 1:nsp){ # loop over species, as these are the random effect modeled
# Give species different difference values, drawn from normal. Could make dataframe of diffs and diff.sds, and use apply..
coeff <- c(spint[i],
rnorm(1, sitediff, sitediff.sd),
rnorm(1, warmdiff, warmdiff.sd),
rnorm(1, photodiff, photodiff.sd),
rnorm(1, chill1diff, chill1diff.sd),
rnorm(1, chill2diff, chill2diff.sd),
rnorm(1, sitewarm, sitewarm.sd),
rnorm(1, sitephoto, sitephoto.sd),
rnorm(1, sitechill1, sitechill1.sd),
rnorm(1, sitechill2, sitechill2.sd),
rnorm(1, warmphoto, warmphoto.sd),
rnorm(1, warmchill1, warmchill1.sd),
rnorm(1, warmchill2, warmchill2.sd),
rnorm(1, photochill1, photochill1.sd),
rnorm(1, photochill2, photochill2.sd)
)
risk <- rnorm(n = length(warm), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(risk, sp = i, site, warm, photo, chill1, chill2)
fake <- rbind(fake, fakex)
}
summary(lm(risk ~ (site+warm+photo+chill1+chill2)^2, data = fake)) # sanity check
# now fix the levels to 0/1 (not 1/2) as R does
fake$site <- as.numeric(fake$site)
fake$site[fake$site==1] <- 0
fake$site[fake$site==2] <- 1
fake$warm <- as.numeric(fake$warm)
fake$warm[fake$warm==1] <- 0
fake$warm[fake$warm==2] <- 1
fake$photo <- as.numeric(fake$photo)
fake$photo[fake$photo==1] <- 0
fake$photo[fake$photo==2] <- 1
summary(lm(risk ~ (site+warm+photo+chill1+chill2)^2, data = fake)) # double sanity check
#summary(lmer(bb ~ (site|sp) + (warm|sp) + (photo|sp) + (chill1|sp) + (chill2|sp), data = fake)) # too hard for lmer.
save(list=c("fake"), file = "Fake Budburst.RData")
#write.csv(fake, file="~/Documents/git/springfreeze/output/fakedata_exp.csv", row.names = FALSE)
write.csv(fake, file="~/Documents/git/springfreeze/output/fakedata_exp.csv", row.names = FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
#library(memisc) # for getSummary
#library(xtable)
#library(scales) # for alpha
library(ggplot2)
library(rstan)
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/fakedata_exp.csv", header=TRUE)
unique(dxb$site)
dxb$site[dxb$site==1] <- 0
dxb$site[dxb$site==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
risk = dxb$risk # dvr as response
warm = as.numeric(dxb$warm)
site = as.numeric(dxb$site)
sp = as.numeric(dxb$sp)
photo = as.numeric(dxb$photo)
chill1 = as.numeric(dxb$chill1)
chill2 = as.numeric(dxb$chill2)
N = length(risk)
n_sp = length(unique(dxb$sp))
n_site = length(unique(dxb$site))
datalist.b<-list(risk=risk, warm=warm, site=site, sp=sp, photo=photo, chill1=chill1, chill2=chill2, N=N, n_sp=n_sp, n_site=n_site)
dxb <- dx[!is.na(dx$risk),]
unique(dxb$site)
dxb$site[dxb$site==1] <- 0
dxb$site[dxb$site==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
risk = dxb$risk # dvr as response
warm = as.numeric(dxb$warm)
site = as.numeric(dxb$site)
sp = as.numeric(dxb$sp)
photo = as.numeric(dxb$photo)
chill1 = as.numeric(dxb$chill1)
chill2 = as.numeric(dxb$chill2)
N = length(risk)
n_sp = length(unique(dxb$sp))
n_site = length(unique(dxb$site))
datalist.b<-list(risk=risk, warm=warm, site=site, sp=sp, photo=photo, chill1=chill1, chill2=chill2, N=N, n_sp=n_sp, n_site=n_site)
# 1. Budburst day.
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan', ### change when divergent transitions improve!!
data = datalist.b, warmup=1500, iter = 2000, chains = 2,
control = list(adapt_delta = 0.99))
sumerb <- summary(doym.b)$summary
sumerb[grep("mu_", rownames(sumerb)),]
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
forlatex = TRUE # set to FALSE if just trying new figures, TRUE if outputting for final
runstan = TRUE # set to TRUE to actually run stan models. FALSE if loading from previous runs
# Analysis of bud burst experiment 2015.
#library(memisc) # for getSummary
#library(xtable)
#library(scales) # for alpha
library(ggplot2)
library(rstan)
library(png) # readPNG for Fig 1
library(rstanarm)
library(shinystan)
library(bayesplot)
library(dplyr)
setwd("~/Documents/git/springfreeze/")
source('scripts/stan/savestan.R')
dx<-read.csv("output/dvrdata_danf.csv", header=TRUE)
dx$sp <- as.numeric(as.factor(dx$sp))
dx$site <- as.numeric(as.factor(dx$site))
dx$risk<-dx$lday-dx$bday
dx$chill<-dx$chilling
levels(dx$warm) = c(0,1); levels(dx$photo) = c(0, 1); levels(dx$chill) = 1:3; levels(dx$site) = 1:2
dx$warm <- as.numeric(dx$warm)
dx$photo <- as.numeric(dx$photo)
dx$chill <- as.numeric(dx$chill)
dx$site<- as.numeric(dx$site)
dx$chill1 = ifelse(dx$chill == 1, 1, 0)
dx$chill2 = ifelse(dx$chill == 2, 1, 0)
with(dx, table(chill1, chill2)) # all three levels in here
dxb <- dx[!is.na(dx$risk),]
unique(dxb$site)
dxb$site[dxb$site==1] <- 0
dxb$site[dxb$site==2] <- 1
unique(dxb$chill1)
unique(dxb$chill2)
risk = dxb$risk # dvr as response
warm = as.numeric(dxb$warm)
site = as.numeric(dxb$site)
sp = as.numeric(dxb$sp)
photo = as.numeric(dxb$photo)
chill1 = as.numeric(dxb$chill1)
chill2 = as.numeric(dxb$chill2)
N = length(risk)
n_sp = length(unique(dxb$sp))
n_site = length(unique(dxb$site))
datalist.b<-list(risk=risk, warm=warm, site=site, sp=sp, photo=photo, chill1=chill1, chill2=chill2, N=N, n_sp=n_sp, n_site=n_site)
doym.b <- stan('scripts/stan/dvr_sp_chill_inter_pool.stan', ### change when divergent transitions improve!!
data = datalist.b, warmup=1500, iter = 2000, chains = 2,
control = list(adapt_delta = 0.99))
sumerb <- summary(doym.b)$summary
sumerb[grep("mu_", rownames(sumerb)),]
betas <- as.matrix(doym.b, pars = c("mu_b_warm","mu_b_photo","mu_b_chill1", "mu_b_chill2",
"b_warm", "b_photo", "b_chill1", "b_chill2"))
mcmc_intervals(betas[,1:4])
betas <- as.matrix(doym.b, pars = c("mu_b_warm","mu_b_photo","mu_b_chill1", "mu_b_chill2", "mu_b_inter_wp", "mu_b_inter_wc1",
"mu_b_inter_wc2", "mu_b_inter_pc1", "mu_b_inter_pc2", "b_inter_wp_ncp", "b_inter_wc1_ncp", "b_inter_wc2_ncp",
"b_warm", "b_photo", "b_chill1", "b_chill2", "b_inter_pc1_ncp", "b_inter_pc2_ncp"))
mcmc_intervals(betas[,1:4])
mcmc_intervals(betas[,1:18])
mcmc_intervals(betas[,1:10])
launch_shinystan(doym.b)
mu_params <- c("mu_b_warm","mu_b_photo","mu_b_chill1","mu_b_chill2","mu_b_site",
"mu_b_inter_wp",
"mu_b_inter_wc1","mu_b_inter_wc2",
"mu_b_inter_pc1","mu_b_inter_pc2",
"mu_b_inter_ws","mu_b_inter_ps",
"mu_b_inter_sc1","mu_b_inter_sc2")
meanzb <- sumerb[mu_params,col4fig]
col4fig <- c("mean","sd","25%","50%","75%","Rhat")
col4table <- c("mean","sd","2.5%","50%","97.5%","Rhat")
mu_params <- c("mu_b_warm","mu_b_photo","mu_b_chill1","mu_b_chill2","mu_b_site",
"mu_b_inter_wp",
"mu_b_inter_wc1","mu_b_inter_wc2",
"mu_b_inter_pc1","mu_b_inter_pc2",
"mu_b_inter_ws","mu_b_inter_ps",
"mu_b_inter_sc1","mu_b_inter_sc2")
meanzb <- sumerb[mu_params,col4fig]
rownames(meanzb) = c("Forcing Temperature",
"Photoperiod",
"Chilling 4°",
"Chilling 1.5°C",
"Site",
"Forcing x Photoperiod",
"Forcing x Chilling 4°C",
"Forcing x Chilling 1.5°C",
"Photoperiod x Chilling 4°C",
"Photoperiod x Chilling 1.5°C",
"Forcing x Site",
"Photoperiod x Site",
"Site x Chilling 4°C",
"Site x Chilling 1.5°C"
)
meanzb.table <- sumerb[mu_params,col4table]
row.names(meanzb.table) <- row.names(meanzb)
View(meanzb.table)
pdf(file.path(figpath, "Fig1_bb_lo.pdf"), width = 7, height = 8)
par(mar=rep(1,4))
layout(matrix(c(1, 2, 3, # use layout instead of par(mfrow for more control of where labels end up
4, 5, 6,
7, 8, 9),ncol = 3, byrow = T),
widths = c(1, 4, 4),
heights = c(4, 4, 1))
plotblank = function(){plot(1:10, type="n",bty="n",xaxt="n",yaxt="n",ylab="",xlab="")}
plotblank()
text(5,5, "Budburst \n Change (days) due to 5° warming", font = 2, srt = 90) # \n\n add two line breaks
plotlet( "b_photo", "b_warm",
#  ylab = "Advance due to 5° warming",
# xlab = "Advance due to 4 hr longer photoperiod",
ylim = c(-27, 0.5),
xlim = c(-16, 0.5),
#  xaxt="n",
group = treeshrub,
data = sumerb)
library(memisc) # for getSummary
library(xtable)
library(scales) # for alpha
install.packages("memisc")
library(memisc) # for getSummary
plotlet( "b_photo", "b_warm",
#  ylab = "Advance due to 5° warming",
# xlab = "Advance due to 4 hr longer photoperiod",
ylim = c(-27, 0.5),
xlim = c(-16, 0.5),
#  xaxt="n",
group = treeshrub,
data = sumerb)
plot( "b_photo", "b_warm",
#  ylab = "Advance due to 5° warming",
# xlab = "Advance due to 4 hr longer photoperiod",
ylim = c(-27, 0.5),
xlim = c(-16, 0.5),
#  xaxt="n",
group = treeshrub,
data = sumerb)
plot( "b_photo", "b_warm",
#  ylab = "Advance due to 5° warming",
# xlab = "Advance due to 4 hr longer photoperiod",
ylim = c(-27, 0.5),
xlim = c(-16, 0.5),
#  xaxt="n", ,
data = sumerb)
legend("topleft", bty = "n", inset = 0.035, legend = "A.", text.font=2)
legend("bottomright",
pch = "+",
col = colz,
legend = c("Shrubs","Trees"),
inset = 0.02,
bg = 'white')
colz = c("brown", "blue3")
legend("bottomright",
pch = "+",
col = colz,
legend = c("Shrubs","Trees"),
inset = 0.02,
bg = 'white')
plot("b_chill1", "b_warm",
# ylab = "Advance due to 5° warming",
#  xlab = "Advance due to 30d 4° chilling",
ylim = c(-27, 0.5),
xlim = c(-28, -8),
yaxt="n",
# xaxt="n",
group = treeshrub,
data = sumerb)
plot("b_chill1", "b_warm",
# ylab = "Advance due to 5° warming",
#  xlab = "Advance due to 30d 4° chilling",
ylim = c(-27, 0.5),
xlim = c(-28, -8),
yaxt="n",
# xaxt="n",,
data = sumerb)
plot("b_chill1", "b_warm",
# ylab = "Advance due to 5° warming",
#  xlab = "Advance due to 30d 4° chilling",
#ylim = c(-27, 0.5),
#xlim = c(-28, -8),
yaxt="n",
# xaxt="n",,
data = sumerb)
plotblank()
text(5,5, "Budburst \n Change (days) due to 5° warming", font = 2, srt = 90) # \n\n add two line breaks
plot( "b_photo", "b_warm",
#  ylab = "Advance due to 5° warming",
# xlab = "Advance due to 4 hr longer photoperiod",
#ylim = c(-27, 0.5),
#xlim = c(-16, 0.5),
#  xaxt="n", ,
data = sumerb)
legend("topleft", bty = "n", inset = 0.035, legend = "A.", text.font=2)
legend("bottomright",
pch = "+",
col = colz,
legend = c("Shrubs","Trees"),
inset = 0.02,
bg = 'white')
plot("b_chill1", "b_warm",
# ylab = "Advance due to 5° warming",
#  xlab = "Advance due to 30d 4° chilling",
#ylim = c(-27, 0.5),
#xlim = c(-28, -8),
yaxt="n",
# xaxt="n",,
data = sumerb)
axis(2, seq(0, -25, by = -5), labels = FALSE)
legend("topleft", bty = "n", inset = 0.035, legend = "B.", text.font=2)
plotblank()
plot( "b_photo", "b_warm",
#  ylab = "Advance due to 5° warming",
# xlab = "Advance due to 4 hr longer photoperiod",
ylim = c(-15, 2),
xlim = c(-15, 2),
#  xaxt="n", ,
data = sumerb)
ggplot(sumerb, aes(x= b_photo, y = b_warm)),
#  ylab = "Advance due to 5° warming",
# xlab = "Advance due to 4 hr longer photoperiod",
ylim = c(-15, 2),
xlim = c(-15, 2),
#  xaxt="n", ,
data = sumerb)
ggplot(sumerb, aes(x= b_photo, y = b_warm))
View(sumerb)
write.csv(sumerb, file="~/Documents/git/springfreeze/output/model_results.csv", row.names = FALSE)
